[{"question":" Write a program to find the factorial of a number\n","solution":"num = 13\nfactorial = 1\n\nif num < 0:\n   print(\"No factorials for negative numbers!\")\n\nelif num == 0:\n   print(\"The factorial of 0 is 1\")\n\nelse:\n   for i in range(1,num + 1):\n       factorial = factorial*i\n   print(f\"The factorial of {num} is {factorial}\")\n\n\n"},{"question":" Write a python function to print whether a number is negative, positive or zero\n","solution":"def check_pnz(num):\n    if num > 0:\n       print(\"Positive number\")\n\n    elif num == 0:\n       print(\"Zero\")\n\n    else:\n       print(\"Negative number\")\n\n\n"},{"question":" Write a program to swap first and last elements in a list\n","solution":"my_list = [1, 2, 3, 4, 5, 6]\nmy_list[0], my_list[-1] = my_list[-1], my_list[0]\n\n\n"},{"question":" Write a python function to remove all the odd numbers from a list and return the remaining list\n","solution":"\ndef remove_odd(my_list):\n    result = list(filter(lambda x: (x % 2 == 0), my_list))\n    return result\n\n\n"},{"question":" Write a python function to remove all the even numbers from a list and return the remaining list\n","solution":"\ndef remove_even(my_list):\n    result = list(filter(lambda x: (x % 2 != 0), my_list))\n    return result\n\n\n"},{"question":" Write a function that prints a given value, n number of times\n","solution":"def print_n(val, n):\n    for _ in range(n):\n        print(val)\n\n\n"},{"question":" Write a function to calculate simple interest, given p, r, t\n","solution":"def simp_int(p, r, t):\n    interest = (p*r*t)\/100\n    return interest\n\n\n"},{"question":" Write a program to extract and print digits of a number in reverse order. The number is input from user.\n","solution":"\nnum = int(input(\"Enter a number with multiple digit: \"))\nn=0\nwhile num>0:\n    a = num%10\n    num = num - a\n    num = num\/10\n    print(int(a),end=\"\")\n    n = n + 1\n\n"},{"question":" write a Python program to flatten a shallow list\n","solution":"import itertools\noriginal_list = [[2,4,3],[1,5,6], [9], [7,9,0], [1,2,3,4]]\nnew_merged_list = list(itertools.chain(*original_list))\nprint(f'merged list\/flatten:{new_merged_list}')\n\n"},{"question":" write a Python program to merge two dictionaries\n","solution":"\nd1 = {'a': 100, 'b': 200}\nd2 = {'x': 300, 'y': 200}\nd = d1.copy()\nd.update(d2)\nprint(f'merge two dictionaries:{d}')\n\n"},{"question":" write a Python Program to Check if a Number is Positive, Negative or 0\n","solution":"num = 10\nif num > 0:\n   print(\"Positive number\")\nelif num == 0:\n   print(\"Zero\")\nelse:\n   print(\"Negative number\")\n\n"},{"question":" write a python program to break when the num is perfectly divisible\n","solution":"i = 1\nwhile True:\n    if i%3 == 0:\n        break\n    print(i)\n \n    i+= 1\n\n"},{"question":" write a python program to sort tuple values\n","solution":"a=(2,3,1,5)\ntuple_sorted = sorted(a)\nprint(tuple(tuple_sorted))\n\n"},{"question":" write a list comprehension for printing rows into columns and vv\n","solution":"\nl=[[1 ,2, 3], [4, 5, 6], [7, 8, 9]]\nprint([[row[i] for row in l] for i in range(3)])\n\n"},{"question":" write a python program to use python lambda function\n","solution":"lamb = lambda x: x ** 3\nprint(lamb(5))\n\n"},{"question":" write a python program to delete an dictionary element\n","solution":"a={1:5,2:3,3:4}\na.pop(3)\nprint(a)\n\n"},{"question":"  write a python program to check is an title\n","solution":"print('HelloWorld'.istitle())\n\n"},{"question":"  write a python program to check is all are digit\n","solution":"print('0xa'.isdigit())\n\n"},{"question":" write a python program to explain the generator\n","solution":"def f11(x):\n    yield x+1\ng=f11(8)\nprint(next(g))\n\n"},{"question":" write a python program to replace blank space to 1\n","solution":"a = re.compile('[0-9]')\nz= a.findall('3 trees')\nprint(z)\n\n"},{"question":" write a python program to print the ascii value of a string\n","solution":"print([ord(ch) for ch in 'abc'])\n\n"},{"question":" write a python program to sort using list comprehensive\n","solution":"pairs = [(1, 'one'), (2, 'two'), (3, 'three'), (4, 'four')]\npairs.sort(key=lambda pair: pair[1])\nprint(pairs)\n\n"},{"question":" write a python program to del the first element of the array\/list\n","solution":"a = [-1, 1, 66.25, 333, 333, 1234.5]\ndel a[0]\nprint(a)\n"},{"question":" write a python program to replace the first character of a given word\n","solution":"word = \"goal\"\nword = \"f\" + word[1:]\nprint(word)\n"},{"question":" write a python program that would print the first n positive integers using a for loop\n","solution":"n = 62\nfor num in range(n):\n    print(num)\n\n\n"},{"question":" write a python function that returns the square of a given input number\n","solution":"def square(x):\n    return x**2\n\n\n"},{"question":" write a python program that would swap variable values\n","solution":"a = 10\nb = 15\na, b = b, a\n\n\n"},{"question":" Write a function to return the area of a equilateral triangle\n","solution":"def cal_eq_triangle_area(a:float)->float:\n    if a:\n        return (3**(1\/2))*(a**2)\/4\n    else:\n        return None\n\n"},{"question":" Write a function to return the area of a right angle triangle\n","solution":"\ndef cal_rt_triangle_area(base:float,height:float)->float:\n    if base and height:\n        return (base*height)\/2\n    else:\n        return None\n\n"},{"question":" Write a function to return the area of a trapezium with base a base b and height h between parallel sides\n","solution":"def cal_area_trapezium(a,b,h):\n    return h*(a+b)\/2\n\n"},{"question":" Write a function to return the perimeter of a triangle\n","solution":"def cal_perimeter_triangle(s1,s2,s3):\n    return s1+s2+s3\n\n"},{"question":" Write a function to return the perimeter of a isoscales triangle\n","solution":"def cal_perimeter_iso_triangle(s1,s2):\n    return 2*s1+s2\n\n"},{"question":" Write a function to return the volume of a hemi sphere\n","solution":"def cal_hemisphere_volume(radius:float)->float:\n    pi=3.14\n    return (2\/3)*pi*(radius**3)\n\n"},{"question":" Write a function to calculate the current in the curcit where the resistance is R and voltage is V\n","solution":"def cal_current(resistance:float, voltage:float)->float:\n    return voltage\/resistance\n\n"},{"question":" Write a function to calculate the total resistance of resistances in series in a given list\n","solution":"def cal_total_res_in_series(res_list:list)->float:\n    return sum(res_list)\n\n"},{"question":" Write a function to calculate the volume V of ideal gas based on ideal gas equation Pressure P and Tempreature T given\n","solution":"def find_volume_of_ideal_gas(pressure:float, temp:float,n:float)->float:\n    r = 8.3145 # gas constant R\n    return (n*r*temp)\/pressure\n\n"},{"question":" Write a function to calculate the new selling price based on discount percentage\n","solution":"def cal_sp_after_discount(sp:float,discount:float)->float:\n    return sp*(1 - discount\/100)\n\n"},{"question":" Write a function to calculate the density given mass and volume\n","solution":"def cal_density(mass,volume):\n    return (mass\/volume)\n\n"},{"question":" Write a function to convert the temprature celsius 'c' to fahrenheit 'f' or fahrenheit to celsius\n","solution":" def temp_converter(temp,temp_given_in = 'f'):\n    # Return the converted temprature\n    if temp_given_in.lower() == 'f': # Convert to C\n        return (temp - 32) * (5\/9)\n    else: # Convert to F\n        return (temp * 9\/5) + 32\n\n\n\n"},{"question":"python program for vertical concatenating of mqatrix\n","solution":"def vertical_concatenation():\n    test_list = [[\"this\",\"is\"], [\"program\", \"for\"], [\"vertical\",\"concatenation\"]]\n    print(\"The original list : \" + str(test_list))\n    res = []\n    N = 0\n    while N != len(test_list):\n        temp = ''\n        for idx in test_list:\n            try: temp = temp + idx[N]\n            except IndexError: pass\n        res.append(temp)\n        N = N + 1\n    res = [ele for ele in res if ele]\n    print(\"List after column Concatenation : \" + str(res))\nvertical_concatenation()\n\n\n"},{"question":" python code to print all possible subarrays using recursion\n","solution":"\ndef printSubArrays(arr, start, end):\n    if end == len(arr):\n        return\n    elif start > end:\n        return printSubArrays(arr, 0, end + 1)\n    else:\n        print(arr[start:end + 1])\n        return printSubArrays(arr, start + 1, end)\n\narr = [1, 2, 3]\nprintSubArrays(arr, 0, 0)\n\n"},{"question":" Python Program to find sum of nested list using Recursion\n","solution":"total = 0\ndef sum_nestedlist(l):\n    global total\n    for j in range(len(l)):\n        if type(l[j]) == list:\n\n            sum_nestedlist(l[j])\n        else:\n            total += l[j]\n\nsum_nestedlist([[1, 2, 3], [4, [5, 6]], 7])\nprint(total)\n\n"},{"question":" python code to remove punctuation from the string\n","solution":"def r_punc():\n    test_str = \"end, is best : for ! Nlp ;\"\n    print(\"The original string is : \" + test_str)\n    punc = '''!()-[]{};:'\"\\, <>.\/?@#$%^&*_~'''\n    for ele in test_str:\n        if ele in punc:\n            test_str = test_str.replace(ele, \"\")\n    print(\"The string after punctuation filter : \" + test_str)\n\n\nhtness_4\n\n\n"},{"question":" python function to print all time when angle between hour hand and minute\n","solution":"def printTime(theta):\n    for hh in range(0, 12):\n        for mm in range(0, 60):\n            if (calcAngle(hh, mm) == theta):\n                print(hh, \":\", mm, sep=\"\")\n                return\n    print(\"Input angle not valid.\")\n    return\ntheta = 90.0\nprintTime(theta)\n\n"},{"question":" write a python function to return dictionary of two lists using zip \n","solution":"def dict_using_comp(list1, list2):\n  dict_using_comp = {key:value for (key, value) in zip(list1, list2)} \n  return dict_using_comp\n\n"},{"question":"Write a function to get list of profanity words from Google profanity URL\n","solution":"def profanitytextfile():\n    url = \"https:\/\/github.com\/RobertJGabriel\/Google-profanity-words\/blob\/master\/list.txt\"\n    html = urlopen(url).read()\n    soup = BeautifulSoup(html, features=\"html.parser\")\n\n    textlist = []\n    table = soup.find('table')\n    trs = table.find_all('tr')\n    for tr in trs:\n        tds = tr.find_all('td')\n        for td in tds:\n            textlist.append(td.text)\n    return textlist\n\n"},{"question":"write a python program to find the biggest character in a string \n","solution":"bigChar = lambda word: reduce(lambda x,y: x if ord(x) > ord(y) else y, word)\n\n"},{"question":"write a python function to sort list using heapq \n","solution":"def heapsort(iterable):\n    from heapq import heappush, heappop\n    h = []\n    for value in iterable:\n        heappush(h, value)\n    return [heappop(h) for i in range(len(h))]\n\n"},{"question":" write a python function to list all unique elements, preserving order\n","solution":"def unique_everseen(iterable, key=None):\n    from itertools import filterfalse\n    # unique_everseen('AAAABBBCCDAABBB') --> A B C D\n    # unique_everseen('ABBCcAD', str.lower) --> A B C D\n    seen = set()\n    seen_add = seen.add\n    if key is None:\n        for element in filterfalse(seen.__contains__, iterable):\n            seen_add(element)\n            yield element\n    else:\n        for element in iterable:\n            k = key(element)\n            if k not in seen:\n                seen_add(k)\n                yield element\n\n"},{"question":" Write a function to Subtracts two lists element wise\n","solution":"def sub_listelements(l1:list, l2:list):\n    return [i-j for i, j in zip(l1,l2)]\n\n"},{"question":" Write a function that returns cosine value of the input\n","solution":"def derivative_cos(x:float)-> float:\n    import math\n    return -(math.sin(x))\n\n\n"},{"question":" Write a function that returns Gets the derivative of exponential of x\n","solution":"def derivative_exp(x:float) -> float:\n    import math\n    return math.exp(x)\n\n\n"},{"question":" Write a function that returns relu value of the input\n","solution":"def relu(x:float) -> float:\n    x = 0 if x < 0 else x\n    return x\n\n"},{"question":" Write a function to identify if value is present inside a dictionary or not\n","solution":"def check_value(d:dict, value)->bool:\n    return any(v == value for v in dict.values())\n\n"},{"question":" Write a function that returns a dictionary sorted descending by its values\n","solution":"def descending_dict_valuesort(d:dict):\n    return {key: val for key, val in sorted(d.items(), reverse=True, key = lambda ele: ele[1])}\n\n"},{"question":" Write a function that returns a dictionary sorted ascending by its keys\n","solution":"def ascending_dict_keysort(d:dict):\n    return {key: val for key, val in sorted(d.items(), key = lambda ele: ele[0])}\n\n"},{"question":" Write a function that joins elements of list\n","solution":"def join_elements(l:list)-> str:\n    return (''.join(str(l)))\n\n"},{"question":" Write a function that returns sum of all odd elements in the list\n","solution":"def sum_even_elements(l:list):\n    return sum([i for i in l if i%2==0])\n\n"},{"question":"8 write a program to break a list into chunks of size N\n","solution":"l = [1, 2, 3, 4, 5, 6, 7, 8, 9]  \nn = 4 \nx = [l[i:i + n] for i in range(0, len(l), n)]  \nprint(x)\n\n"},{"question":"13 write a program to convert into dictionary \n","solution":"def Convert(tup, di): \n    for a, b in tup: \n        di.setdefault(a, []).append(b) \n    return di \n      \ntups = [(\"A\", 10), (\"B\", 20), (\"C\", 30),  \n     (\"D\", 40), (\"E\", 50), (\"F\", 60)] \ndictionary = {} \nprint (Convert(tups, dictionary)) \n\n\n"},{"question":"15 write a program to Remove Tuples of Length K Using list comprehension \n","solution":"  \ntest_list = [(4, 5), (4, ), (8, 6, 7), (1, ), (3, 4, 6, 7)] \nprint(\"The original list : \" + str(test_list)) \nK = 1\nres = [ele for ele in test_list if len(ele) != K] \nprint(\"Filtered list : \" + str(res)) \n\n"},{"question":"16 write a program to find Maximum and Minimum K elements in Tuple \n","solution":"test_tup = (5, 20, 3, 7, 6, 8) \nprint(\"The original tuple is : \" + str(test_tup)) \nK = 2\ntest_tup = list(test_tup) \ntemp = sorted(test_tup) \nres = tuple(temp[:K] + temp[-K:]) \nprint(\"The extracted values : \" + str(res))  \n\n"},{"question":" initialising string \n","solution":"ini_string = \"123abcjw:, .@! eiw\"\n  \n"},{"question":" printing initial string \n","solution":"print (\"initial string : \", ini_string) \n  \nresult = re.sub('[\\W_]+', '', ini_string) \n  \n"},{"question":" Driver Code  \n","solution":"s = \"hello world\" \nprintWords(s)\n\n"},{"question":"32 write a program to replace vowels by next vowel using list comprehension + zip() \n","solution":"  \ntest_str = 'helloworld'\nprint(\"The original string is : \" + str(test_str)) \nvow = 'a e i o u'.split() \ntemp = dict(zip(vow, vow[1:] + [vow[0]])) \nres = \"\".join([temp.get(ele, ele) for ele in test_str]) \nprint(\"The replaced string : \" + str(res)) \n\n"},{"question":" initializing string  \n","solution":"test_str = \"HellowWorld\"\n\nprint(\"The original string is : \" + test_str) \nres = ', '.join(test_str[i:i + 2] for i in range(0, len(test_str), 2)) \n \nprint(\"The string after inserting comma after every character pair : \" + res) \n\n"},{"question":"37 write a program to remove i-th indexed character from a string \n","solution":"  \ndef remove(string, i):  \n  \n    a = string[ : i]  \n    b = string[i + 1: ] \n    return a + b \n     \n"},{"question":" Driver Code \n","solution":"if __name__ == '__main__': \n      \n    string = \"HellowWorld\"\n      \n    # Remove nth index element \n    i = 5\n    \n    # Print the new string \n    print(remove(string, i)) \n\n"},{"question":" driver code \n","solution":"print(checkString('helloworld')) \nprint(checkString('helloworld2020'))\n\n"},{"question":" Extract least frequency element \n","solution":"res = defaultdict(int) \nfor ele in test_list: \n   res[ele] += 1 \nmin_occ = 9999\nfor ele in res: \n    if min_occ > res[ele]: \n        min_occ = res[ele] \n        tar_ele = ele \n  \n"},{"question":"42 write a program to swap two variables\n","solution":"x = input('Enter value of x: ')  \ny = input('Enter value of y: ')  \n  \ntemp = x  \nx = y  \ny = temp  \n \nprint('The value of x after swapping: {}'.format(x))  \nprint('The value of y after swapping: {}'.format(y)) \n\n"},{"question":" check if the number of terms is valid  \n","solution":"if nterms <= 0:  \n   print(\"Plese enter a positive integer\")  \nelif nterms == 1:  \n   print(\"Fibonacci sequence:\")  \n   print(n1)  \nelse:  \n   print(\"Fibonacci sequence:\")  \n   print(n1,\",\",n2,end=', ')  \n   while count < nterms:  \n       nth = n1 + n2  \n       print(nth,end=' , ')  \n       # update values  \n       n1 = n2  \n       n2 = nth  \n       count += 1  \n       \n"},{"question":"53 write a program to find Armstrong number in an interval\n","solution":"\nlower = int(input(\"Enter lower range: \"))  \nupper = int(input(\"Enter upper range: \"))  \n  \nfor num in range(lower,upper + 1):  \n   sum = 0  \n   temp = num  \n   while temp > 0:  \n       digit = temp % 10  \n       sum += digit ** 3  \n       temp \/\/= 10  \n       if num == sum:  \n            print(num)  \n            \n"},{"question":"54 write a  program to find the sum of natural numbers\n","solution":"\nnum = int(input(\"Enter a number: \"))  \n  \nif num < 0:  \n   print(\"Enter a positive number\")  \nelse:  \n   sum = 0  \n   # use while loop to iterate un till zero  \n   while(num > 0):  \n       sum += num  \n       num -= 1  \n   print(\"The sum is\",sum)  \n\n"},{"question":"57 write a  program to convert decimal to binary, octal and hexadecimal\n","solution":"dec = int(input(\"Enter a decimal number: \"))  \n  \nprint(bin(dec),\"in binary.\")  \nprint(oct(dec),\"in octal.\")  \nprint(hex(dec),\"in hexadecimal.\"  \n\n"},{"question":"58 python program to find ascii value of a character\n","solution":"\nc = input(\"Enter a character: \")  \nprint(\"The ASCII value of '\" + c + \"' is\",ord(c))\n\n"},{"question":"62 write a program to sort the elements of the array\n","solution":"\narr = [5, 2, 8, 7, 1];     \ntemp = 0;    \nprint(\"Elements of original array: \");    \nfor i in range(0, len(arr)):    \n    print(arr[i], end=\" \");    \n     \nfor i in range(0, len(arr)):    \n    for j in range(i+1, len(arr)):    \n        if(arr[i] > arr[j]):    \n            temp = arr[i];    \n            arr[i] = arr[j];    \n            arr[j] = temp;    \n     \nprint();    \n     \nprint(\"Elements of array sorted in ascending order: \");    \nfor i in range(0, len(arr)):    \n    print(arr[i], end=\" \");   \n    \n"},{"question":"63 write a program to check if the given number is a disarium number\n","solution":"\ndef calculateLength(n):    \n    length = 0;    \n    while(n != 0):    \n        length = length + 1;    \n        n = n\/\/10;    \n    return length;    \n     \nnum = 175;    \nrem = sum = 0;    \nlen = calculateLength(num);    \n     \nn = num;    \n     \nwhile(num > 0):    \n    rem = num%10;    \n    sum = sum + int(rem**len);    \n    num = num\/\/10;    \n    len = len - 1;    \n     \nif(sum == n):    \n    print(str(n) + \" is a disarium number\");    \nelse:    \n    print(str(n) + \" is not a disarium number\");   \n    \n"},{"question":"66 write a program to transpose a matrix using a nested loop\n","solution":"\nX = [[12,7],\n    [4 ,5],\n    [3 ,8]]\n\nresult = [[0,0,0],\n         [0,0,0]]\n\n"},{"question":"73 write a program to print a pattern of stars (*)\n","solution":"\nfor row in range (0,5):\n    for column in range (0, row+1):\n        print (\"*\", end=\"\")\n\n    # ending row\n    print('\\r')\n    \n"},{"question":"74 write a program to return the absolute value in Python\n","solution":"\ndef get_absolute_value(n):\n\tif n >= 0:\n\t\treturn n\n\telse:\n\t\treturn -n\n\nprint(get_absolute_value(101))\n\n"},{"question":"83 write a program to Capitalizes the first letter of each word in a string\n","solution":"\ndef capitalize(text):\n  return text.title()\n\nstr1 = \"Hello world!\"\nstr2 = \"hello world!\"\nstr3 = \"HELLO WORLD!\"\nstr4 = \"includehelp.com is a tutorials site\"\n\nprint(\"str1: \", str1)\nprint(\"str2: \", str2)\nprint(\"str3: \", str3)\nprint(\"str4: \", str4)\nprint()\n\n"},{"question":"89 write a program to find winner of the day\n","solution":"\ndef find_winner_of_the_day(*match_tuple):\n    team1_count = 0\n    team2_count = 0\n     \n    for team_name in match_tuple :\n         \n        if team_name == \"Team1\" :\n            team1_count += 1\n        else :\n            team2_count += 1\n             \n    if team1_count == team2_count :\n        return \"Tie\"\n         \n    elif team1_count > team2_count :\n        return \"Team1\"\n     \n    else :\n        return \"Team2\"\n     \n     \nif __name__ == \"__main__\" :\n     \n    print(find_winner_of_the_day(\"Team1\",\"Team2\",\"Team1\"))\n    print(find_winner_of_the_day(\"Team1\",\"Team2\",\"Team1\",\"Team2\"))\n    print(find_winner_of_the_day(\"Team1\",\"Team2\",\"Team2\",\"Team1\",\"Team2\"))\n    \n"},{"question":"100 write a program to input a string and find total number of letters and digits\n","solution":"\nprint(\"Input a string: \")\nstr1 = input()\n\nno_of_letters, no_of_digits = 0,0\n\nfor c in str1:\n    if (c>='a' and c<='z') or (c>='A' and c<='Z'):\n        no_of_letters += 1\n    if c>='0' and c<='9':\n        no_of_digits += 1\n\nprint(\"Input string is: \", str1)\nprint(\"Total number of letters: \", no_of_letters)\nprint(\"Total number of digits: \", no_of_digits)\n\n"},{"question":" Write a python program to Check and print if Expression is Correctly Parenthesized using Stack\n","solution":"\nclass Stack:\n    def __init__(self):\n        self.items = []\n \n    def is_empty(self):\n        return self.items == []\n \n    def push(self, data):\n        self.items.append(data)\n \n    def pop(self):\n        return self.items.pop()\n \n \ns = Stack()\nexp = \"(x+y\"\n \nfor c in exp:\n    if c == '(':\n        s.push(1)\n    elif c == ')':\n        if s.is_empty():\n            is_balanced = False\n            break\n        s.pop()\nelse:\n    if s.is_empty():\n        is_balanced = True\n    else:\n        is_balanced = False\n \nif is_balanced:\n    print('Expression is correctly parenthesized.')\nelse:\n    print('Expression is not correctly parenthesized.')\n\n"},{"question":" Write a python program to Implement Comb sort and print the sorted list for the below list\n","solution":"\ndef comb_sort(alist):\n    def swap(i, j):\n        alist[i], alist[j] = alist[j], alist[i]\n \n    gap = len(alist)\n    shrink = 1.3\n \n    no_swap = False\n    while not no_swap:\n        gap = int(gap\/shrink)\n \n        if gap < 1:\n            gap = 1\n            no_swap = True\n        else:\n            no_swap = False\n \n        i = 0\n        while i + gap < len(alist):\n            if alist[i] > alist[i + gap]:\n                swap(i, i + gap)\n                no_swap = False\n            i = i + 1\n \n \nalist = [2, 3, 5, 6, 4, 5]\ncomb_sort(alist)\nprint('Sorted list: ', end='')\nprint(alist)\n\n"},{"question":" Write a python Class to calculate area of a circle and print the vale for a radius\n","solution":"\nclass CircleArea():\n    def __init__(self,radius):\n        self.radius=radius\n    def area(self):\n        return 3.14 * self.radius * self.radius\na=6\nobj=CircleArea(a)\nprint(\"Area of rectangle:\",obj.area())\n\n"},{"question":" Write a python Class to calculate Perimeter of a circle and print the vale for a radius\n","solution":"\nclass CirclePerimeter():\n    def __init__(self,radius):\n        self.radius=radius\n    def perimeter(self):\n        return 2 * 3.14 * self.radius\na=6\nobj=CirclePerimeter(a)\nprint(\"Perimeter of rectangle:\",obj.perimeter())\n\n"},{"question":" Write a python program to Read and print the Contents of a File\n","solution":"\na=str(input(\"Enter file name .txt extension:\"))\nfile2=open(a,'r')\nline=file2.readline()\nwhile(line!=\"\"):\n    print(line)\n    line=file2.readline()\nfile2.close()\n\n"},{"question":" Write a python program to Count the Number of Lines in a Text File\n","solution":"\nfname = input(\"Enter file name: \")\nnum_lines = 0\nwith open(fname, 'r') as f:\n    for line in f:\n        num_lines += 1\nprint(\"Number of lines:\")\nprint(num_lines)\n\n"},{"question":" Write a python function to Copy the Contents of One File into Another\n","solution":"\ndef copy(from_file, to_file):\n    with open(from_file) as f:\n        with open(to_file, \"w\") as f1:\n            for line in f:\n                f1.write(line)\n\n"},{"question":" Write a python function that Counts the Number of Times a Certain Letter Appears in the Text File\n","solution":"def count_letter(fname, l):\n    k = 0\n    with open(fname, 'r') as f:\n        for line in f:\n            words = line.split()\n            for i in words:\n                for letter in i:\n                    if(letter==l):\n                        k=k+1\n    return k\n\n"},{"question":" Write a python function that prints the Contents of a File in Reverse Order\n","solution":"\ndef reverse_content(filename):\n    for line in reversed(list(open(filename))):\n        print(line.rstrip())\n\n"},{"question":" Write a Python function to print the GSD of Two Numbers\n","solution":"\ndef gcd(a,b):\n    if(b==0):\n        return a\n    else:\n        return gcd(b,a%b)\n\n\n"},{"question":" Write a Python function to Find the Power of a Number Using Recursion\n","solution":"\ndef power(base,exp):\n    if(exp==1):\n        return(base)\n    if(exp!=1):\n        return(base*power(base,exp-1))\n\n"},{"question":" Write a Python Program to Detect if Two Strings are Anagrams\n","solution":"\ndef anagram_check(s1, s2):\n    if(sorted(s1)==sorted(s2)):\n        return True\n    else:\n        return False\n\n"},{"question":" Write a Python Program to Remove the Characters of Odd Index Values in a String\n","solution":"\ndef modify(string):  \n    final = \"\"   \n    for i in range(len(string)):  \n        if i % 2 == 0:  \n            final = final + string[i]  \n    return final\n\n"},{"question":" Write a Python Program to Sort the List According to the Second Element in Sublist\n","solution":"\na=[['A',34],['B',21],['C',26]]\nfor i in range(0,len(a)):\n    for j in range(0,len(a)-i-1):\n        if(a[j][1]>a[j+1][1]):\n            temp=a[j]\n            a[j]=a[j+1]\n            a[j+1]=temp\n\n\n"},{"question":" Write a Python Program to print all Numbers in a Range which are Perfect Squares and Sum of all Digits in the Number is Less than 10\n","solution":"\nl=6\nu=9\na=[x for x in range(l,u+1) if (int(x**0.5))**2==x and sum(list(map(int,str(x))))<10]\nprint(a)\n\n"},{"question":" Write a Python Program to Check if a Number is a Strong Number\n","solution":"\ndef strong_no_check(num):\n    sum1=0\n    temp=num\n    while(num):\n        i=1\n        f=1\n        r=num%10\n        while(i<=r):\n            f=f*i\n            i=i+1\n        sum1=sum1+f\n        num=num\/\/10\n    if(sum1==temp):\n        return True\n    else:\n        return False\n\n"},{"question":" Write a Python function to Count Set Bits in a Number\n","solution":"\ndef count_set_bits(n):\n    count = 0\n    while n:\n        n &= n - 1\n        count += 1\n    return count\n\n"},{"question":" Write a Python Program to Accept Three Digits and Print all Possible Combinations from the Digits\n","solution":"\na=2\nb=9\nc=5\nd=[]\nd.append(a)\nd.append(b)\nd.append(c)\nfor i in range(0,3):\n    for j in range(0,3):\n        for k in range(0,3):\n            if(i!=j&j!=k&k!=i):\n                print(d[i],d[j],d[k])\n\n"},{"question":" Write a Python function to Print an Identity Matrix\n","solution":"\ndef print_identity_matrix(n):\n    for i in range(0,n):\n        for j in range(0,n):\n            if(i==j):\n                print(\"1\",sep=\" \",end=\" \")\n            else:\n                print(\"0\",sep=\" \",end=\" \")\n        print()\n\n"},{"question":" Write a Python function that shifts the character of strings\n","solution":"\ndef char_shift(string, shift_count):\n    '''This function takes a string as an input and shifts each character by 5 and returns shifted string'''\n    return \"\".join([chr(ord(x)+shift_count) if (ord(x)+shift_count) <= 122 else chr(96 + (ord(x)+shift_count) - 122) for x in string])\n\n"},{"question":"1 Write a function to print given interger to binary\n","solution":"def int_to_binary(num: int):\n    \"\"\"\n    function to print number to binary\n    \"\"\"\n    if isinstance(num, int):\n        print(f'The binary of {num} is {bin(num).replace(\"0b\",\"\")}')\n    else:\n        raise ValueError('Invalid Input')\n\n\n"},{"question":"2 write a function to check given string is palindrome or not ( case insensitive )\n","solution":"def palindrome_str_check(value: str):\n    \"\"\"\n    function to print whether string is palindrome or not\n    \"\"\"\n    if isinstance(value, str) :\n        print( value.lower() == value[::-1].lower() )\n    else:\n        raise ValueError('Invalid Input')\n\n\n"},{"question":"8 write a function to remove empty list from a list and print.\n","solution":"def remove_empty_list(num1: list):\n    if isinstance(num1, list):\n        modified = list(filter(None, num1))\n        print(modified)\n\n\n"},{"question":"14 function to check armstrong number or not\n","solution":"def check_armstrong(no_: int):\n    sum_ = 0\n    temp = no_\n    while temp > 0:\n        digit = temp % 10\n        sum_ += digit ** 3 \n        temp \/\/= 10\n\n    if no_ == sum_:  \n       print(f\"{no_} is an Armstrong number\")  \n    else:  \n       print(f\"{no_} is not an Armstrong number\")\n\n\n"},{"question":"20 function to print calendar\n","solution":"def show_mm_calendar(mm: int, yyyy: int):\n    import calendar\n    print(calendar.month(yyyy, mm)\n\n\n"},{"question":"22 function to print marsh code equivalent from string.\n","solution":"def encode_marsh(sen : str):\n    char_to_dots = { 'A': '.-', 'B': '-...', 'C': '-.-.', 'D': '-..', 'E': '.', 'F': '..-.',\n                      'G': '--.', 'H': '....', 'I': '..', 'J': '.---', 'K': '-.-', 'L': '.-..',\n                      'M': '--', 'N': '-.', 'O': '---', 'P': '.--.', 'Q': '--.-', 'R': '.-.',\n                      'S': '...', 'T': '-', 'U': '..-', 'V': '...-', 'W': '.--', 'X': '-..-',\n                      'Y': '-.--', 'Z': '--..', ' ': ' ', '0': '-----',\n                      '1': '.----', '2': '..---', '3': '...--', '4': '....-', '5': '.....',\n                      '6': '-....', '7': '--...', '8': '---..', '9': '----.',\n                      '&': '.-...', \"'\": '.----.', '@': '.--.-.', ')': '-.--.-', '(': '-.--.',\n                      ':': '---...', ',': '--..--', '=': '-...-', '!': '-.-.--', '.': '.-.-.-',\n                      '-': '-....-', '+': '.-.-.', '\"': '.-..-.', '?': '..--..', '\/': '-..-.'\n                    }\n    for i in sen:\n        print(char_to_dots[i.upper()])\n\n\n"},{"question":"43 function to print yesterday and tomorrow date\n","solution":"def tmrw_yest_time()\n    import datetime\n    yesterday = datetime.datetime.now() - datetime.timedelta(1)\n    tmrw = datetime.datetime.now() + datetime.timedelta(1)\n    print( yesterday, tmrw )\n\n\n"},{"question":"45 logging message\n","solution":"def logging(msg, *, dt = datetime.utcnow()):\n    print(f'message at {dt} was {msg}')\n\n\n"},{"question":"63 custom logging along with counter\n","solution":"def custom_counter_log():\n    \"\"\"\n    An implementation of closures\n    \"\"\"\n    x = 0\n    dt = datetime.now()\n    def inner():\n       nonlocal x\n       x += 1\n       print(f' Switch or button is called {x} at {dt}')\n     return inner\n\n"},{"question":"74 function to show namedtuple is instance of tuple\n","solution":"def show_ins_tup():\n    from collections import namedtuple\n    IplData = namedtuple('IplData', 'match toss choice session1 session2 winner')\n    match1 = IplData('RCBvsKKR', 'KKR', 'bat', '229\/9', '85\/8', 'KKR')\n    return isinstance(match1, tuple)\n\n\n"},{"question":"76 function to showcast documemtation of namedtuple\n","solution":"def show_doc_named():\n    from collections import namedtuple\n    IplData = namedtuple('IplData', 'match toss choice session1 session2 winner')\n    IplData.__doc__ = 'Namedtuple class to store the IPL match data'\n    IplData.match.__doc__ = 'Team name'\n    IplData.toss.__doc__ = 'Who won the toss'\n    IplData.choice.__doc__ = 'Decision taken by wiinng team toss'\n    IplData.session1.__doc__ = 'Run scored by Team1'\n    IplData.session2.__doc__ = 'Run scored by Team2'\n    IplData.winner.__doc__ = 'Winning Team'\n    return help(IplData)\n\n\n"},{"question":"78 class to show implementation of static method\n","solution":"class Mathematics:\n    \"\"\"\n    This is the space to do documentation related to class.\n    \"\"\"\n    def __init__(self, msg=\"Demo class of Mathematics\"):\n        self.msg = msg\n\n    def __str__(self):\n        return f' String representation of an object'\n\n    def __repr__(self):\n        return f' repr representation of an object with parameter {self.msg}'\n\n    @staticmethod\n    def addition(a: \"Variable1\", b: 'Variable2'):\n        \"\"\"\n        @staticmethod makes the mtethod of class as static method.\n        It is always recommended to metion it via decorator.\n        \"\"\"\n        return a+b\n\n\n"},{"question":"80 class to show implementation of custom sequence of tuple\n","solution":"class CustomTuple:\n    \"\"\"\n    This is the space to do documentation related to class.\n    \"\"\"\n    def __init__(self):\n        self.list_ = (1,2,3,4)\n\n    def __len__(self):\n        return len(self.list_)\n\n    def __getitem__(self, i):\n        if isinstance(i, int):\n            if i<0:\n                i = len(self.list_) + i\n            \n            if i<0 or i>=len(self.list_):\n                raise IndexError('Invalid Input')\n            else:\n                return self.list_[i]\n\n\n"},{"question":" List are mutable\n","solution":"a_list = []\nprint('ID:', id(a_list))\na_list += [1]\nprint('ID (+=):', id(a_list))\na_list = a_list + [2]\nprint('ID (list = list + ...):', id(a_list))\n\n"},{"question":" illustrate the test for equality (==) vs. identity (is)\n","solution":"a = 'hello world!'\nb = 'hello world!'\nprint('a is b,', a is b)\nprint('a == b,', a == b)\n\n"},{"question":" Shallow copy in python\n","solution":"list1 = [1,2]\nlist2 = list1        # reference\nlist3 = list1[:]     # shallow copy\nlist4 = list1.copy() # shallow copy\nprint('IDs:\\nlist1: {}\\nlist2: {}\\nlist3: {}\\nlist4: {}\\n'\n      .format(id(list1), id(list2), id(list3), id(list4)))\n\n"},{"question":" args and sleep \n","solution":"import time\ndef report_arg(my_default=time.time()):\n    print(my_default)\nreport_arg()\ntime.sleep(5)\nreport_arg()\n\n"},{"question":" Usage of bool class\n","solution":"print('isinstance(True, int):', isinstance(True, int))\n\n"},{"question":" Usage of global keyword\n","solution":"x = 0\ndef in_func2():\n    global x\n    x = 1\n    print('in_func2:', x)\nin_func2()\nprint('global:', x)\n\n"},{"question":" what if we put a mutable object into the immutable tuple\n","solution":"tup1 = ([],)\nprint('tup before: ', tup1)\ntup1[0] += [1]\n\n\n"},{"question":" there are ways to modify the mutable contents of the tuple without raising the TypeError\n","solution":"tup = ([],)\nprint('tup before: ', tup)\ntup[0].extend([1])\nprint('tup after: ', tup)\n\n"},{"question":" another way to append data to tuple\n","solution":"tup = ([],)\nprint('tup before: ', tup)\ntup[0].append(1)\nprint('tup after: ', tup)\n\n"},{"question":" What happens \"behind\" the curtains is that the tuple is not modified, but a new object is generated every time, which will inherit the old \"name tag\":\n","solution":"my_tup = (1,)\nprint(id(my_tup))\nmy_tup += (4,)\nprint(id(my_tup))\nmy_tup = my_tup + (5,)\nprint(id(my_tup))\n\n"},{"question":" Public vs. private class methods and name mangling\n","solution":"    def public_method(self):\n        print('Hello public world!')\n\n    def __private_method(self):\n        print('Hello private world!')\n\n    def call_private_method_in_class(self):\n        self.__private_method()\n\n\nmy_instance = my_class()\n\nmy_instance.public_method()\nmy_instance._my_class__private_method()\nmy_instance.call_private_method_in_class()\n\n"},{"question":" Unpacking of iterables\n","solution":"val1, *vals = [1, 2, 3, 4, 5]\nprint('val1:', val1)\nprint('vals:', vals)\n\n"},{"question":" if else for \n","solution":"for i in range(5):\n    if i == 1:\n        print('in for')\nelse:\n    print('in else')\nprint('after for-loop')\n\n"},{"question":" Driver Code \n","solution":"for i in range(10): \n    print (catalan(i))\n\n"},{"question":" Driver Program to test ht above function \n","solution":"n = 5\nk = 2\nprint (\"Value of C(%d,%d) is (%d)\" %(n , k , binomialCoeff(n , k)) )\n\n"},{"question":" Driver Program \n","solution":"  \nprint(Fibonacci(9)) \n\n"},{"question":" write a python program to find N largest elements from a list\n","solution":"l = [1000,298,3579,100,200,-45,900] \nn = 4\nl.sort() \nprint(l[-n:])\n\n"},{"question":" write a python functionto test the equality of the float numbers\n","solution":"def float_equality_testing(a, b):\n    \n    rel_tol = 1e-12\n    abs_tol = 1e-05\n    return abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)\n\n"},{"question":" write a python function to check whether the given number is fibonacci or not\n","solution":"def fiboacci_number_check(n):\n    if(isinstance(n,int)):\n        result = list(filter(lambda num : int(math.sqrt(num)) * int(math.sqrt(num)) == num, [5*n*n + 4,5*n*n - 4] ))\n        return bool(result) \n    else:\n        raise TypeError(\"Input should be of type Int\") \n\n"},{"question":" write a python function to compute gcd\n","solution":"def compute_gcd(x, y):\n\n   while(y):\n       x, y = y, x % y\n   return x\n\n"},{"question":" write a python Program to Find ASCII Value of Character\n","solution":"c = 'p'\nprint(\"The ASCII value of '\" + c + \"' is\", ord(c))\n\n"},{"question":" write a Python Program to Find the Sum of Natural Numbers\n","solution":"num = 16\nif num < 0:\n   print(\"Enter a positive number\")\nelse:\n   sum = 0\n   while(num > 0):\n       sum += num\n       num -= 1\n   print(\"The sum is\", sum)\n\n"},{"question":" function to Convert Binary to Gray Code\n","solution":"def binary_to_gray(n):\n    n = int(n, 2) \n    n ^= (n >> 1)\n    return bin(n)[2:]\n\n"},{"question":" write a Python function to Find the Intersection of Two Lists\n","solution":"def intersection(a, b):\n    return list(set(a) & set(b))\n\n"},{"question":" wrie a python  Program to Flatten a List without using Recursion\n","solution":"a=[[1,[[2]],[[[3]]]],[[4],5]]\nflatten=lambda l: sum(map(flatten,l),[]) if isinstance(l,list) else [l]\nprint(flatten(a))\n\n"},{"question":" write a python function to count the occurrence of a given word in a given file\n","solution":"def check_word_count(word, file):\n    if not os.path.isfile(file):\n        raise FileNotFoundError\n    if not isinstance(word, str):\n        raise TypeError\n\n    with open(file, 'r') as f:\n        lines = f.readlines()\n        words = [l.strip().split(' ') for l in lines]\n        words = [word for sublist in words for word in sublist]\n        c = Counter(words)\n    return c.get(word, 0)\n\n\n"},{"question":" write a python program to get all possible permutations of size of the string in lexicographic sorted order.\n","solution":"def get_ordered_permutations(word, k):\n    [print(''.join(x)) for x in sorted(list(permutations(word, int(k))))]\n\n\n"},{"question":" write a python function for Named Entity Recognizer using NLTK\n","solution":"def ner_checker(texts):\n    all_set = set()\n\n    def nltk_ner_check(texts):\n        for i, text in texts:\n            for entity in nltk.ne_chunk(nltk.pos_tag(nltk.word_tokenize(text))):\n                if isinstance(entity, nltk.tree.Tree):\n                    etext = \" \".join([word for word, tag in entity.leaves()])\n                    # label = entity.label()\n                    all_set.add(etext)\n\n    nltk_ner_check(texts=texts)\n    return all_set\n\n\n"},{"question":" Write a python function to remove the duplicate items from a List and return the modified data list\n","solution":"def remove_duplicates(data):\n    c = Counter(data)\n    s = set(data)\n    for item in s:\n        count = c.get(item)\n        while count > 1:\n            data.pop(item)\n            count -= 1\n    return data\n\n\n"},{"question":" write a python function that returns biggest character in a string\n","solution":"from functools import reduce\n\n\ndef biggest_char(string):\n    if not isinstance(string, str):\n        raise TypeError\n    return reduce(lambda x, y: x if ord(x) > ord(y) else y, string)\n\n\n"},{"question":" write a python function to check if SHA256 hashed value is valid for given data or not\n","solution":"def check_sha256_hash(hashed, data):\n    import hashlib\n    return True if hashed == hashlib.sha256(data.encode()).hexdigest() else False\n\n\n"},{"question":" write a python function to get HTML code for a given URL\n","solution":"def get_html(url=\"http:\/\/www.python.org\"):\n    import urllib.request\n\n    fp = urllib.request.urlopen(url)\n    mybytes = fp.read()\n    mystr = mybytes.decode(\"utf8\")\n    fp.close()\n    print(mystr)\n\n\n"},{"question":" write a python function to generate wordcloud on given text or file\n","solution":"import os\n\n\ndef get_word(data):\n    if not (isinstance(data, str) or os.path.isfile(data)):\n        raise TypeError(\"Text must be string or a File object.\")\n    from wordcloud import WordCloud, STOPWORDS\n    import matplotlib.pyplot as plt\n    stopwords = set(STOPWORDS)\n    if os.path.isfile(data):\n        with open(data, 'r') as f:\n            data = f.read()\n\n    data = ' '.join(data.lower().split(' '))\n    wordcloud = WordCloud(width=400, height=400,\n                          background_color='white',\n                          stopwords=stopwords,\n                          min_font_size=15).generate(data)\n\n    # plot the WordCloud image\n    plt.figure(figsize=(8, 8), facecolor=None)\n    plt.imshow(wordcloud)\n    plt.axis(\"off\")\n    plt.tight_layout(pad=0)\n\n    plt.show()\n\n\n"},{"question":" write a python function to sort each item in a data structure on one of the keys\n","solution":"def sort_list_with_key():\n    animals = [\n        {'type': 'lion', 'name': 'Mr. T', 'age': 7},\n        {'type': 'tiger', 'name': 'scarface', 'age': 3},\n        {'type': 'puma', 'name': 'Joe', 'age': 4}]\n    print(sorted(animals, key=lambda animal: -animal['age']))\n\n\n"},{"question":" write a python function to generate a Unique identifier across space and time in this cosmos.\n","solution":"def get_uuid():\n    return uuid.uuid4()\n\n\nimport secrets\n\n\n"},{"question":" Write a python program to obtain principal amount, rate of interest and time from user to print simple interest.\n","solution":"principal = float(input(\"Enter principal : \"))\nrate= float(input(\"Enter rate : \"))\ntime = float(input(\"Enter time : \"))\nsimple_interest = print(f\"Simple Interest : {(principal*rate*time\/100)}\")\n\n"},{"question":" write a python program to input a Number N from user and print Even Numbers from 1 to N\n","solution":"\nmaximum = int(input(\" Please Enter the Maximum Value : \"))\n\nfor number in range(1, maximum+1):\n    if(number % 2 == 0):\n        print(\"{0}\".format(number))\n        \n"},{"question":" write a python function which takes two list of same length as input and return a dictionary with one as keys and other as values.\n","solution":"\nkeys = eval(input(\"Enter key list : \"))\nvalues = eval(input(\"Enter value list : \"))\ndef fn(keys, values):\n    return { keys[i] : values[i] for i in range(len(keys)) }\n\n"},{"question":" Write a Python program to get a list, sorted in increasing order by the last element in each tuple from a given list of non-empty tuples. \n","solution":"\ndef last(n): return n[-1]\n\ndef sort_list_last(tuples):\n  return sorted(tuples, key=last)\n\nprint(sort_list_last([(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)]))\n\n"},{"question":" write a python program to concatenate two dictionaries\n","solution":"\nd1 = {'a' : 1 ,'b' : 2}\nd2 = {'c' : 1 ,'d' : 2}\nd3 = {**d1,**d2}\nprint(d3)\n\n"},{"question":" Write a Python program to find the first appearance of the substring 'not' and 'poor' from a given string, if 'not' follows the 'poor', replace the whole 'not'...'poor' substring with 'good'. Return the resulting string.\n","solution":"def not_poor(str1):\n  snot = str1.find('not')\n  spoor = str1.find('poor')\n  \n\n  if spoor > snot and snot>0 and spoor>0:\n    str1 = str1.replace(str1[snot:(spoor+4)], 'good')\n    return str1\n  else:\n    return str1\n\n"},{"question":" Write a Python program to count the number of even and odd numbers from a series of numbers.\n","solution":"\nnumbers = (1, 2, 3, 4, 5, 6, 7, 8, 9) # Declaring the tuple\ncount_odd = 0\ncount_even = 0\nfor x in numbers:\n        if not x % 2:\n    \t     count_even+=1\n        else:\n    \t     count_odd+=1\n             \n"},{"question":" Write a Python program to sort (ascending) a dictionary by value.\n","solution":"d = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}\n\nprint({k :v for k,v in sorted(d.items(),key = lambda x : x[1])})\n\n"},{"question":" write a python program that takes input a list and cube every term using list comprehension\n","solution":"\ns1 = eval(input(\"Enter list \"))\nprint([i**3 for i in s1])\n\n"},{"question":" write a Python function that takes list of tuples as input and sort those alphabetically\n","solution":"def SortTuple(tup): \n      \n    n = len(tup) \n      \n    for i in range(n): \n        for j in range(n-i-1): \n              \n            if tup[j][0] > tup[j + 1][0]: \n                tup[j], tup[j + 1] = tup[j + 1], tup[j] \n                  \n    return tup \n\n"},{"question":" write a python program that print today's date\n","solution":"from datetime import date\nprint(date.today()) \n\n"},{"question":" write a python function to multiply two user provided numbers and return the result\n","solution":"def mul_two_numbers(num1, num2):\n    mul = num1 * num2\n    return mul\n\n"},{"question":" or \n","solution":"x = [[[value1]]] # To convert from a 1-D to 3-D\n\n"},{"question":"9 sort a dictionary\n","solution":"mydictionary : {1: 1, 7: 2, 4: 2, 3: 1, 8: 1}\nsortedDictionary = sorted(mydictionary.keys())\n\n"},{"question":"22 how to check if string is in byte formate pythin\n","solution":"isinstance(string, bytes)\n\n"},{"question":"27 write a python funtion to execute bash commands\n","solution":"import subprocess\nsubprocess.call([\"sudo\", \"apt\", \"update\"])\n\n"},{"question":"30 program to count number of cpu cores available \n","solution":"import os\nos.cpu_count()\n\n"},{"question":"30 get rid of all null values in array python\n","solution":"mylist = [1, 2, 3, '', 4]\nmylist = [i for i in mylist if i]\n\n"},{"question":"44 write a  Python function to find intersection of two sorted arrays \n","solution":"def printIntersection(arr1, arr2, m, n): \n    i, j = 0, 0\n    while i < m and j < n: \n        if arr1[i] < arr2[j]: \n            i += 1\n        elif arr2[j] < arr1[i]: \n            j+= 1\n        else: \n            print(arr2[j]) \n            j += 1\n            i += 1\n\narr1 = [1, 2, 4, 5, 6] \narr2 = [2, 3, 5, 7] \nm = len(arr1) \nn = len(arr2) \nprintIntersection(arr1, arr2, m, n) \n\n"},{"question":"47 write a python function to print lcm of n numbers python\n","solution":"import math\n\ndef LCMofArray(a):\n  lcm = a[0]\n  for i in range(1,len(a)):\n    lcm = lcm*a[i]\/\/math.gcd(lcm, a[i])\n  return lcm\n\narr1 = [1,2,3]\nprint(\"LCM of arr1 elements:\", LCMofArray(arr1))\n\n"},{"question":"64 Write a Python function to compute the sum of the two reversed numbers and display the sum in reversed form.\n","solution":"def reverse_sum(n1, n2):\n    return int(str(int(str(n1)[::-1]) + int(str(n2)[::-1]))[::-1])\n\n"},{"question":"65 Write a Python function where you take any positive integer n, if n is even, divide it by 2 to get n \/ 2. If n is odd, multiply it by 3 and add 1 to obtain 3n + 1. Repeat the process until you reach 1.\n","solution":"def collatz_sequence(x):\n    num_seq = [x]\n    if x < 1:\n       return []\n    while x > 1:\n       if x % 2 == 0:\n         x = x \/ 2\n       else:\n         x = 3 * x + 1\n       num_seq.append(x)    \n    return num_seq\n\n"},{"question":"67 Write a Python function to the push the first number to the end of a list.\n","solution":"def move_last(num_list):\n    a = [num_list[0] for i in range(num_list.count(num_list[0]))]\n    x = [ i for i in num_list if i != num_list[0]]\n    x.extend(a)\n    return(x)\n\n"},{"question":"73 Write a python function to find the difference between the sum of the squares of the first two hundred natural numbers and the square of the sum.\n","solution":"r = range(1, 201)\na = sum(r)\nprint (a * a - sum(i*i for i in r))\n\n"},{"question":"79 Write a program to print which will find all such numbers which are divisible by 7 but are not a multiple of 5,\n","solution":"between 2000 and 3200 (both included).  \nl=[]\nfor i in range(2000, 3201):\n    if (i%7==0) and (i%5!=0):\n        l.append(str(i))\n\nprint ','.join(l)\n\n\n"},{"question":"80 write a Python program to print the roots of a quadratic equation\n","solution":"import math\na = float(input(\"Enter the first coefficient: \"))\nb = float(input(\"Enter the second coefficient: \"))\nc = float(input(\"Enter the third coefficient: \"))\nif (a!=0.0):\n    d = (bb)-(4ac) \n    if (d==0.0):\n        print(\"The roots are real and equal.\") \n        r = -b\/(2a)\n        print(\"The roots are \", r,\"and\", r)\n    elif(d>0.0):\n        print(\"The roots are real and distinct.\")\n        r1 = (-b+(math.sqrt(d)))\/(2a) \n        r2 = (-b-(math.sqrt(d)))\/(2a)\n        print(\"The root1 is: \", r1)\n        print(\"The root2 is: \", r2)\n    else:\n        print(\"The roots are imaginary.\")\n        rp = -b\/(2a) ip = math.sqrt(-d)\/(2a)\n        print(\"The root1 is: \", rp, \"+ i\",ip)\n        print(\"The root2 is: \", rp, \"- i\",ip)\nelse:\n    print(\"Not a quadratic equation.\"\n\n"},{"question":"84 Write a Python program to find maximum length of consecutive 0\u2019s in a given binary string.\n","solution":"def max_consecutive_0(input_str): \n     return  max(map(len,input_str.split('1')))\nstr1 = '111000010000110'\nprint(\"Original string:\" + str1)\nprint(\"Maximum length of consecutive 0\u2019s:\")\n\n"},{"question":"87 Write a Python program to print the list in a list of lists whose sum of elements is the highest.\n","solution":"print(max(num, key=sum))\n\n"},{"question":"91 Write a Python function to create a multidimensional list (lists of lists) with zeros and print the output.\n","solution":"nums = []\n\nfor i in range(3):\n\n    nums.append([])\n\n    for j in range(2):\n\n        nums[i].append(0)\nprint(\"Multidimensional list:\")\nprint(nums)\n\n"},{"question":"95 Write a Python function to find the index of a given string at which a given substring starts. If the substring is not found in the given string return 'Not found' and print the output.\n","solution":"def find_Index(str1, pos):\n    if len(pos) > len(str1):\n        return 'Not found'\n\n    for i in range(len(str1)):\n\n        for j in range(len(pos)):\n\n            if str1[i + j] == pos[j] and j == len(pos) - 1:\n                return i\n                \n            elif str1[i + j] != pos[j]:\n                break\n\n    return 'Not found\n\n"},{"question":"98 Write a Python program to multiply two integers without using the '*' operator in python.\n","solution":"def multiply(x, y):\n    if y < 0:\n        return -multiply(x, -y)\n    elif y == 0:\n        return 0\n    elif y == 1:\n        return x\n    else:\n        return x + multiply(x, y - 1)\n\n"},{"question":" Write a Python function to return octal value of a given integer\n","solution":"def int_to_oct(a):\n  return oct(a)\n\n\n"},{"question":" Write a Python program to typecast given input to float\n","solution":"num = float(input(\"Input a value: \"))\nprint(num)\n\n\n"},{"question":" Write a Python program to check\/test multiple variables against a value\n","solution":"a = 10\nb = 20\nc = 30\nif 10 in {a, b, c}:\n  print(\"True\")\nelse:\n  print(\"False\")  \n\n\n"},{"question":" Write a Python function to find the compound interest in Python when principle amount, rate of interest and time is given\n","solution":"def compound_interest(p,r,t):\n    ci = p * (pow((1 + r \/ 100), t)) \n    return ci\n\n\n"},{"question":" Write a Python function to check whether a person is eligible for voting or not based on their age\n","solution":"def vote_eligibility(age):\n\tif age>=18:\n\t    status=\"Eligible\"\n\telse:\n\t    status=\"Not Eligible\"\n\treturn status\n\n\n"},{"question":" Write a Python program to print the calendar of any given year\n","solution":"import calendar\nyear=2020\nprint(calendar.calendar(year))\n\n\n"},{"question":" Write a Python function to \n","solution":"def binary_palindrome(n):\n\ts=int(bin(n)[2:])\n\tr=str(s)[::-1]\n\tif int(r)==s:\n\t    return \"The binary representation of the number is a palindrome.\"\n\telse:\n\t    return \"The binary representation of the number is NOT a palindrome.\"\n\n\n"},{"question":" Write a Python function to check all elements of a list are the same or not\n","solution":"def check_equal(a):\n  return a[1:] == a[:-1]\n\n\n"},{"question":" Write a Python program to sort a tuple of tuples by 2nd item\n","solution":"tuple1 = (('a', 23),('b', 37),('c', 11), ('d',29))\ntuple1 = tuple(sorted(list(tuple1), key=lambda x: x[1]))\nprint(tuple1)\n\n\n"},{"question":" Write a Python function that Given a string and an integer number n, remove characters from a string starting from zero up to n and return a new string\n","solution":"def removeChars(str, n):\n  return str[n:]\n\n\n"},{"question":" Write a Python program to Subtract a week ( 7 days) from a given date in Python \n","solution":"from datetime import datetime, timedelta\ngiven_date = datetime(2020, 2, 25)\ndays_to_subtract = 7\nres_date = given_date - timedelta(days=days_to_subtract)\nprint(res_date)\n\n\n"},{"question":" Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5 between 2000 and 3200 (both included).\n","solution":"\nl=[]\nfor i in range(2000, 3201):\n    if (i%7==0) and (i%5!=0):\n        l.append(str(i))\n\n\n"},{"question":" Write a program that will determine the memory usage by python process\n","solution":"import os, psutil\nprint(psutil.Process(os.getpid()).memory_info().rss \/ 1024 ** 2)\n\n"},{"question":" Write a program that prints the words in a comma-separated sequence after sorting them alphabetically.\n","solution":"\nitems=[x for x in input().split(',')]\nitems.sort()\nprint(','.join(items))\n\n\n"},{"question":" Write a function that takes a base and a power and finds the power of the base using recursion.\n","solution":"\ndef power(base,exp):\n    if(exp==1):\n        return(base)\n    if(exp!=1):\n        return(base*power(base,exp-1))\nbase=int(input(\"Enter base: \"))\nexp=int(input(\"Enter exponential value: \"))\nprint(\"Result:\",power(base,exp))\n\n\n"},{"question":" Write a function that will convert a string into camelCase\n","solution":"\nfrom re import sub\ndef camelCase(string):\n  string = sub(r\"(_|-)+\", \" \", string).title().replace(\" \", \"\")\n  return string[0].lower() + string[1:]\n\n\n"},{"question":" Write a program to find common divisors between two numbers in a given pair\n","solution":"def ngcd(x, y):\n    i=1\n    while(i<=x and i<=y):\n        if(x%i==0 and y%i == 0):\n            gcd=i\n        i+=1\n    return gcd\ndef num_comm_div(x, y):\n  n = ngcd(x, y)\n  result = 0\n  z = int(n**0.5)\n  i = 1\n  while( i <= z ):\n    if(n % i == 0):\n      result += 2 \n      if(i == n\/i):\n        result-=1\n    i+=1\n  return result\n\n"},{"question":" Write a function to Check whether following json is valid or invalid\n","solution":"import json\ndef validateJSON(jsonData):\n    try:\n        json.loads(jsonData)\n    except ValueError as err:\n        return False\n    return True\n\n"},{"question":" Write a function to remove and print every third number from a list of numbers until the list becomes empty\n","solution":"def remove_nums(int_list):\n  position = 3 - 1 \n  idx = 0\n  len_list = (len(int_list))\n  while len_list>0:\n    idx = (position+idx)%len_list\n    print(int_list.pop(idx))\n    len_list -= 1\n\n\n"},{"question":" Calculate volume V\n","solution":"V = 4.\/3. * math.pi * radius ** 3\nprint(f\"Volume={V}\")\n\n\n"},{"question":" Write a python program using list comprehension to produce and print the list ['x', 'xx', 'xxx', 'xxxx', 'y', 'yy', 'yyy', 'yyyy', 'z', 'zz', 'zzz', 'zzzz']\n","solution":"\ninput_string_list = ['x', 'y', 'z']\nrepeat_count = 4\nlist2 = [input_string_list[i] * (j+1)  for i in range(len(input_string_list)) for j in range(repeat_count) ]\nprint(list2)\n\n\n"},{"question":" Write a python program using list comprehension to produce and print the list ['x', 'y', 'z', 'xx', 'yy', 'zz', 'xxx', 'yyy', 'zzz', 'xxxx', 'yyyy', 'zzzz']\n","solution":"\ninput_string_list = ['x', 'y', 'z']\nrepeat_count = 4\nlist3 = [input_string_list[i] * (j+1) for j in range(repeat_count)  for i in range(len(input_string_list)) ]\nprint(list3)\n\n\n"},{"question":" Write a python program using list comprehension to produce and print the list [[2, 3, 4, 5], [3, 4, 5, 6], [4, 5, 6, 7], [5, 6, 7, 8]]\n","solution":"\nstart_num = 2\nrepeat_count = 4\nmax_offset =4\nlist5 = [[start_num + i + j  for j in range(max_offset)]  for i in range(repeat_count) ]\nprint(list5)\n\n\n"},{"question":" Write a python function to find uncommon words between two sentences given\n","solution":"\ndef UncommonWords(A, B): \n    count = {} \n    for word in A.split(): \n        count[word] = count.get(word, 0) + 1\n    for word in B.split(): \n        count[word] = count.get(word, 0) + 1\n  \n    return [word for word in count if count[word] == 1]\n\t\n\t\n"},{"question":" Write a python function to find and print if IP address given is a valid IP address or not\n","solution":"\nimport re\n \ndef Validate_IP(IP):\n    regex = \"(([0-9]|[1-9][0-9]|1[0-9][0-9]|\"\\\n            \"2[0-4][0-9]|25[0-5])\\\\.){3}\"\\\n            \"([0-9]|[1-9][0-9]|1[0-9][0-9]|\"\\\n            \"2[0-4][0-9]|25[0-5])\"\n     \n    regex1 = \"((([0-9a-fA-F]){1,4})\\\\:){7}\"\\\n             \"([0-9a-fA-F]){1,4}\"\n     \n    p = re.compile(regex)\n    p1 = re.compile(regex1)\n \n    if (re.search(p, IP)):\n        return \"Valid IPv4\"\n \n    elif (re.search(p1, IP)):\n        return \"Valid IPv6\"\n \n    return \"Invalid IP\"\n\t\n\n"},{"question":" Write a python function to generate permuations of a list of given numbers\n","solution":"\ndef permute(nums):\n    def backtrack(first = 0):\n        if first == n:        \n            output.append(nums[:])\n        for i in range(first, n):\n            nums[first], nums[i] = nums[i], nums[first]\n\n            backtrack(first + 1)\n\n            nums[first], nums[i] = nums[i], nums[first]\n         \n    n = len(nums)\n    output = []\n    backtrack()\n    return output\n\n\t\n"},{"question":" Write a python program to check and print if the number is a perfect number\n","solution":"\nn = int(input(\"Enter any number: \"))\nsum1 = 0\nfor i in range(1, n):\n    if(n % i == 0):\n        sum1 = sum1 + i\nif (sum1 == n):\n    print(\"The number is a Perfect number!\")\nelse:\n    print(\"The number is not a Perfect number!\")\n\t\n\t\n"},{"question":" Given a decimal number N, write python functions check and print if a number has consecutive zeroes or not after converting the number to its K-based notation.\n","solution":"\ndef hasConsecutiveZeroes(N, K): \n    z = toK(N, K) \n    if (check(z)): \n        print(\"Yes\") \n    else: \n        print(\"No\") \n  \ndef toK(N, K): \n  \n    w = 1\n    s = 0\n    while (N != 0): \n        r = N % K \n        N = N\/\/K \n        s = r * w + s \n        w *= 10\n    return s \n  \ndef check(N): \n\n    fl = False\n    while (N != 0): \n        r = N % 10\n        N = N\/\/10\n  \n        if (fl == True and r == 0): \n            return False\n        if (r > 0): \n            fl = False\n            continue\n        fl = True\n    return True\n\t\n\t\n"},{"question":" Write a python class to implement circular queue with methods enqueue, dequeue\n","solution":"\nclass CircularQueue(object):\n    def __init__(self, limit = 10):\n        self.limit = limit\n        self.queue = [None for i in range(limit)]  \n        self.front = self.rear = -1\n\n    def __str__(self):\n        if (self.rear >= self.front):\n            return ' '.join([str(self.queue[i]) for i in range(self.front, self.rear + 1)])\n  \n        else: \n            q1 = ' '.join([str(self.queue[i]) for i in range(self.front, self.limit)])\n            q2 = ' '.join([str(self.queue[i]) for i in range(0, self.rear + 1)])\n            return q1 + ' ' + q2\n\n    def isEmpty(self):\n        return self.front == -1\n\n    def isFull(self):\n        return (self.rear + 1) % self.limit == self.front\n\n    def enqueue(self, data):\n        if self.isFull():\n            print('Queue is Full!')\n        elif self.isEmpty():\n            self.front = 0\n            self.rear = 0\n            self.queue[self.rear] = data\n        else:\n            self.rear = (self.rear + 1) % self.limit  \n            self.queue[self.rear] = data \n\n    def dequeue(self):\n        if self.isEmpty():\n            print('Queue is Empty!')\n        elif (self.front == self.rear):  \n            self.front = -1\n            self.rear = -1\n        else:\n            self.front = (self.front + 1) % self.limit \n\t\t\t\n\t\t\t\n"},{"question":" Write a python class to implement Deque where elements can be added and deleted both ends\n","solution":"\nclass Deque(object):\n    def __init__(self, limit = 10):\n        self.queue = []\n        self.limit = limit\n\n    def __str__(self):\n        return ' '.join([str(i) for i in self.queue])\n\n    def isEmpty(self):\n        return len(self.queue) <= 0\n\n    def isFull(self):\n        return len(self.queue) >= self.limit\n\n    def insertRear(self, data):\n        if self.isFull():\n            return\n        else:\n            self.queue.insert(0, data)\n\n    def insertFront(self, data):\n        if self.isFull():\n            return\n        else:\n            self.queue.append(data)\n\n    def deleteRear(self):\n        if self.isEmpty():\n            return\n        else:\n            return self.queue.pop(0)\n\n    def deleteFront(self):\n        if self.isFull():\n            return\n        else:\n            return self.queue.pop()\n\t\t\t\n\n\n"},{"question":" Write a python function to return minimum sum of factors of a number\n","solution":"\ndef findMinSum(num): \n    sum = 0\n      \n    i = 2\n    while(i * i <= num): \n        while(num % i == 0): \n            sum += i \n            num \/= i \n        i += 1\n    sum += num    \n\n    return sum\n\t\n\t\n\t\n"},{"question":" Write a python function to check if cafe orders are served in the same order they are paid for\n","solution":"\ndef is_first_come_first_served(take_out_orders, dine_in_orders, served_orders):\n    # Base case\n    if len(served_orders) == 0:\n        return True\n\n\n    if len(take_out_orders) and take_out_orders[0] == served_orders[0]:\n        return is_first_come_first_served(take_out_orders[1:], dine_in_orders, served_orders[1:])\n\n\n    elif len(dine_in_orders) and dine_in_orders[0] == served_orders[0]:\n        return is_first_come_first_served(take_out_orders, dine_in_orders[1:], served_orders[1:])\n\n\n    else:\n        return False\n\n\n"},{"question":" Write python function to generate valid parenthesis, number of parenthesis is given as input\n","solution":"\ndef generateParenthesis(n):\n        \n    def backtrack(S='', left=0, right=0):\n        if len(S) == 2*n:\n            output.append(S)\n            return\n        if left < n:\n            backtrack(S+'(', left+1, right)\n        if right < left:\n            backtrack(S+')', left, right+1)\n        \n    output = []\n    backtrack()\n    return output\n\t\n\t\n"},{"question":" Write a function which Given an list of integers arr and an integer target, find two non-overlapping sub-arrays of arr each with sum equal target\n","solution":"\nfrom collections import defaultdict\ndef minSumOfLengths(arr, target):\n    hashTable = defaultdict(int)\n    hashTable[0] = -1\n    summation = 0\n    for i in range(len(arr)):\n        summation = summation + arr[i]\n        hashTable[summation] = i\n        \n    summation = 0\n    minimumLeft = float('inf')\n    result = float('inf')\n    for i in range(len(arr)):\n        summation = summation + arr[i]\n        if summation - target in hashTable:\n            leftLength = i-hashTable[summation-target]\n            minimumLeft = min(minimumLeft,leftLength)\n        if summation + target in hashTable and minimumLeft < float('inf'):\n            rightLength = hashTable[summation+target]-i\n            result = min(result,hashTable[summation+target]-i+minimumLeft)\n        \n    if result == float('inf'):\n        return -1\n    return result\n\t\n\t\n"},{"question":" Write a function to generate permutation of list of numbers\n","solution":"\ndef permute(nums):\n    def backtrack(first = 0):\n        if first == n:      \n            output.append(nums[:])\n        for i in range(first, n):\n            nums[first], nums[i] = nums[i], nums[first]            \n            backtrack(first + 1)\n\n            nums[first], nums[i] = nums[i], nums[first]\n \n        \n    n = len(nums)\n    output = []\n    backtrack()\n    return output\n\t\n        \n"},{"question":" Write a python program to implement Tic Tac Toe game and print the results\n","solution":"\n\nimport random\nimport sys\nboard=[i for i in range(0,9)]\nplayer, computer = '',''\n\nmoves=((1,7,3,9),(5,),(2,4,6,8))\n\nwinners=((0,1,2),(3,4,5),(6,7,8),(0,3,6),(1,4,7),(2,5,8),(0,4,8),(2,4,6))\n\ntab=range(1,10)\ndef print_board():\n    x=1\n    for i in board:\n        end = ' | '\n        if x%3 == 0:\n            end = ' \\n'\n            if i != 1: end+='---------\\n';\n        char=' '\n        if i in ('X','O'): char=i;\n        x+=1\n        print(char,end=end)\ndef select_char():\n    chars=('X','O')\n    if random.randint(0,1) == 0:\n        return chars[::-1]\n    return chars\ndef can_move(brd, player, move):\n    if move in tab and brd[move-1] == move-1:\n        return True\n    return False\ndef can_win(brd, player, move):\n    places=[]\n    x=0\n    for i in brd:\n        if i == player: places.append(x);\n        x+=1\n    win=True\n    for tup in winners:\n        win=True\n        for ix in tup:\n            if brd[ix] != player:\n                win=False\n                break\n        if win == True:\n            break\n    return win\n\ndef make_move(brd, player, move, undo=False):\n    if can_move(brd, player, move):\n        brd[move-1] = player\n        win=can_win(brd, player, move)\n        if undo:\n            brd[move-1] = move-1\n        return (True, win)\n    return (False, False)\n\ndef computer_move():\n    move=-1\n    for i in range(1,10):\n        if make_move(board, computer, i, True)[1]:\n            move=i\n            break\n    if move == -1:\n        for i in range(1,10):\n            if make_move(board, player, i, True)[1]:\n                move=i\n                break\n    if move == -1:\n        for tup in moves:\n            for mv in tup:\n                if move == -1 and can_move(board, computer, mv):\n                    move=mv\n                    break\n    return make_move(board, computer, move)\ndef space_exist():\n    return board.count('X') + board.count('O') != 9\nplayer, computer = select_char()\nprint('Player is [%s] and computer is [%s]' % (player, computer))\nresult='%%% Deuce ! %%%'\nwhile space_exist():\n    print_board()\n    print('#Make your move ! [1-9] : ', end='')\n    move = int(input())\n    moved, won = make_move(board, player, move)\n    if not moved:\n        print(' >> Invalid number ! Try again !')\n        continue\n \n    if won:\n        result='*** Congratulations ! You won ! ***'\n        break\n    elif computer_move()[1]:\n        result='=== You lose ! =='\n        break;\nprint_board()\nprint(result)\n\n\n"},{"question":" Write a python program to perform Vertical Concatenation in Matrix  \n","solution":"  \ntest_list = [[\"India\", \"good\"], [\"is\", \"for\"], [\"Best\"]] \nprint(\"The original list : \" + str(test_list)) \nres = [] \nN = 0\nwhile N != len(test_list): \n    temp = '' \n    for idx in test_list:       \n\n        try: temp = temp + idx[N] \n        except IndexError: pass\n    res.append(temp) \n    N = N + 1\n  \nres = [ele for ele in res if ele] \n  \nprint(\"List after column Concatenation : \" + str(res)) \n\n\n"},{"question":" Write a python function to perform Matrix Chain multiplication i.e. Given a sequence of matrices, find the most efficient way to multiply these matrices together\n","solution":"\nimport sys \n\ndef MatrixChainOrder(p, i, j): \n  \n    if i == j: \n        return 0\n  \n    _min = sys.maxsize \n      \n    for k in range(i, j): \n      \n        count = (MatrixChainOrder(p, i, k)  \n             + MatrixChainOrder(p, k + 1, j) \n                   + p[i-1] * p[k] * p[j]) \n  \n        if count < _min: \n            _min = count; \n      \n  \n    return _min; \n\n"},{"question":"write a python program to print even numbers in a list\n","solution":"\nlist1  = [2,7,5,64,14]\n\nfor i in list1:\n    if i%2==0:\n        print(i,end=\" \")\n\n\n"},{"question":"write a python program to remove empty list from list and print it\n","solution":"list1 = [2,5,6,[],8,[],[],0]\nlist2=[]\nfor i in list1:\n    if not isinstance(i,list):\n       list2.append(i)\nprint(list2)\n\n"},{"question":" initializing i, j  \n","solution":"i, j = 4, 8\n\ncount=0\nfor k in list1:\n    if k==i and k!=j:\n       count=count+1\n    elif k==j:\n         break;   \n\nprint(count)\n\n\n"},{"question":" write  a python program to print element with maximum values from a list\n","solution":"\nlist1 = [\"gfg\", \"best\", \"for\", \"geeks\"] \n   \ns=[]\nfor i in list1:\n    count=0  \n    for j in i:\n        if j in ('a','e','i','o','u'):\n           count=count+1\n    s.append(count)\nprint(s)    \nif  count== max(s):      \n    print(list1[s.index(max(s))])\n\n"},{"question":"10 write a python program to construct equidigit tuple and print them\n","solution":"\nlist1 = [5654, 223, 982143, 34, 1021]\n\nlist2 = [] \nfor sub in list1: \n      \n    # getting mid element \n    mid_idx = len(str(sub)) \/\/ 2\n      \n    # slicing Equidigits \n    el1 = str(sub)[:mid_idx] \n    el2 = str(sub)[mid_idx:] \n      \n    list2.append((int(el1), int(el2))) \n  \n"},{"question":" initializing list \n","solution":"test_list = [[1, 5, 3, 6], [4, 3, 2, 1], [7, 2, 4, 5], [6, 9, 3, 2]] \n  \n"},{"question":"15 Write a python program to check if two list are reverse equal and print boolean value\n","solution":"\nlist1 = [5, 6, 7, 8] \nlist2 = [8, 7, 6, 5] \n  \n"},{"question":"24 Write a python program to increment Suffix number in string and print it\n","solution":"\ntest_str = 'hello006'\nx=''\nr=''\nfor i in test_str:\n    if i.isdigit() and int(i)>0:\n       x=x+str(int(i)+1)\n    else:\n      r=r+i\nprint(r+x)  \n\n\n"},{"question":"27 Write a python program to extract strings with successive alphabets in alphabetical order and print the list\n","solution":"\nlist1 = ['gfg', 'is', 'best', 'for', 'geeks'] \n\n  \nres = [] \nfor i in range(0,len(list1)):\n    for j in range(0,len(list1[i])-1):\n        if ord(list1[i][j+1])- ord(list1[i][j])==1:\n           res.append(list1[i])\nprint(res)\n\n"},{"question":" using filter() + startswith() \n","solution":""},{"question":" printing result  \n","solution":"print(\"The string after character deletion : \" + str(res))\n\n"},{"question":"34 Write a python program for printing alternate Strings Concatenation\n","solution":"\ntest_list = [\"Early\", \"morning\", \"is\", \"good\", \"for\", \"health\"] \n  \n"},{"question":"s=[]\n","solution":"s=list(set(l))\nprint(\" \".join(i for i in s))\n\n\n"},{"question":"36 Write a python program to trim tuples by k and print it\n","solution":"\ntest_list = [(5, 3, 2, 1, 4), (3, 4, 9, 2, 1), \n             (9, 1, 2, 3, 5), (4, 8, 2, 1, 7)] \n  \n"},{"question":" sort() is used to get sorted result \n","solution":""},{"question":" reverse for sorting by max - first element's tuples \n","solution":"test_list.sort(key = get_max, reverse = True) \n  \n"},{"question":" printing original list \n","solution":"print(\"The original list is : \" + str(test_list))\ns=[]\nk=''\nfor i in test_list:\n    for j in  i:\n        k+=str(j)\nprint(list(set(k)))\n\n\n"},{"question":" getting keys \n","solution":"keys = list(test_list[0].keys()) \n  \nres = [] \n"},{"question":" printing result \n","solution":"print(\"Similar values keys : \" + str(res))\n\n\n"},{"question":" Using list comprehension + items() + dictionary comprehension \n","solution":"  \n"},{"question":" initializing dictionary \n","solution":"test_dict = {1: 6, 8: 1, 9: 3, 10: 8, 12: 6, 4: 9} \n  \n  \n"},{"question":"46 write a python program to test if Values Sum is Greater than Keys Sum in dictionary and print it\n","solution":"\ntest_dict = {5: 3, 1: 3, 10: 4, 7: 3, 8: 1, 9: 5} \n  \n\n  \nres = sum(list(test_dict.keys())) < sum(list(test_dict.values())) \n  \n"},{"question":"48 write a program  to divide dictionary and its keys into K equal dictionaries and print it\n","solution":"\ntest_dict = {\"Gfg\": 20, \"is\": 36, \"best\": 100} \n  \n"},{"question":" printing original dictionary \n","solution":"print(\"The original dictionary is : \" + str(test_dict)) \n  \n"},{"question":" dictionary \n","solution":"res = {key.replace('\"', ''):val for key, val in test_dict.items()} \n      \n"},{"question":"51 write a python program to check whether the values of a dictionary are in same order as in a list\n","solution":"\ntest_dict = {\"gfg\" : 4, \"is\" : 10, \"best\" : 11, \"for\" : 19, \"geeks\" : 1} \n  \n\n  \n"},{"question":" initializing list  \n","solution":"sub_list = [4, 10, 11, 19, 1]\n\nl=list(test_dict.values())\n\n\nif l == sub_list:\n   print(True)\nelse:\n  print(False)  \n  \n #52 write a python program to update a dictionary with the values from a dictionary list and print it\n \n test_dict = {\"Gfg\" : 2, \"is\" : 1, \"Best\" : 3} \n  \n"},{"question":"56 write a python program to print a  Dictionary Keys whose Values summation equals K\n","solution":"\ntest_dict = {\"Gfg\" : 3, \"is\" : 5, \"Best\" : 9, \"for\" : 8, \"Geeks\" : 10} \n  \n"},{"question":" printing original dictionary \n","solution":"print(\"The original dictionary is : \" + str(test_dict)) \n  \n"},{"question":" printing result  \n","solution":"print(\"The filtered dictionary : \" + str(res))  \n\n"},{"question":" initializing range \n","solution":"i, j = 2, 5\nr=''\nfor z in test_list:\n    r += z[i:j] \nprint(r)\n\n"},{"question":"63 write a program to replace dictionary value from other dictionary and print it\n","solution":"\n\ntest_dict = {\"Gfg\" : 5, \"is\" : 8, \"Best\" : 10, \"for\" : 8, \"Geeks\" : 9} \n  \n"},{"question":" initializing tuple index  \n","solution":""},{"question":" printing result  \n","solution":"print(\"The extracted maximum element item : \" + str(res)) \n\n\n"},{"question":"70 write a python program to extract Numerical Dictionary values and print it\n","solution":"\ntest_dict = {\"Gfg\" : [\"34\", \"45\", 'geeks'], 'is' : [\"875\", None, \"15\"], 'best' : [\"98\", 'abc', '12k']} \n  \n"},{"question":" printing result  \n","solution":"print(\"The Numerical values : \" + str(res)) \n\n\n"},{"question":" printing original dictionary \n","solution":"print(\"The original dictionary : \" + str(test_dict)) \nd={}  \n"},{"question":"74 write a python program to assign list items to Dictionary and print it \n","solution":"\n\ntest_list = [{'Gfg' :  1, 'id' : 2 },  \n             {'Gfg' :  4, 'id' : 4 }] \n  \n \n  \n"},{"question":" initializing list  \n","solution":"add_list = [12, 2] \n  \n"},{"question":" Assign list items to Dictionary \n","solution":""},{"question":"76 write a python program  to print Dictionary values String Length Summation \n","solution":"\ntest_dict = {'gfg' : '2345', \n             'is' : 'abcde', \n             'best' : 'qwerty'} \n  \n"},{"question":"80 write a python program to print Nth largest values in dictionary\n","solution":"\n\n\n\n\n\n\n\n\n"},{"question":"82 write a python program to find Tuples with positive elements in List of tuples and print it\n","solution":"\ntest_list = [(4, 5, 9), (-3, 2, 3), (-3, 5, 6), (4, 6)] \n  \n"},{"question":" replace with empty string removes the desired char. \n","solution":"res = [(sub[0].replace(K, ''), sub[1]) for sub in test_list] \n  \n"},{"question":" printing result  \n","solution":"print(\"The filtered tuples : \" + str(res)) \n\n"},{"question":"94 write a program to remove matching tuples and print it\n","solution":"\ntest_list1 = [('Early', 'morning'), ('is','good'), ('for', 'Health')] \ntest_list2 = [('Early', 'morning'), ('is','good')] \n\nl=[]\nfor i in range(0,len(test_list1)):\n    for j in range(0,len(test_list2)):\n        if test_list1[i]  not in test_list2:\n           #continue\n           l.append(test_list1[i])\n           break\nprint(l) \n\n"},{"question":"t=tuple()\n","solution":"for i in range(0,len(ini_tuple)\/\/n):\n    t=tuple()\n    for j in range(N,N+n):\n        #print(ini_tuple[j])\n        t+=(ini_tuple[j],)\n        \n    N=N+n\n    s+=(t,)    \nprint(s)\n\n"},{"question":"96 write a python program to convert  list of tuples into digits and print it\n","solution":"\n\n\nlst = [(11, 100), (22, 200), (33, 300), (44, 400), (88, 800)]\na=''\nfor i in lst:\n    for j in i:\n        a+=str(j)\nprint(list(set(a)))\n\n"},{"question":"98 write a python program to  count the elements in a list until an element is a Tuple  and print it\n","solution":"\nli = [4, 5, 6, 10, (1, 2, 3), 11, 2, 4]\ncount=0\nfor i in li:\n    if  isinstance(i,tuple):\n        break\n    count=count+1\nprint(f'count of element till tuple is encountered {count}')\n\n"},{"question":" write a python function to remove last element in the list\n","solution":"def remove_last_element_list(list1):\n    list1.pop()\n    return list1\n\n"},{"question":" write a python function to find the add two numbers and then find the largest among sum and other two inputs\n","solution":"def find_the_largest(num1, num2):\n    sum_ = num1+num2\n    if num1 >= sum_ and num1 >= num2:\n        return num1\n    elif num2 >= sum_ and num2 >= num1:\n        return num2\n    else:\n        return sum_\n    \n"},{"question":" 4\n","solution":""},{"question":" write a function to calculate the apothem of polygon given the number of edges, circumradius\n","solution":"import math\ndef apothem_of_polygon(number_of_edges, circumradius):\n    return circumradius * math.cos(180\/number_of_edges)\n    \n\n"},{"question":" 10\n","solution":""},{"question":"  write a function to slice a tuple, given an input tuple and start, stop, step=1\n","solution":"def slice_a_tuple(a_tuple, start, stop, step=1):\n    return a_tuple[start:stop:step]\n\n\n"},{"question":" 15\n","solution":""},{"question":" Write a python function to remove a newline in Python\n","solution":"def remove_newline(string):\n    return string.strip()\n\n"},{"question":" 18\n","solution":""},{"question":" 25\n","solution":""},{"question":" Write a Python program to get the current username using getpass library\n","solution":"import getpass\nprint(getpass.getuser())\n\n\n"},{"question":" 32\n","solution":""},{"question":" Write a Python program to find the first repeated word in a given string.\n","solution":"def first_repeated_word(str1):\n    temp = set()\n    for word in str1.split():\n        if word in temp:\n            return word\n        else:\n            temp.add(word)\n    return 'None'\n\n\n"},{"question":" Write a Python program to remove spaces from a given string using set\n","solution":"def remove_duplicate(str1):\n    list_str = str1.split()\n    return \"\".join(set(list_str))\n\n"},{"question":" Write a python function to get the volume of a cube with side as input\n","solution":"def cube_volume(side):\n    volume = side ** 3\n    return volume \n\n"},{"question":"  Write a python function to get the volume of a pyramid with base area & vertical height as input\n","solution":"def pyramid_volume(base_area, height):\n    volume = 1\/3 * base_area * height\n    return volume\n\n"},{"question":" Write a python function to get the surface area of a cube with side as input\n","solution":"def cube_surface_area(side):\n    surface_area = 6 * side ** 2\n    return surface_area \n\n"},{"question":" Write a python function to get the surface_area of a cylinder with radius & height as input\n","solution":"def cylinder_surface_area(radius, height):\n    surface_area = 3.14 * (radius ** 2) + (2 * 3.14 * radius * height)\n    return surface_area\n\n\n"},{"question":" Yield successive n-sized \n","solution":""},{"question":" 60\n","solution":""},{"question":" 61\n","solution":""},{"question":" Write a Python program to convert a list of tuples into a dictionary.\n","solution":"\n"},{"question":" 74\n","solution":""},{"question":" Write a Python function that returns the ASCII value of the passed in character.\n","solution":"def ascii_value_of_character(char):\n    return ord(char)\n\n\n"},{"question":" 76\n","solution":""},{"question":" Write a Python function to add two given lists using map and lambda.\n","solution":"def add_two_lists(list_1, list_2):\n    result = map(lambda x, y: x + y, list_1, list_2)\n    return result\n\n\n"},{"question":" Write a Python function to return Fermat's Sequence\n","solution":""},{"question":" Cn = n\u22c52n + 1, with n \u2265 0. \n","solution":"def cullen_number(n):\n    if n >= 0:\n        return n * 2 ** n + 1\n  \n\n"},{"question":" 91\n","solution":""},{"question":" Write a Python function to convert Hours into Seconds\n","solution":"def hours_to_seconds(hours):\n    return hours * 60 * 60\n\n"},{"question":" 95\n","solution":""},{"question":" Write a Python function that finds the maximum range of a triangle's third edge, where the side lengths are all integers.\n","solution":"def next_edge(side1, side2):\n    return (side1+side2-1)\n\n"},{"question":" Write a Python function that returns True if a string is empty and False otherwise.\n","solution":"def is_empty(s):\n    if s == \"\":\n        return True\n    else:\n        return False\n\n"},{"question":" write a Python function to count the number of occurrences in list\n","solution":"def countX(lst, x): \n    return lst.count(x) \n\nlst = [8, 6, 8, 10, 8, 20, 10, 8, 8] \nx = 8\nprint('{} has occurred {} times'.format(x, countX(lst, x))) \n\n\n"},{"question":" write a Python function to clone or copy a list using the in-built function list() \n","solution":"def Cloning(li1): \n    li_copy = list(li1) \n    return li_copy \n\nli1 = [4, 8, 2, 10, 15, 18] \nli2 = Cloning(li1) \nprint(\"Original List:\", li1) \nprint(\"After Cloning:\", li2) \n\n\n\n"},{"question":" write a python function for implementation of Insertion Sort \n","solution":"\ndef insertionSort(arr): \n\n    for i in range(1, len(arr)): \n\n        key = arr[i] \n\n        j = i-1\n        while j >=0 and key < arr[j] : \n                arr[j+1] = arr[j] \n                j -= 1\n        arr[j+1] = key \n\n\narr = [12, 11, 13, 5, 6] \ninsertionSort(arr) \nprint (f\"Sorted array is: {arr}\") \n\n\n"},{"question":" write a python program to print two sets union using operations like in mathematic\n","solution":"\nE = {0, 2, 4, 6, 8};\nN = {1, 2, 3, 4, 5};\n\nprint(\"Union of E and N is\",E | N)\n\n"},{"question":" write a python program to print two sets symmetric differences using operations like in mathematic\n","solution":"\nE = {0, 2, 4, 6, 8};\nN = {1, 2, 3, 4, 5};\nprint(\"Symmetric difference of E and N is\",E ^ N)\n\n\n"},{"question":" write a python program to print all the prime numbers within an interval\n","solution":"\nlower = 900\nupper = 1000\n\nprint(\"Prime numbers between\", lower, \"and\", upper, \"are:\")\n\nfor num in range(lower, upper + 1):\n   # all prime numbers are greater than 1\n   if num > 1:\n       for i in range(2, num):\n           if (num % i) == 0:\n               break\n       else:\n           print(num)\n\n"},{"question":" write a python program to find index of min element\n","solution":"lst = [40, 10, 20, 30]\n\ndef minIndex(lst):\n    return min(range(len(lst)), key=lst.__getitem__)\nprint(minIndex(lst))\n\n"},{"question":" write a python program to use maxsplit with arbitrary whitespace\n","solution":"\ns = \"foo    bar   foobar foo\"\n\nprint(s.split(None, 2))\n\n"},{"question":" write a python program to add whitespaces both sides of a string\n","solution":"\ns = 'The Little Price'\n\nwidth = 20\ns3 = s.center(width)\n\nprint(s3) \n\n"},{"question":" write a python program to sort a dictionary by its values and print the sorted dictionary with 'key' argument.\n","solution":"\nd = {'apple': 10, 'orange': 20, 'banana': 5, 'rotten tomato': 1}\nprint(sorted(d.items(), key=lambda x: x[1]))\n\n\n"},{"question":" write a python program to call different functions based on condition with same arguments \n","solution":"def product(a, b):\n    return a * b\n\ndef subtract(a, b):\n    return a - b\n\nb = True\nprint((product if b else subtract)(1, 1))\n\n\n"},{"question":" write a Python function to check if a string is binary or not \n","solution":"\ndef check2(string) : \n\n    t = '01'\n\n    count = 0\n    for char in string : \n\n        if char not in t : \n            count = 1\n            break\n        else : \n            pass\n    if count : \n        print(\"No, string is not binary\") \n    else : \n        print(\"Yes, string is binary\") \n\nstring = \"001021010001010\"\n\ncheck2(string) \n\n"},{"question":" write a Python Function to rotate string left and right by d length \n","solution":"\ndef rotate(input,d): \n\n    Lfirst = input[0 : d] \n    Lsecond = input[d :] \n    Rfirst = input[0 : len(input)-d] \n    Rsecond = input[len(input)-d : ] \n\n    print (\"Left Rotation : \", (Lsecond + Lfirst) ) \n    print (\"Right Rotation : \", (Rsecond + Rfirst)) \n\ninput = 'GeeksforGeeks'\nd=4\nrotate(input,d) \n\n"},{"question":" write a Python program for Handling missing keys in dictionaries \n","solution":"\ncountry_code = {'India' : '0091', \n                'Australia' : '0025', \n                'Nepal' : '00977'} \n\nprint(country_code.get('India', 'Not Found')) \nprint(country_code.get('Japan', 'Not Found')) \n\n\n"},{"question":" write a Python function To Calculate Total Surface Area of Cylinder \n","solution":"def totalsurfacearea(r, h): \n    tsurf_ar = (2 * pi * r * h) + (2 * pi * r * r) \n    return tsurf_ar \n\nr = 5\nh = 8\n\nprint(\"Total Surface Area Of Cylinder = \",totalsurfacearea(r,h)) \n\n"},{"question":" write a Python function to find the Area of Icosahedron \n","solution":"\ndef findArea(a): \n  \n    area = 5 * 3 ** 0.5 * a * a \n    return area \n\na = 5\nprint(\"Area: \" , findArea(a)) \n\n"},{"question":" Calculate difference in days between two dates\n","solution":"def days_between(d1, d2):\n    from datetime import datetime as dt\n    f_date = dt.strptime(d1, \"%d\/%m\/%Y\").date()\n    l_date = dt.strptime(d2, \"%d\/%m\/%Y\").date()\n    delta = l_date - f_date\n    print(delta.days)\n\n\n"},{"question":" Python program to find whether a given number (accept from the user) is even or odd, print out an appropriate\n","solution":""},{"question":" Python program to compute the greatest common divisor (GCD) of two positive integers.\n","solution":"\ndef gcd(x, y):\n    gcd1 = 1\n\n    if x % y == 0:\n        return y\n\n    for k in range(int(y \/ 2), 0, -1):\n        if x % k == 0 and y % k == 0:\n            gcd1 = k\n            break\n    return gcd1\n\n\nprint(gcd(12, 17))\nprint(gcd(4, 6))\n\n\n"},{"question":" Python program to print out all even numbers from a given numbers list in the same order and stop the printing if\n","solution":""},{"question":" Python program to accept string and calculate number of upper and lower case string\n","solution":"\ndef string_test(s):\n    d = {\"UPPER_CASE\": 0, \"LOWER_CASE\": 0}\n    for c in s:\n        if c.isupper():\n            d[\"UPPER_CASE\"] += 1\n        elif c.islower():\n            d[\"LOWER_CASE\"] += 1\n        else:\n            pass\n    print(\"Original String : \", s)\n    print(\"No. of Upper case characters : \", d[\"UPPER_CASE\"])\n    print(\"No. of Lower case Characters : \", d[\"LOWER_CASE\"])\n\n\nstring_test('The quick Brown Fox')\n\n\n"},{"question":" python program to detect number of local variables defined in a program\n","solution":"def abc():\n    x = 1\n    y = 2\n    str1 = \"w3resource\"\n    print(\"Python Exercises\")\n\n\nprint(abc.__code__.co_nlocals)\n\n\n"},{"question":" Python program to create a list containing the power of said number in bases raised to the corresponding number in\n","solution":""},{"question":" than the specified number.\n","solution":"def sum_of_cubes(n):\n    n -= 1\n    total = 0\n    while n > 0:\n        total += n * n * n\n        n -= 1\n    return total\n\n\nprint(\"Sum of cubes: \", sum_of_cubes(3))\n\n\n"},{"question":" Write a function to get n elements of the fibonacci series\n","solution":"def fibonacci(n):\n    n1, n2 = 0, 1\n    count = 0\n    \n    if n <= 0:\n        print('Please enter a positive integer')\n    elif n == 1:\n        print(\"Fibonacci sequence:\")\n        print(n1)\n    else:\n        print(\"Fibonacci sequence:\")\n        while count < n:\n            print(n1)\n            nth = n1 + n2\n            # update values\n            n1, n2 = n2, nth\n            count += 1\n\t\t\t\n\n"},{"question":" Write a function to count the number of digits in a number\n","solution":"def count_digits(n):\n    return len(str(n))\n\n\n"},{"question":"9. Python Program to Convert Celsius To Fahrenheit\n","solution":"celsius = 37.5\nfahrenheit = (celsius * 1.8) + 32\nprint('%0.1f degree Celsius is equal to %0.1f degree Fahrenheit' %(celsius,fahrenheit))\n\n\n"},{"question":" first two terms\n","solution":"n1, n2 = 0, 1\ncount = 0\n\n"},{"question":"19. Python Program to Check Armstrong Number (for 3 digits)\n","solution":"\nnum = int(input(\"Enter a number: \"))\n\n"},{"question":" choose the smaller number\n","solution":"    if x > y:\n        smaller = y\n    else:\n        smaller = x\n    for i in range(1, smaller+1):\n        if((x % i == 0) and (y % i == 0)):\n            hcf = i \n    return hcf\n\n"},{"question":"35. Python Program to Compute LCM Using GCD\n","solution":"\n"},{"question":" This function multiplies two numbers\n","solution":"def multiply(x, y):\n    return x * y\n\n"},{"question":" check if the number is negative\n","solution":"if num < 0:\n   print(\"Sorry, factorial does not exist for negative numbers\")\nelif num == 0:\n   print(\"The factorial of 0 is 1\")\nelse:\n   print(\"The factorial of\", num, \"is\", recur_factorial(num))\n\n"},{"question":"44. Python Program to Multiply Two Matrices using Nested Loop\n","solution":"\nX = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n"},{"question":" 3x4 matrix\n","solution":"Y = [[5,8,1,2],\n    [6,7,3,0],\n    [4,5,9,1]]\n\n"},{"question":"45. Python Program to Check Whether a String is Palindrome or Not\n","solution":"\nmy_str = 'aIbohPhoBiA'\n\n"},{"question":" Write a python function to copy the sign bit from one variable to another\n","solution":"def copysign(dst, src) :\n    return math.copysign(dst, src)\n\n"},{"question":" Write a python function to find bilinear interpolation of a point x, y given 4 points represented as a list\n","solution":"def bilinear_interpolation(x, y, points):\n    points = sorted(points)               # order points by x, then by y\n    (x1, y1, q11), (_x1, y2, q12), (x2, _y1, q21), (_x2, _y2, q22) = points\n\n    if x1 != _x1 or x2 != _x2 or y1 != _y1 or y2 != _y2:\n        raise ValueError('points do not form a rectangle')\n    if not x1 <= x <= x2 or not y1 <= y <= y2:\n        raise ValueError('(x, y) not within the rectangle')\n\n    return (q11 * (x2 - x) * (y2 - y) +\n            q21 * (x - x1) * (y2 - y) +\n            q12 * (x2 - x) * (y - y1) +\n            q22 * (x - x1) * (y - y1)\n           ) \/ ((x2 - x1) * (y2 - y1) + 0.0) \n\n"},{"question":" Write a python function to generate a random hexadecimal key of length n\n","solution":"import random\ndef rand_run_name(n):\n    ran = random.randrange(10**80)\n    myhex = \"%064x\" % ran\n    #limit string to 64 characters\n    myhex = myhex[:n]\n    return myhex\n\n"},{"question":" Write a python function to convert a list of strings to equivalent character array using itertools\n","solution":"import itertools\ndef extract_characters(input_list):\n    return [ char_val for char_val in itertools.chain.from_iterable(input_list) ]\n\n"},{"question":" Write a python function to generate amortization schedule given initial loan amount, interest rate, annual payments and tenure.\n","solution":"import itertools\ndef loan_schedule(principal, interest_rate, annual_payment, tenure):\n    if(tenure <= 0):\n        print(\"Invalid tenure\",tenure)\n        raise ValueError\n    if(interest_rate > 1 or interest_rate < 0):\n        print(\"Invalid interest rate\",interest_rate,\" Expected between 0 and 1\")\n        raise ValueError\n    cashflows = [principal, *list(itertools.repeat(-annual_payment, tenure))]\n    effective_interest_rate = 1+interest_rate\n    return [ val for val in list(itertools.accumulate(cashflows, lambda bal, pmt: (bal*effective_interest_rate + pmt))) if val > 0]\n\n"},{"question":"15.Python program to display all the prime numbers within an interval\n","solution":"\nlower = 900\nupper = 1000\n\nprint(\"Prime numbers between\", lower, \"and\", upper, \"are:\")\n\nfor num in range(lower, upper + 1):\n   # all prime numbers are greater than 1\n   if num > 1:\n       for i in range(2, num):\n           if (num % i) == 0:\n               break\n       else:\n           print(num)\n\n"},{"question":"18. Python Program to Print the Fibonacci sequence\n","solution":"\nnterms = int(input(\"How many terms? \"))\n\n"},{"question":" display the result\n","solution":"if num == sum:\n   print(num,\"is an Armstrong number\")\nelse:\n   print(num,\"is not an Armstrong number\")\n\n"},{"question":"25. Python Program to Convert Decimal to Binary\n","solution":"dec = 344\n\nprint(\"The decimal value of\", dec, \"is:\")\nprint(bin(dec), \"in binary.\")\n\n\n"},{"question":"27. Python Program to Convert Decimal to Hexadecimal\n","solution":"dec = 344\nprint(\"The decimal value of\", dec, \"is:\")\nprint(hex(dec), \"in hexadecimal.\")\n\n\n"},{"question":" This function adds two numbers\n","solution":"def add(x, y):\n    return x + y\n\n"},{"question":" check if the number of terms is valid\n","solution":"if nterms <= 0:\n   print(\"Plese enter a positive integer\")\nelse:\n   print(\"Fibonacci sequence:\")\n   for i in range(nterms):\n       print(recur_fibo(i))\n\n\n"},{"question":"40. Python Program to Add Two Matrices\n","solution":"X = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n\nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n\nresult = [[0,0,0],\n         [0,0,0],\n         [0,0,0]]\n\n"},{"question":" iterate through rows\n","solution":"for i in range(len(X)):\n   # iterate through columns\n   for j in range(len(X[0])):\n       result[i][j] = X[i][j] + Y[i][j]\n\nfor r in result:\n   print(r)\n\n"},{"question":"41. Python Program to Add Two Matrices using Nested List Comprehension\n","solution":"X = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n\nY = [[5,8,1],\n    [6,7,3],\n    [4,5,9]]\n\nresult = [[X[i][j] + Y[i][j]  for j in range(len(X[0]))] for i in range(len(X))]\n\nfor r in result:\n   print(r)\n\n\n"},{"question":" result is 3x4\n","solution":"result = [[sum(a*b for a,b in zip(X_row,Y_col)) for Y_col in zip(*Y)] for X_row in X]\n\nfor r in result:\n   print(r)\n\n\n"},{"question":" make it suitable for caseless comparison\n","solution":"my_str = my_str.casefold()\n\n"},{"question":" reverse the string\n","solution":"rev_str = reversed(my_str)\n\n"},{"question":" my_str = input(\"Enter a string: \")\n","solution":"\n"},{"question":" set union\n","solution":"print(\"Union of E and N is\",E | N)\n\n"},{"question":" 49. Python Program to Count the Number of Each Vowel \n","solution":"vowels = 'aeiou'\n\nip_str = 'Hello, have you tried our tutorial section yet?'\n\n"},{"question":" Rotate an array of n elements to the right by k steps.\n","solution":"org = [1,2,3,4,5,6,7]\nresult = org[:]\nsteps = 3\n\nfor idx,num in enumerate(org):\n    if idx+steps < len(org):\n        result[idx+steps] = org[idx]\n    else:\n        result[idx+steps-len(org)] = org[idx]\n\nprint(result)\n\n"},{"question":" Consider an array of non-negative integers. A second array is formed by shuffling the elements of the first array and deleting a random element. Given these two arrays, find which element is missing in the second array.\n","solution":"first_array = [1,2,3,4,5,6,7]\nsecond_array = [3,7,2,1,4,6]\n\ndef finder(first_array, second_array):\n    return(sum(first_array) - sum(second_array))\n\nmissing_number = finder(first_array, second_array)\n\nprint(missing_number)\n\n"},{"question":" write a program to multiply two Matrix \n","solution":""},{"question":" 3x3 matrix\n","solution":"X = [[12,7,3],\n    [4 ,5,6],\n    [7 ,8,9]]\n"},{"question":" write a program to find and print the remainder of two number\n","solution":"\nnum1 = 12\nnum2 = 10\n\nratio = num1 % num2\nprint(f'remainder:{ratio}')\n\n"},{"question":" Removes the item at the given index from the list and returns the removed item\n","solution":"my_list1 = [4,3,2,9,10,44,1,9,12]\nindex = 4\nprint(f\"Sum of two list:,{my_list1.pop(index)}\")\n\n"},{"question":" Generate a list by list comprehension\n","solution":"list = [x for x in range(10)]\nprint(f\"List Generated by list comprehension:{list}\")\n\n"},{"question":" Join Two Sets\n","solution":"set1 = {\"a\", \"b\" , \"c\"}\nset2 = {1, 2, 3}\nset3 = set2.union(set1)\nprint(f\"Joined Set:{set3}\")\n\n"},{"question":" Evaluate a string and a number\n","solution":"print(bool(\"Hello\"))\nprint(bool(15))\n\n"},{"question":" Test if string starts with H\n","solution":"word = \"Hello World\"\ncheck = word.startswith('H')\nprint(f\"String starts with H?:{check}\")\n\n"},{"question":" Counting total Upper Case in a string\n","solution":"str1 = \"abc4234AFde\"\ndigitCount = 0\nfor i in range(0,len(str1)):\n  char = str1[i]\n  if(char.upper()):\n    digitCount += 1\nprint('Number total Upper Case: ',digitCount)\n\n"},{"question":" Insert a number at the beginning of the queue\n","solution":"q = [1,2,3,4]\nq.insert(0,5)\nprint(f\"Revised List:{q}\")\n\n"},{"question":" Sort JSON keys in Python and write it into a file\n","solution":"import json\nsampleJson = {\"id\" : 1, \"name\" : \"value2\", \"age\" : 29}\n\nwith open(\"sampleJson.json\", \"w\") as write_file:\n    json.dump(sampleJson, write_file, indent=4, sort_keys=True)\nprint(\"Done writing JSON data into a file\")\n\n"},{"question":" Remove empty strings from the list of strings\n","solution":"list1 = [\"Mike\", \"\", \"Emma\", \"Kelly\", \"\", \"Brad\"]\nresList = [i for i in (filter(None, list1))]\nprint(resList)\n\n"},{"question":" Write a program which will create a new string by appending s2 in the middle of s1 given two strings, s1 and s2\n","solution":"def appendMiddle(s1, s2):\n  middleIndex = int(len(s1) \/2)\n  middleThree = s1[:middleIndex:]+ s2 +s1[middleIndex:]\n  print(\"After appending new string in middle\", middleThree)\n  \nappendMiddle(\"Ault\", \"Kelly\")\n\n"},{"question":" Given a dictionary get all values from the dictionary and add it in a list but don\u2019t add duplicates\n","solution":"speed  ={'jan':47, 'feb':52, 'march':47, 'April':44, 'May':52, 'June':53,\n          'july':54, 'Aug':44, 'Sept':54} \n\nspeedList = []\nfor item in speed.values():\n  if item not in speedList:\n    speedList.append(item)\nprint(\"unique list\", speedList)\n\n"},{"question":" Convert string into a datetime object\n","solution":"from datetime import datetime\ndate_string = \"Feb 25 2020  4:20PM\"\ndatetime_object = datetime.strptime(date_string, '%b %d %Y %I:%M%p')\nprint(datetime_object)\n\n"},{"question":" Generate a Python list of all the even numbers between two given numbers\n","solution":"num1 = 4\nnum2 = 30\nmyval = [i for i in range(num1, num2, 2)]\nprint(myval)\n\n"},{"question":" Generate weighted random numbers\n","solution":"import random\nrandomList = random.choices(range(10, 40, 5), cum_weights=(5, 15, 10, 25, 40, 65), k=6)\nprint(randomList)\n\n"},{"question":" Alternate cases in String \n","solution":"test_str = \"geeksforgeeks\"\nres = \"\" \nfor idx in range(len(test_str)): \n    if not idx % 2 : \n       res = res + test_str[idx].upper() \n    else: \n       res = res + test_str[idx].lower() \nprint(res)\n\n"},{"question":" 3. python function to return the squareroot of a list of numbers\n","solution":"def sqrt(n):\n   return [i**0.5 for i in range(n)]\n\n"},{"question":"8. python function to identify profane words\n","solution":"def profane_filter(str):\n    profane_word_url = \"https:\/\/raw.githubusercontent.com\/RobertJGabriel\/Google-profanity-words\/master\/list.txt\"\n    file = urllib.request.urlopen(profane_word_url)\n    for line in file:\n        decoded_line = line.decode(\"utf-8\")\n    return decoded_line\n    str = re.findall(r'\\w+', str)\n    return [i for i in str if i in decoded_line]\n\n"},{"question":" 14. python function to create adders\n","solution":"def create_adders():\n    adders = []\n    for n in range(1, 4):\n        adders.append(lambda x, y=n: x + y)\n    return adders\nadders = create_adders()\n\n"},{"question":" 23. python function to find the area of a circle\n","solution":"def square_area(x):\n    return x ** 2\n\n"},{"question":" 25. Python Program to Add two Lists\n","solution":" \nNumList1 = []\nNumList2 = []\ntotal = []\n\nNumber = int(input(\"Please enter the Total Number of List Elements: \"))\nprint(\"Please enter the Items of a First and Second List   \")\nfor i in range(1, Number + 1):\n    List1value = int(input(\"Please enter the %d Element of List1 : \" %i))\n    NumList1.append(List1value)\n\n    List2value = int(input(\"Please enter the %d Element of List2 : \" %i))\n    NumList2.append(List2value)\n    \nfor j in range(Number):\n    total.append( NumList1[j] + NumList2[j])\n \nprint(\"\\nThe total Sum of Two Lists =  \", total)\n\n"},{"question":" 26. Python Program to find Largest and Smallest Number in a List \n","solution":"\nNumList = []\nNumber = int(input(\"Please enter the Total Number of List Elements: \"))\nfor i in range(1, Number + 1):\n    value = int(input(\"Please enter the Value of %d Element : \" %i))\n    NumList.append(value)\n\nsmallest = largest = NumList[0]\n\nfor j in range(1, Number):\n    if(smallest > NumList[j]):\n        smallest = NumList[j]\n        min_position = j\n    if(largest < NumList[j]):\n        largest = NumList[j]\n        max_position = j\n\nprint(\"The Smallest Element in this List is : \", smallest)\nprint(\"The Index position of Smallest Element in this List is : \", min_position)\nprint(\"The Largest Element in this List is : \", largest)\nprint(\"The Index position of Largest Element in this List is : \", max_position)\n\n"},{"question":" 35. write a Python function To Calculate Volume OF Cylinder \n","solution":"def volume(r, h): \n    vol = 22\/7 * r * r * h \n    return vol\n\n"},{"question":" 40. write a Python function to Remove all duplicates from a given string\n","solution":"def removeDuplicate(str): \n    s=set(str) \n    s=\"\".join(s) \n    print(\"Without Order:\",s) \n    t=\"\" \n    for i in str: \n        if(i in t): \n            pass\n        else: \n            t=t+i \n    print(\"With Order:\",t) \n    \nstr1=\"conondrum\"\nremoveDuplicate(str1) \n\nfrom .sin import sine\nfrom .cos import cosine\nfrom .tan import tangent\nfrom .softmax import softmax\nfrom .sigmoid import sigmoid\nfrom .tanh import tanh\nfrom .relu import ReLU\nfrom .log import log\nfrom .exp import exp\n\nfrom .sin import dsine\nfrom .cos import dcosine\nfrom .tan import dtangent\nfrom .sigmoid import dsigmoid\nfrom .tanh import dtanh\nfrom .log import dlog\nfrom .exp import dexp\n\nimport math\n\n"},{"question":" 43. python function for finding sine angle\n","solution":"def sine(angle):\n\n    \"\"\" returns the sine value for an angle mentioned in radians\"\"\"\n\n    return math.sin(angle)\n\n"},{"question":" write a python function to check if a given string is a palindrome\n","solution":"\ndef isPalindrome(s):\n    return s == s[::-1]\n\n"},{"question":" write a program to split and join a string with a hyphen delimiter\n","solution":"\nstr1 = \"part of speech\"\ndelimiter = \"-\"\n\nlist_str = str1.split(\" \")\n\nnew_str = delimiter.join(list_str)\n\nprint(\"Delimited String is: \" + new_str)\n\n"},{"question":" write a function to find common words from two strings\n","solution":"\ndef commonWords(str1, str2): \n  \n    count = {} \n      \n    for word in str1.split(): \n        count[word] = count.get(word, 0) + 1\n      \n    for word in str2.split(): \n        count[word] = count.get(word, 0) + 1\n  \n    return [word for word in count if count[word] > 1]\n\n"},{"question":" write a program to print number of characters in a string\n","solution":"\nstr1 = 'It is a glorious day'\n\nres = len(str1) \n\nprint(\"The number of characters in string are : \", str(res)) \n\n\n\n"},{"question":" write a python function that accepts a list of dictionaries and sorts it by a specified key\n","solution":"def sort_dict_list(dict_list, sort_key):\n  dict_list.sort(key=lambda item: item.get(sort_key))\n\n"},{"question":" write a function to return the mean difference in the length of keys and values of dictionary comprising of strings only.\n","solution":"def mean_key_val_diff(input_dict):\n  sum_diff = 0\n  for key, val in input_dict.items():\n    sum_diff += abs(len(val) - len(key))\n  return sum_diff\/len(input_dict)\n\n"},{"question":" write a Python program to replace the value of a particular key with nth index of value if the value of the key is list.\n","solution":"test_list = [{'tsai': [5, 3, 9, 1], 'is': 8, 'good': 10}, \n             {'tsai': 1, 'for': 10, 'geeks': 9}, \n             {'love': 4, 'tsai': [7, 3, 22, 1]}]   \nN = 2\nkey = \"tsai\"  \nfor sub in test_list: \n    if isinstance(sub[key], list): \n        sub[key] = sub[key][N]\n\n"},{"question":" write a program that categorizes tuple values based on second element and prints a dictionary value list where each key is a category.\n","solution":"test_list = [(1, 3), (1, 4), (2, 3), (3, 2), (5, 3), (6, 4)] \nres = {} \nfor i, j in test_list: \n     res.setdefault(j, []).append(i) \nprint(\"The dictionary converted from tuple list : \" + str(res))\n\n"},{"question":" write a python program to add an element to a list. Print the final list.\n","solution":"lst = [\"Jon\", \"Kelly\", \"Jessa\"]\nlst.append(\"Scott\")\nprint(lst)\n\n\n"},{"question":" Write a python program to print positive Numbers in a List \n","solution":"  \nlist1 = [11, -21, 0, 45, 66, -93] \n  \nfor num in list1: \n      \n    if num >= 0: \n       print(num, end = \" \") \n\n\n"},{"question":" Write a python function to get the Cumulative sum of a list \n","solution":"def Cumulative(lists): \n    cu_list = [] \n    length = len(lists) \n    cu_list = [sum(lists[0:x:1]) for x in range(0, length+1)] \n    return cu_list[1:]\n \n\n # Write a python program to print if a string \"hello\" is present in the list\nl = [1, 2.0, 'hello','have', 'a', 'good', 'day'] \n  \ns = 'hello'  \n  \nif s in l: \n    print(f'{s} is present in the list') \nelse: \n    print(f'{s} is not present in the list') \n\n"},{"question":" Write a python program to print the distance between first and last occurrence of even element.\n","solution":"  \ntest_list = [1, 3, 7, 4, 7, 2, 9, 1, 10, 11] \n  \nindices_list = [idx for idx in range( \n    len(test_list)) if test_list[idx] % 2 == 0] \n  \n\nres = indices_list[-1] - indices_list[0] \n  \nprint(\"Even elements distance : \" + str(res)) \n\n\n"},{"question":" Write a python program to print odd numbers in a List \n","solution":"  \nlist1 = [10, 21, 4, 45, 66, 93, 11]  \n   \nodd_nos = list(filter(lambda x: (x % 2 != 0), list1)) \n  \nprint(\"Odd numbers in the list: \", odd_nos)\n\n\n"},{"question":" Write a python program to convert each list element to key-value pair. Print the final dictionary\n","solution":"  \ntest_list = [2323, 82, 129388, 234, 95] \n  \nprint(\"The original list is : \" + str(test_list)) \n  \nres = dict() \nfor ele in test_list: \n  \n    mid_idx = len(str(ele)) \/\/ 2\n    key = int(str(ele)[:mid_idx]) \n    val = int(str(ele)[mid_idx:]) \n  \n    res[key] = val \n  \nprint(\"Constructed Dictionary : \" + str(res)) \n\n"},{"question":" write a python function that when given two numbers, would divide the first number by second number and return the quotient and remainder\n","solution":"def divide_first_number_by_second(num1, num2):\n    return (num1 \/\/ num2), (num1 % num2)\n\n\n"},{"question":" write a python function shifts and scales all numbers in the given list by the given mean and standard deviation\n","solution":"def shift_and_scale(list_of_nums, mean, std):\n    return [ (x-mean) \/ std for x in list_of_nums ]\n\n\n"},{"question":" write a python function that would reverse the given string\n","solution":"def reverse_string(str_to_be_reversed):\n    return str_to_be_reversed[::-1]\n\n\n"},{"question":" write a python function that takes in a list and returns a list containing the squares of the elements of the input list\n","solution":"def square_list_elements(list_to_be_squared):\n    return list( map(lambda x: x**2, list_to_be_squared) )\n\n\n"},{"question":" write a python function that finds square roots of a given number, if the square root is an integer, else returns the message \"Error - the square root is not an integer\"\n","solution":"def find_integer_square_roots(num):\n    found = False\n    for k in range(1, (num\/\/2)+1):\n        if ((k**2)==num):\n            found = True\n            break\n    if not found:\n        return \"Error - the square root is not an integer\"\n    return -k, k\n\n\n"},{"question":" Write a function to return the area of a equilateral triangle\n","solution":"def cal_eq_triangle_area(a:float)->float:\n    if a:\n        return (3**(1\/2))*(a**2)\/4\n    else:\n        return None\n\n"},{"question":" Write a function to return the area of a right angle triangle\n","solution":"\ndef cal_rt_triangle_area(base:float,height:float)->float:\n    if base and height:\n        return (base*height)\/2\n    else:\n        return None\n\n"},{"question":" Write a function to return the type roots of a quadratic equation ax**2 + bx + c = 0\n","solution":"def root_type(a:float,b:float,c:float):\n    if b**2-4*a*c >= 0:\n        return 'real'\n    else:\n        return 'imaginary'\n\n"},{"question":" Write a function to return the area of a trapezium with base a base b and height h between parallel sides\n","solution":"def cal_area_trapezium(a,b,h):\n    return h*(a+b)\/2\n\n"},{"question":" Write a function to return the area of a circle of raidus r\n","solution":"def cal_area_circle(r):\n    pi = 3.14\n    return pi*r**2\n\n"},{"question":" Write a function to return the lateral surface area of a cylinder\n","solution":"def cal_cylinder_lat_surf_area(height,radius):\n    pi=3.14\n    return 2*pi*radius*height\n\n"},{"question":" Write a function to return the total surface area of a cuboid of length l, bredth b and height h\n","solution":"def cal_surface_area_cuboid(l,b,h):\n    return 2*(l*b+b*h+h*l)\n\n"},{"question":" Write a function to return the volume of a cylinder\n","solution":"def cal_cylinder_volume(height, radius):\n    pi=3.14\n    return pi*(radius**2)*height\n\n"},{"question":" Write a function to return the volume of a cone\n","solution":"def cal_cone_volume(height,radius):\n    pi=3.14\n    return pi*(radius**2)*height\/3\n\n"},{"question":" Write a function to return the volume of a hemi sphere\n","solution":"def cal_hemisphere_volume(radius:float)->float:\n    pi=3.14\n    return (2\/3)*pi*(radius**3)\n\n"},{"question":" Write a function to return the volume of a cube\n","solution":"def cal_cube_volume(side:float)->float:\n    return side**3\n\n"},{"question":" Write a function to return the angualr veolcity based on augualr distance travelled in radian unit and time taken\n","solution":"def cal_angular_velocity(angular_dist:float,time:float)->float:\n    return angular_dist\/time\n\n"},{"question":" Write a function to calculate the volume V of ideal gas based on ideal gas equation Pressure P and Tempreature T given\n","solution":"def find_volume_of_ideal_gas(pressure:float, temp:float,n:float)->float:\n    r = 8.3145 # gas constant R\n    return (n*r*temp)\/pressure\n\n"},{"question":" Write a function to calculate the Temprature T of ideal gas based on ideal gas equation Pressure P and Volume V given\n","solution":"\ndef find_temp_of_ideal_gas(pressure:float, volume:float,n:float)->float:\n    r = 8.3145 # gas constant R\n    return (pressure*volume)\/n*r\n\n"},{"question":" Write a function to calculate the displacement of an object with initial velocity u, time t and acceleration a\n","solution":"def cal_displacement(initial_velocity:float,accelration:float,time:float)->float:\n    return initial_velocity*time + .5*accelration*(time)**2\n\n"},{"question":" Write a function to calculate the density given mass and volume\n","solution":"def cal_density(mass,volume):\n    return (mass\/volume)\n\n"},{"question":" Write a function to implement Gnome Sort\n","solution":"def gnomeSort(arr, n):\n    index = 0\n    while index < n:\n        if index == 0:\n            index = index + 1\n        if arr[index] >= arr[index - 1]:\n            index = index + 1\n        else:\n            arr[index], arr[index - 1] = arr[index - 1], arr[index]\n            index = index - 1\n    return arr\narr = [34, 2, 10, -9]\nn = len(arr)\narr = gnomeSort(arr, n)\nprint(\"Sorted seqquence after applying Gnome Sort :\")\nfor i in arr:\n    print(i)\n\n\n"},{"question":" write a python program list comprehension to make a list of size n of random integers in ranges a and b\n","solution":"\nimport random\n\nn = 10\na = 1\nb = 100\n\nrand = [random.randint(a, b) for i in range(n)]\nprint(f'list : {rand}')\n\n"},{"question":" write a python program to print a string in lowercase\n","solution":"\nstring = 'SFG';\nprint(string.lower())\n\n"},{"question":" write a python program to typecast an integer to string and print it\n","solution":"\nx = 2\ny = str(x)\nprint(y)\n\n"},{"question":" write a function to check if a string is a palindrome or not\n","solution":"\ndef reverse_string(string):\n    return string[::-1]\n\ndef ispalin(string):\n    if string == reverse_string(string):\n        return True\n    return False\n\n"},{"question":" write a python function to return the number of whitespace separated tokens\n","solution":"\ndef tokenise(string):\n    return len(string.split())\n\n"},{"question":" write a program to print logrithmic values of any number \n","solution":"\nimport math\nx = 100\nbase = 5\nprint(math.log(x,base))\n\n"},{"question":" write a program to remove duplicate elements in a list and print the list\n","solution":"\ntest_list = [1, 3, 5, 6, 3, 5, 6, 1] \nprint (\"The original list is : \" +  str(test_list)) \n  \nres = [] \nfor i in test_list: \n    if i not in res: \n        res.append(i) \n  \nprint (\"The list after removing duplicates : \" + str(res))\n\n"},{"question":" write a program to print binary of a decimal number n\n","solution":"\nbinaryNum = [0] * n; \ni = 0; \nwhile (n > 0):  \n    binaryNum[i] = n % 2; \n    n = int(n \/ 2); \n    i += 1; \n\nfor j in range(i - 1, -1, -1): \n    print(binaryNum[j], end = \"\")\n\n"},{"question":" write a function to calculate the sum of digits of a number\n","solution":"\ndef sum_of_digits(num):\n    sum = 0\n    while(num > 0):\n        sum += num % 10\n        num = num \/\/ 10\n    return sum\n\n"},{"question":" write a function to return the square of first N numbers\n","solution":"def get_squares(n):\n   return [i*i for i in range(n)]\n\n\n"},{"question":" write a python program to calculate the sum of numbers using reduce and print it\n","solution":"from functools import reduce\nnums = [1, 2, 3, 4, 5, 10, 20, 30, 40, 50]\ntotal_sum = reduce(lambda a, b: a + b, nums)\nprint(f'Sum: {total_sum}')\n\n\n"},{"question":" write a function that merges two dictionaries\n","solution":"def merge_dictionaries(dict1, dict2):\n   return {**dict1, **dict2}\n\n\n"},{"question":" write a python program to print the difference in days between two dates\n","solution":"from datetime import date\ndate1 = date(2020, 10, 25)\ndate2 = date(2020, 12, 25)\nprint(f'Difference between dates: {(date2 - date1).days}')\n\n\n"},{"question":" write a program to print the current date and time\n","solution":"from datetime import datetime\nnow = datetime.now()\nprint(now)\n\n\n"},{"question":" write a python program to print the number of uppercase and lowercase letters in a string\n","solution":"sentence = 'The Quick Brown Fox'\nlowercase = 0\nuppercase = 0\nfor c in sentence:\n   if c.isupper():\n      uppercase += 1\n   elif c.islower():\n      lowercase += 1\n   else:\n      pass\nprint(f'Lowercase: {lowercase}, Uppercase: {uppercase}')\n\n\n"},{"question":" write a program that adds corresponding elements in two lists and prints a new list\n","solution":"list1 = [1, 2, 3, 4, 5]\nlist2 = [5, 4, 3, 2, 1]\nsum_list = [a+b for (a,b) in zip(list1, list2)]\nprint(sum_list)\n\n\n"},{"question":" write a python program to multiply three numbers and print the result\n","solution":"num1 = 2\nnum2 = 4\nnum3 = 6\nprint(num1 * num2 * num3)\n\n\n"},{"question":" write a python function to return the factors of a number\n","solution":"def get_factors(num):\n   factors = []\n   for i in range(1, num + 1):\n      if num % i == 0:\n         factors.append(i)\n   return factors\n\n\n"},{"question":" write a python program to print the items in a list apart from the first 4\n","solution":"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(my_list[4:])\n\n\n"},{"question":" write a python program that prints the circumference of a circle\n","solution":"import math\nradius = 10\nprint(f'Area: {2 * math.pi * radius}')\n\n\n"},{"question":" write a python program to convert a set to a list\n","solution":"myset = {1, 2, 4, 7}\nmylist = list(myset)\n\n\n"},{"question":" Write a function to return reverse of a list\n","solution":"\ndef reverse_list(l1:list)->list:\n    return l1[::-1]\n\n"},{"question":" Write a function that generates fibbonacci series\n","solution":"def Fibonacci(n:int)-> int:\n    if n==1:\n        fibonacci = 0\n    elif n==2:\n        fibonacci = 1\n    else:\n        fibonacci = Fibonacci(n-1) + Fibonacci(n-2)\n    return fibonacci\n\n\n"},{"question":" Write a function that returns derivative of tan value of the input\n","solution":"def derivative_tan(x:float)-> float:\n    import math\n    return (1\/math.cos(x))**2\n\n\n"},{"question":" Write a function that returns derivative of log of a function\n","solution":"def derivative_log(x:float)->float:\n    return (1\/x)\n\n\n"},{"question":" Write a function to identify to count no of instances of a value  inside a dictionary\n","solution":"def count_value(d:dict, value)->bool:\n    return list(v == value for v in dict.values()).count(True)\n\n"},{"question":" Write a function to identify if value is present inside a list or not\n","solution":"def check_listvalue(l:list, value)->bool:\n    return value in l\n\n"},{"question":" Write a function that returns lowercase string\n","solution":"def str_lowercase(s:str):\n    return s.lower()\n\n"},{"question":" Write a function that returns a list sorted descending\n","solution":"def descending_sort(l:list):\n    sorted(l, reverse=True)\n\n"},{"question":" Write a function that returns a dictionary sorted descending by its values\n","solution":"def descending_dict_valuesort(d:dict):\n    return {key: val for key, val in sorted(d.items(), reverse=True, key = lambda ele: ele[1])}\n\n"},{"question":" write a generator function in python to generate infinite square of numbers using yield\n","solution":"def nextSquare(): \n    i = 1;  \n    # An Infinite loop to generate squares  \n    while True: \n        yield i*i                 \n        i += 1\n\n"},{"question":"write a python function to sort list using heapq \n","solution":"def heapsort(iterable):\n    from heapq import heappush, heappop\n    h = []\n    for value in iterable:\n        heappush(h, value)\n    return [heappop(h) for i in range(len(h))]\n\n"},{"question":" write a python function to return first n items of the iterable as a list\n","solution":"def take(n, iterable):    \n    import itertools\n    return list(itertools.islice(iterable, n))\n\n"},{"question":" write a python function to check whether all elements are equal to each other\n","solution":"def all_equal(iterable):\n    from itertools import groupby\n    g = groupby(iterable)\n    return next(g, True) and not next(g, False)\n\n"},{"question":" write a python function to flatten one level of nesting\n","solution":"def flatten(list_of_lists):\n    from itertools import chain\n    return chain.from_iterable(list_of_lists)\n\n"},{"question":" write a python function to use a predicate and return entries particition into false entries and true entries\n","solution":"def partition(pred, iterable):\n    from itertools import filterfalse, tee\n    # partition(is_odd, range(10)) --> 0 2 4 6 8   and  1 3 5 7 9\n    t1, t2 = tee(iterable)\n    return filterfalse(pred, t1), filter(pred, t2)\n\n"},{"question":" write a python function to return random selection from itertools.permutations(iterable, r)\n","solution":"def random_permutation(iterable, r=None):\n    import random\n    pool = tuple(iterable)\n    r = len(pool) if r is None else r\n    return tuple(random.sample(pool, r))\n\n"},{"question":" write a python function to perform random selection from itertools.combinations_with_replacement(iterable, r)\n","solution":"def random_combination_with_replacement(iterable, r):\n    import random\n    pool = tuple(iterable)\n    n = len(pool)\n    indices = sorted(random.choices(range(n), k=r))\n    return tuple(pool[i] for i in indices)\n\n"},{"question":" write a python function to read a CSV file and print its content\n","solution":"def read_csv(filename):\n    import csv\n    with open(filename, newline='') as f:\n        reader = csv.reader(f)\n        for row in reader:\n            print(row)\n\n"},{"question":" write a program to print least frequent character in a string\n","solution":"\nstr1=\"watch the match\"\nall_freq = {} \nfor i in str1: \n    if i in all_freq: \n        all_freq[i] += 1\n    else: \n        all_freq[i] = 1\nres = min(all_freq, key = all_freq.get)\nprint(\"Minimum of all characters is: \" + str(res))\n\n"},{"question":" write a program to check if a string is binary or not\n","solution":"\nstr1=\"01110011 a\"\n\nset1 = set(str1)\n\nif set1 == {'0','1'} or set1 == {'0'} or set1 == {'1'}:\n    print(\"string is binary\")\nelse:\n    print(\"string is not binary\")\n\n"},{"question":" write a function to remove i-th indexed character in a given string\n","solution":"\ndef remove_char(string, i):\n\n    str1 = string[ : i]  \n\n    str2 = string[i + 1: ] \n      \n    return str1 + str2 \n\n"},{"question":" write a program to replace multiple words with a single word\n","solution":"\nstr1 = 'CoffeeDay is best for coffee and having long conversations'\n  \nword_list = [\"best\", 'long'] \n  \nrepl_word = 'good'\n  \nres = ' '.join([repl_word if idx in word_list else idx for idx in str1.split()]) \n\nprint(\"String after multiple replace : \" + str(res))\n\n"},{"question":" write a function that return space count\n","solution":" \ndef count_space(str1): \n\n    count = 0\n      \n    for i in range(0, len(str1)): \n\n        if str1[i] == \" \": \n            count += 1\n          \n    return count\n\n"},{"question":" write a function to check if a upper case letter exists in a given string\n","solution":"\ndef check_upper(str1):\n    \n    for char in str1: \n        k = char.isupper()   \n        if k == True: \n            return True\n    if(k != 1): \n        return False\n\n"},{"question":" write a program to print number of characters in a string\n","solution":"\nstr1 = 'It is a glorious day'\n\nres = len(str1) \n\nprint(\"The number of characters in string are : \", str(res)) \n\n\n\n"},{"question":" write a program that prints the number of unique keys in a list of dictionaries.\n","solution":"list_of_dicts = [{\"key1\": \"val1\", \"Country\": \"India\"}, \n                 {\"Country\": \"USA\", \"foo\": \"bar\"},\n                 {\"foo\": \"bar\", \"foo2\":\"bar2\"}]\nunique_keys = []\nfor d in list_of_dicts:\n  for key in d:\n    if key not in unique_keys:\n      unique_keys.append(key)\nprint(f\"Number of unique keys: {len(unique_keys)}\")\n\n"},{"question":" write a program that categorizes tuple values based on second element and prints a dictionary value list where each key is a category.\n","solution":"test_list = [(1, 3), (1, 4), (2, 3), (3, 2), (5, 3), (6, 4)] \nres = {} \nfor i, j in test_list: \n     res.setdefault(j, []).append(i) \nprint(\"The dictionary converted from tuple list : \" + str(res))\n\n"},{"question":" write a Python3 program that prints a index wise product of a Dictionary of Tuple Values     \n","solution":"test_dict = {'END Program' : (5, 6, 1), 'is' : (8, 3, 2), 'best' : (1, 4, 9)}\nprod_list=[]\nfor x in zip(*test_dict.values()):\n  res = 1 \n  for ele in x: \n      res *= ele\n  prod_list.append(res)\nres = tuple(prod_list) \nprint(\"The product from each index is : \" + str(res))\n\n"},{"question":" write a program to Pretty Print a dictionary with dictionary values. \n","solution":"test_dict = {'tsai' : {'rate' : 5, 'remark' : 'good'}, 'cs' : {'rate' : 3}} \nprint(\"The Pretty Print dictionary is : \") \nfor sub in test_dict: \n    print(f\"\\n{sub}\") \n    for sub_nest in test_dict[sub]: \n        print(sub_nest, ':', test_dict[sub][sub_nest])\n\n"},{"question":" write a Python program that sorts dictionary keys to a list using their values and prints this list.\n","solution":"test_dict = {'Geeks' : 2, 'for' : 1, 'CS' : 3} \nres = list(sum(sorted(test_dict.items(), key = lambda x:x[1]), ())) \nprint(\"List after conversion from dictionary : \", res)\n\n"},{"question":" write a program to print the values of a given extraction key from a list of dictionaries. \n","solution":"test_list = [{\"Gfg\" : 3, \"b\" : 7},  \n             {\"is\" : 5, 'a' : 10},  \n             {\"Best\" : 9, 'c' : 11}]  \nK = 'Best'\nres = [sub[K] for sub in test_list if K in sub][0]   \nprint(\"The extracted value : \" + str(res))\n\n"},{"question":" Write a python program to print a list after removing elements from index 1 to 4\n","solution":"\nlist1 = [11, 5, 17, 18, 23, 50]  \n  \ndel list1[1:5] \n  \nprint(*list1)\n\n\n"},{"question":" Write a python fuction to create an empty list \n","solution":"  \ndef emptylist():\n   return list()  \n\n"},{"question":" Write a python program to swap first and last element of a list . Print the final list\n","solution":"  \ndef swapList(newList): \n    size = len(newList) \n      \n    # Swapping  \n    temp = newList[0] \n    newList[0] = newList[size - 1] \n    newList[size - 1] = temp \n      \n    return newList \n      \nnewList = [12, 35, 9, 56, 24] \n  \nprint(swapList(newList)) \n\n"},{"question":" Write a python program for print all elements with digit 7.\n","solution":"  \ntest_list = [56, 72, 875, 9, 173]  \n   \nK = 7\n  \nres = [ele for ele in test_list if str(K) in str(ele)] \n  \nprint(\"Elements with digit K : \" + str(res))\n\n\n"},{"question":" Write a python program to Remove Tuples of Length 1 from a list of tuples. Print the final list.\n","solution":"  \ntest_list = [(4, 5), (4, ), (8, 6, 7), (1, ), (3, 4, 6, 7)] \nK = 1\nres = [ele for ele in test_list if len(ele) != K] \n  \nprint(\"Filtered list : \" + str(res))\n\n"},{"question":" Write a python program to print positive Tuples in List.\n","solution":"  \ntest_list = [(4, 5, 9), (-3, 2, 3), (-3, 5, 6), (4, 6)] \n  \n\nprint(\"The original list is : \" + str(test_list)) \n  \n\nres = [sub for sub in test_list if all(ele >= 0 for ele in sub)] \n  \n\nprint(\"Positive elements Tuples : \" + str(res))\n\n"},{"question":" In[83]:\n","solution":"\n\n"},{"question":" In[120]:\n","solution":"\n\n"},{"question":" In[111]:\n","solution":"\n\n"},{"question":" In[43]:\n","solution":"\n\n"},{"question":" In[123]:\n","solution":"\n\n"},{"question":" write a python program to iterate through a string using lambda and print the result\n","solution":"letters = list(map(lambda x: x, 'human'))\nprint(letters)\n\n\n"},{"question":" write a python program to print python version using sys\n","solution":"import sys\n\nprint(f\"{sys.version}\")\n\n\n"},{"question":" In[144]:\n","solution":"\n\n"},{"question":" In[149]:\n","solution":"\n\n"},{"question":"#  write a python function to convert given variable to said datatype\n","solution":"\ndef type_conversion(typ,a):\n  if(typ)=='int':\n    return(int(a))\n  elif(typ)=='float':\n    return(float(a))\n  else:\n    return(str(a))\n\ntype_conversion('str',1)\n\n"},{"question":"get the username from a prompt\n","solution":"username = input(\"Login: >> \")\n\n"},{"question":" Write a program to reverse a number\n","solution":"\nn=int(input(\"Enter number: \"))\nrev=0\nwhile(n>0):\n    dig=n%10\n    rev=rev*10+dig\n    n=n\/\/10\nprint(\"Reverse of the number:\",rev)\n\n"},{"question":" Write a program to get 3rd and last character of a given string\n","solution":"\nstring=\"Good Night\"\nprint(\"\\nSlicing characters between \" +\n    \"3rd and last character: \") \nprint(string[3:-1])\n\n"},{"question":"!\/usr\/bin\/env python\n","solution":""},{"question":" In[7]:\n","solution":"\n\n"},{"question":" write a python function to sort a list of tuples by the second Item \n","solution":"  \ndef Sort_Tuple(tup):  \n      \n    # getting length of list of tuples \n    lst = len(tup)  \n    for i in range(0, lst):  \n          \n        for j in range(0, lst-i-1):  \n            if (tup[j][1] > tup[j + 1][1]):  \n                temp = tup[j]  \n                tup[j]= tup[j + 1]  \n                tup[j + 1]= temp  \n    return tup  \n  \n"},{"question":" write a program to find sum of elements in list\n","solution":"total = 0\nprint(f'sum: {sum([total + x for x in [1, 2, 3, 4, 5]])}')\n\n\n"},{"question":" In[45]:\n","solution":"\n\n"},{"question":" write a program to remove the empty list from the given list \n","solution":"str_list = [\"Emma\", \"Jon\", \"\", \"Kelly\", None, \"Eric\", \"\"]\n\nprint(str_list)\n\n"},{"question":" use built-in function filter to filter empty value\n","solution":"new_str_list = list(filter(None, str_list))\n\nprint(\"After removing empty strings\")\nprint(new_str_list)\n\n\n"},{"question":" In[96]:\n","solution":"\n\n"},{"question":" write a progarm to adds every 3rd number in a list\n","solution":"from functools import reduce\ninput_list = [x for x in range(10)]\nreduce((lambda x, y: x + y), [val for idx, val in enumerate(input_list) if (idx+1)%3==0])\n\n\n"},{"question":" Given a string, find the length of the longest substring without repeating characters.\n","solution":"str = \"piyushjain\"\n\ndef longest_non_repeat(str):   \n    i=0\n    max_length = 1\n\n    for i,c in enumerate(str):       \n        start_at = i\n        sub_str=[]         \n        while (start_at < len(str)) and (str[start_at] not in sub_str):\n            sub_str.append(str[start_at])\n            start_at = start_at + 1\n        if len(sub_str) > max_length:\n            max_length = len(sub_str)\n        print(sub_str)\n    return max_length\n\nlongest_non_repeat(str)\n\n"},{"question":" result is 3x4\n","solution":"result = [[0,0,0,0],\n         [0,0,0,0],\n         [0,0,0,0]]\n\n"},{"question":" Concatenation of two List\n","solution":"my_list1 = [4,3,2,9,10,44,1]\nmy_list2 = [5,6,2,8,15,14,12]\nprint(f\"Sum of two list:,{my_list1+my_list2}\")\n\n"},{"question":" Test if string contains upper case\n","solution":"word = \"Hello World\"\ncheck = word.isupper()\nprint(f\"String contains upper case?:{check}\")\n\n"},{"question":"  Fibonacci series up to 100\n","solution":"n = 100\nresult = []\na, b = 0 , 1\nwhile b < n:\n  result. append( b)\n  a, b = b, a + b\nfinal = result\nprint(f\"Fibonacci series up to 100:{final}\")\n\n"},{"question":" Counting total lower Case in a string\n","solution":"str1 = \"abc4234AFdeaa\"\ndigitCount = 0\nfor i in range(0,len(str1)):\n  char = str1[i]\n  if(char.lower()):\n    digitCount += 1\nprint('Number total lower Case: ',digitCount)\n\n"},{"question":" Write a program which will create a new string by appending s2 in the middle of s1 given two strings, s1 and s2\n","solution":"def appendMiddle(s1, s2):\n  middleIndex = int(len(s1) \/2)\n  middleThree = s1[:middleIndex:]+ s2 +s1[middleIndex:]\n  print(\"After appending new string in middle\", middleThree)\n  \nappendMiddle(\"Ault\", \"Kelly\")\n\n"},{"question":" Given an input string, count occurrences of all characters within a string\n","solution":"str1 = \"Apple\"\ncountDict = dict()\nfor char in str1:\n  count = str1.count(char)\n  countDict[char]=count\nprint(countDict)\n\n"},{"question":" Given a dictionary get all values from the dictionary and add it in a list but don\u2019t add duplicates\n","solution":"speed  ={'jan':47, 'feb':52, 'march':47, 'April':44, 'May':52, 'June':53,\n          'july':54, 'Aug':44, 'Sept':54} \n\nspeedList = []\nfor item in speed.values():\n  if item not in speedList:\n    speedList.append(item)\nprint(\"unique list\", speedList)\n\n"},{"question":" Subtract a week from a given date\n","solution":"from datetime import datetime, timedelta\ngiven_date = datetime(2020, 2, 25)\ndays_to_subtract = 7\nres_date = given_date - timedelta(days=days_to_subtract)\nprint(res_date)\n\n"},{"question":" Return the largest item from the given list\n","solution":"aList = [4, 6, 8, 24, 12, 2]\nprint(max(aList))\n\n"},{"question":" Generate random Universally unique IDs\n","solution":"import uuid\nsafeId = uuid.uuid4()\nprint(\"safe unique id is \", safeId)\n\n"},{"question":" Choose given number of elements from the list with different probability\n","solution":"import random\nnum1 =5\nnumberList = [111, 222, 333, 444, 555]\nprint(random.choices(numberList, weights=(10, 20, 30, 40, 50), k=num1))\n\n"},{"question":" Find if all elements in a list are identical\n","solution":"listOne = [20, 20, 20, 20]\nprint(\"All element are duplicate in listOne:\", listOne.count(listOne[0]) == len(listOne))\n\n"},{"question":" Convert two lists into a dictionary\n","solution":"ItemId = [54, 65, 76]\nnames = [\"Hard Disk\", \"Laptop\", \"RAM\"]\nitemDictionary = dict(zip(ItemId, names))\nprint(itemDictionary)\n\n"},{"question":" write a program to print length of a string\n","solution":"\nstr1 = \"great way to learn!\"\nprint(len(str1))\n\n"},{"question":" write a program to print even length words in a string\n","solution":"\nstr1 = \"I am doing fine\"\ns = str1.split(' ')\nfor word in s:  \n    if len(word)%2==0: \n        print(word)  \n\n"},{"question":" write a program to accept the strings which contains all vowels\n","solution":"\nstr1 = \"__main__\"\nif len(set(str1).intersection(\"AEIOUaeiou\"))>=5: \n  print('accepted') \nelse: \n  print(\"not accepted\") \n\n"},{"question":" write a program to remove all duplicate characters from a string\n","solution":"\nstr1 = \"what a great day!\"\nprint(\"\".join(set(str1)))\n\n"},{"question":" write a program to find and print all words which are less than a given length in a string\n","solution":"\nstr1 = \"It is wonderful and sunny day for a picnic in the park\"\nstr_len = 5\n\nres_str = [] \n      \ntext = str1.split(\" \") \n      \nfor x in text: \n\n    if len(x) < str_len: \n        res_str.append(x) \n\nprint(\"Words that are less than \" + str(str_len) + \": \" + str(res_str))\n\n"},{"question":" write a program to split and join a string with a hyphen delimiter\n","solution":"\nstr1 = \"part of speech\"\ndelimiter = \"-\"\n\nlist_str = str1.split(\" \")\n\nnew_str = delimiter.join(list_str)\n\nprint(\"Delimited String is: \" + new_str)\n\n"},{"question":" write a function to find uncommon words from two strings\n","solution":"\ndef UncommonWords(str1, str2): \n  \n    count = {} \n      \n    for word in str1.split(): \n        count[word] = count.get(word, 0) + 1\n      \n    for word in str2.split(): \n        count[word] = count.get(word, 0) + 1\n  \n    return [word for word in count if count[word] == 1]\n\n"},{"question":" write a program to calculate and print number of letters and digits in a string\n","solution":"\nstr1 = \"python1234\"\n  \ntotal_digits = 0\ntotal_letters = 0\n  \nfor s in str1: \n  \n    if s.isnumeric(): \n        total_digits += 1\n    else: \n        total_letters += 1\n  \nprint(\"Total letters found : \", total_letters) \nprint(\"Total digits found : \", total_digits) \n\n"},{"question":" write a program to print number of words in a string\n","solution":"\nstr1 = 'It is a glorious day'\n\nres = len(str1.split()) \n  \nprint(\"The number of words in string are : \" + str(res)) \n\n"},{"question":" write a program to capitalize the first and last character of each key in a dictionary \n","solution":"input_dict = {'key_a': 10, 'kEy': 2, 'Key_B': 13}\nfor key in list(input_dict.keys()):\n  new_key = key[0].upper() + key[1:-1] + key[-1].upper()\n  input_dict[new_key] = input_dict[key]\n  if key != new_key:\n    del input_dict[key]\n\n"},{"question":" write a function that inverts a dictionary with non-unique values. Keys that map to the same values should be appended to a list in the inverted dictionary\n","solution":"def invert_dict_non_unique(my_dict):\n  my_inverted_dict = dict()\n  for key, value in my_dict.items():\n      my_inverted_dict.setdefault(value, list()).append(key)\n  return my_inverted_dict\n\n"},{"question":" write a program to convert a list of dictionary to list of tuples and print it. \n","solution":"ini_list = [{'a':[1, 2, 3], 'b':[4, 5, 6]}, \n            {'c':[7, 8, 9], 'd':[10, 11, 12]}] \ntemp_dict = {} \nresult = [] \nfor ini_dict in ini_list: \n    for key in ini_dict.keys(): \n         if key in temp_dict: \n             temp_dict[key] += ini_dict[key] \n         else: \n             temp_dict[key] = ini_dict[key]   \nfor key in temp_dict.keys(): \n     result.append(tuple([key] + temp_dict[key])) \nprint(\"Resultant list of tuples: {}\".format(result))\n\n"},{"question":" write a program that prints dictionaries having key of the first dictionary and value of the second dictionary\n","solution":"test_dict1 = {\"tsai\" : 20, \"is\" : 36, \"best\" : 100} \ntest_dict2 = {\"tsai2\" : 26, \"is2\" : 19, \"best2\" : 70} \nkeys1 = list(test_dict1.keys()) \nvals2 = list(test_dict2.values()) \nres = dict() \nfor idx in range(len(keys1)): \n\tres[keys1[idx]] = vals2[idx] \nprint(\"Mapped dictionary : \" + str(res))\n\n"},{"question":" write a Python program to combine two dictionary by adding values for common keys \n","solution":"dict1 = {'a': 12, 'for': 25, 'c': 9} \ndict2 = {'Geeks': 100, 'geek': 200, 'for': 300} \nfor key in dict2: \n    if key in dict1: \n        dict2[key] = dict2[key] + dict1[key] \n    else: \n        pass\n\n"},{"question":" write a python function to append all elements of one list to another\n","solution":"def extend_list(list1, list2):\n    list1 = [1, 2]\n    list2 = [3, 4]\n    return list1.extend(list2)\n\n\n"},{"question":" Write a python program to print positive Numbers in a List \n","solution":"  \nlist1 = [11, -21, 0, 45, 66, -93] \n  \nfor num in list1: \n      \n    if num >= 0: \n       print(num, end = \" \") \n\n\n"},{"question":" Write a python program to remove 11 and 18 from a list. Print the final list.\n","solution":"  \nlist1 = [11, 5, 17, 18, 23, 50]  \n  \nunwanted_num = {11, 18} \n  \nlist1 = [ele for ele in list1 if ele not in unwanted_num] \n  \nprint(\"New list after removing unwanted numbers: \", list1)\n\n\n"},{"question":" Write a python program to Remove multiple empty spaces from  List of strings. Print the original and final lists.\n","solution":"  \ntest_list = ['gfg', '   ', ' ', 'is', '            ', 'best'] \n  \nprint(\"The original list is : \" + str(test_list)) \n  \nres = [ele for ele in test_list if ele.strip()] \n      \nprint(\"List after filtering non-empty strings : \" + str(res)) \n\n\n"},{"question":" Write a python program to reverse a list and print it.  \n","solution":"def Reverse(lst): \n    return [ele for ele in reversed(lst)] \n      \nlst = [10, 11, 12, 13, 14, 15] \nprint(Reverse(lst)) \n\n"},{"question":" Write a python program to swap first and last element of a list . Print the final list\n","solution":"  \ndef swapList(newList): \n    size = len(newList) \n      \n    # Swapping  \n    temp = newList[0] \n    newList[0] = newList[size - 1] \n    newList[size - 1] = temp \n      \n    return newList \n      \nnewList = [12, 35, 9, 56, 24] \n  \nprint(swapList(newList)) \n\n"},{"question":" Write a python program to Remove Tuples of Length 1 from a list of tuples. Print the final list.\n","solution":"  \ntest_list = [(4, 5), (4, ), (8, 6, 7), (1, ), (3, 4, 6, 7)] \nK = 1\nres = [ele for ele in test_list if len(ele) != K] \n  \nprint(\"Filtered list : \" + str(res))\n\n"},{"question":" Write a python program to print a list of tuples from given list having number and its cube in each tuple \n","solution":"  \nlist1 = [1, 2, 5, 6] \n \nres = [(val, pow(val, 3)) for val in list1] \n  \nprint(res) \n\n"},{"question":" Write a python program to join Tuples from a list of tupels if they have similar initial element. Print out the output\n","solution":"\ntest_list = [(5, 6), (5, 7), (6, 8), (6, 10), (7, 13)] \nprint(\"The original list is : \" + str(test_list)) \n  \nres = [] \nfor sub in test_list:                                            \n    if res and res[-1][0] == sub[0]:               \n        res[-1].extend(sub[1:])                         \n    else: \n        res.append([ele for ele in sub])      \nres = list(map(tuple, res)) \n  \nprint(\"The extracted elements : \" + str(res))\n\n\n"},{"question":" write a python function that returns the input list sorted in ascending order\n","solution":"def sort_ascending(list_to_be_sorted):\n    return sorted(list_to_be_sorted)\n\n\n"},{"question":" write a recursive python function that would return the sum of first n natural numbers, where n is the input\n","solution":"def sum_first_n_recursive(n):\n    if n == 0:\n        return 0\n    return sum_first_n_recursive(n-1) + n\n\n\n"},{"question":" write a python function that performs selection sort on the given list or tuple or string and returns the new sorted sequence\n","solution":"def selection_sort(list_to_be_sorted):\n    sorted_list = list_to_be_sorted[:]\n    for i in range(len(sorted_list)):\n        new_min = sorted_list[i]\n        new_min_old_place = i\n        for j in range(i+1, len(sorted_list)):\n            if new_min > sorted_list[j]:\n                new_min = sorted_list[j]\n                new_min_old_place = j\n        old_val = sorted_list[i]\n        sorted_list[i] = new_min\n        sorted_list[new_min_old_place] = old_val\n    return sorted_list\n\n\n"},{"question":" write a python program that asks user to guess a number between 1 and 5 and guess it within 3 guesses\n","solution":"print(\"Please guess a number between 1 and 5 and I will guess within 3 chances!\")\nguess1 = input(\"Is it <= 3? enter y\/n \\n\")\nif guess1 == \"y\":\n    guess2 = input(\"Is it <= 2? enter y\/n \\n\")\n    if guess2 == \"y\":\n        guess3 = input(\"Is it 1? enter y\/n \\n\")\n        if guess3 == \"y\":\n            print(\"Yay! found the number, its 1\")\n        else:\n            print(\"Yay! found the number, its 2\")\n    else:\n        print(\"Yay! found the number, its 3\")\nelse:\n    guess2 = input(\"Is it 4? enter y\/n \\n\")\n    if guess2 == \"y\":\n        print(\"Yay! found the number, its 4\")\n    else:\n        print(\"Yay! found the number, its 5\")\n\n\n"},{"question":" Write a function to return the mean of numbers in a list\n","solution":"def cal_mean(num_list:list)->float:\n    if num_list:\n        return sum(num_list)\/len(num_list)\n    else:\n        return None\n\n"},{"question":" Write a function to return the area of triangle by heros formula\n","solution":"def cal_triangle_area(a:float,b:float,c:float)->float:\n    if a or b or c:\n        s = (a+b+c)\/2\n        if s>a and s>b and s>c:\n            area = (s*(s-a)*(s-b)*(s-c))**(1\/2)\n            return round(area,2)\n        else:\n            return None\n    return None\n\n"},{"question":" Write a function to return the area of a square\n","solution":"def cal_area_square(side):\n    return side**2\n\n"},{"question":" Write a function to return the perimeter of a isoscales triangle\n","solution":"def cal_perimeter_iso_triangle(s1,s2):\n    return 2*s1+s2\n\n"},{"question":" Write a function to return the surface area of a hemi-sphere\n","solution":"def cal_area_hemisphere(radius):\n    pi = 3.14\n    return 2*pi*(radius**2)\n\n"},{"question":" Write a function to return the volume of a cone\n","solution":"def cal_cone_volume(height,radius):\n    pi=3.14\n    return pi*(radius**2)*height\/3\n\n"},{"question":" Write a function to return the volume of a sphere\n","solution":"def cal_sphere_volume(radius:float)->float:\n    pi=3.14\n    return (4\/3)*pi*(radius**3)\n\n"},{"question":" Write a function to return the time taken by a given of moving object based of distance travelled in given time\n","solution":"def cal_time(distance:float,speed:float)->float:\n    return distance\/speed\n\n"},{"question":" Write a function to calculate the total resistance of resistances in series in a given list\n","solution":"def cal_total_res_in_series(res_list:list)->float:\n    return sum(res_list)\n\n"},{"question":" Write a function to calculate the new selling price based on discount percentage\n","solution":"def cal_sp_after_discount(sp:float,discount:float)->float:\n    return sp*(1 - discount\/100)\n\n"},{"question":" Write a function to find sum of nested list using Recursion\n","solution":"total = 0\ndef sum_nestedlist(l):\n    global total\n    for j in range(len(l)):\n        if type(l[j]) == list:\n\n            sum_nestedlist(l[j])\n        else:\n            total += l[j]\n\nsum_nestedlist([[1, 2, 3], [4, [5, 6]], 7])\nprint(total)\n\n"},{"question":" Write a function to implement Pigeonhole Sort *\/\n","solution":"def pigeonhole_sort(a):\n    my_min = min(a)\n    my_max = max(a)\n    size = my_max - my_min + 1\n    holes = [0] * size\n    for x in a:\n        assert type(x) is int, \"integers only please\"\n        holes[x - my_min] += 1\n    i = 0\n    for count in range(size):\n        while holes[count] > 0:\n            holes[count] -= 1\n            a[i] = count + my_min\n            i += 1\na = [8, 3, 2, 7, 4, 6, 8]\nprint(\"Sorted order is : \", end=\" \")\npigeonhole_sort(a)\nfor i in range(0, len(a)):\n    print(a[i], end=\" \")\n\n\n\n"},{"question":" write a python function to make permutations from a list with given length\n","solution":"def get_permutations(data_list, l=2):\n    return list(permutations(data_list, r=l))\n\n\n"},{"question":" write a python program for basic HTML parser\n","solution":"from html.parser import HTMLParser\n\n\nclass MyHTMLParser(HTMLParser):\n    def handle_starttag(self, tag, attrs):\n        print(tag)\n        for attr in attrs:\n            print(\"->\", attr[0], \">\", attr[1])\n\n\nparser = MyHTMLParser()\n\nfor i in range(int(input())):\n    parser.feed(input())\n\n\n"},{"question":"write a function to compress a given string. Suppose a character 'c' occurs consecutively X times in the string. Replace these consecutive occurrences of the character 'c' with  (X, c) in the string.\n","solution":"def compress(text):\n    from itertools import groupby\n    for k, g in groupby(text):\n        print(\"({}, {})\".format(len(list(g)), k), end=\" \")\n\n\n"},{"question":" write a python function to find all the substrings of given string that contains 2 or more vowels. Also, these substrings must lie in between 2 consonants and should contain vowels only.\n","solution":"def find_substr():\n    import re\n    v = \"aeiou\"\n    c = \"qwrtypsdfghjklzxcvbnm\"\n    m = re.findall(r\"(?<=[%s])([%s]{2,})[%s]\" % (c, v, c), input(), flags=re.I)\n    print('\\n'.join(m or ['-1']))\n\n\n"},{"question":" write a python function to check external IP address\n","solution":"def check_ip():\n    import re\n    import urllib.request as ur\n    url = \"http:\/\/checkip.dyndns.org\"\n    with ur.urlopen(url) as u:\n        s = str(u.read())\n        ip = re.findall(r\"\\d{1,3}.\\d{1,3}.\\d{1,3}.\\d{1,3}\", s)\n        print(\"IP Address: \", ip[0])\n        return ip[0]\n\n\n"},{"question":" write a python program to Encrypt and Decrypt features within 'Secure' class with key generation, using cryptography module\n","solution":"class Secure:\n    def __init__(self):\n        \"\"\"\n           Generates a key and save it into a file\n        \"\"\"\n        key = Fernet.generate_key()\n        with open(\"secret.key\", \"wb\") as key_file:\n            key_file.write(key)\n\n    @staticmethod\n    def load_key():\n        \"\"\"\n        Load the previously generated key\n        \"\"\"\n        return open(\"secret.key\", \"rb\").read()\n\n    def encrypt_message(self, message):\n        \"\"\"\n        Encrypts a message\n        \"\"\"\n        key = self.load_key()\n        encoded_message = message.encode()\n        f = Fernet(key)\n        encrypted_message = f.encrypt(encoded_message)\n        print(\"\\nMessage has been encrypted: \", encrypted_message)\n        return encrypted_message\n\n    def decrypt_message(self, encrypted_message):\n        \"\"\"\n        Decrypts an encrypted message\n        \"\"\"\n        key = self.load_key()\n        f = Fernet(key)\n        decrypted_message = f.decrypt(encrypted_message)\n        print(\"\\nDecrypted message:\", decrypted_message.decode())\n\n\ns = Secure()\nencrypted = s.encrypt_message(\"My deepest secret!\")\ns.decrypt_message(encrypted)\n\n\n"},{"question":" write a python function to get stock prices for a company from 2015 to 2020-12\n","solution":"def get_stock_prices(tickerSymbol='TSLA'):\n    import yfinance as yf\n\n    # get data on this ticker\n    tickerData = yf.Ticker(tickerSymbol)\n\n    # get the historical prices for this ticker\n    tickerDf = tickerData.history(period='1d', start='2015-1-1', end='2020-12-20')\n\n    # see your data\n    print(tickerDf)\n\n\n"},{"question":" write a python function to get prominent words from user test corpus using TFIDF vectorizer\n","solution":"def get_words(corpus, new_doc, top=2):\n    import numpy as np\n    from sklearn.feature_extraction.text import TfidfVectorizer\n\n    tfidf = TfidfVectorizer(stop_words='english')\n    if not corpus:\n        corpus = [\n            'I would like to check this document',\n            'How about one more document',\n            'Aim is to capture the key words from the corpus',\n            'frequency of words in a document is called term frequency'\n        ]\n\n    X = tfidf.fit_transform(corpus)\n    feature_names = np.array(tfidf.get_feature_names())\n\n    if not new_doc:\n        new_doc = ['can key words in this new document be identified?',\n                   'idf is the inverse document frequency calculated for each of the words']\n    responses = tfidf.transform(new_doc)\n\n    def get_top_tf_idf_words(response, top_n=top):\n        sorted_nzs = np.argsort(response.data)[:-(top_n + 1):-1]\n        return feature_names[response.indices[sorted_nzs]]\n\n    print([get_top_tf_idf_words(response, 2) for response in responses])\n\n\n"},{"question":" Write a python program to Implement Counting sort and print the sorted list for the below list\n","solution":"\ndef counting_sort(alist, largest):\n    c = [0]*(largest + 1)\n    for i in range(len(alist)):\n        c[alist[i]] = c[alist[i]] + 1\n \n    c[0] = c[0] - 1 \n    for i in range(1, largest + 1):\n        c[i] = c[i] + c[i - 1]\n \n    result = [None]*len(alist)\n \n    for x in reversed(alist):\n        result[c[x]] = x\n        c[x] = c[x] - 1\n \n    return result\n \n \nalist = [2, 3, 5, 6, 4, 5]\nk = max(alist)\nsorted_list = counting_sort(alist, k)\nprint('Sorted list: ', end='')\nprint(sorted_list)\n\n"},{"question":" Write a Python function to print the GSD of Two Numbers\n","solution":"\ndef gcd(a,b):\n    if(b==0):\n        return a\n    else:\n        return gcd(b,a%b)\n\n\n"},{"question":" Write a Python Program to Remove the nth Index Character from a Non-Empty String\n","solution":"\ndef remove(string, n):  \n      first = string[:n]   \n      last = string[n+1:]  \n      return first + last\n\n"},{"question":" Write a Python Program to Form a New String where the First Character and the Last Character have been Exchanged\n","solution":"\ndef change(string):\n      return string[-1:] + string[1:-1] + string[:1]\n\n"},{"question":" Write a Python Program to Remove and print the Duplicate Items from a List\n","solution":"\na=[2, 3, 8, 9, 2, 4, 6]\nb = set()\nunique = []\nfor x in a:\n    if x not in b:\n        unique.append(x)\n        b.add(x)\nprint(\"Non-duplicate items:\")\nprint(unique)\n\n"},{"question":" Write a Python Program to test and print Collatz Conjecture for a Given Number\n","solution":"\ndef collatz(n):\n    while n > 1:\n        print(n, end=' ')\n        if (n % 2):\n            # n is odd\n            n = 3*n + 1\n        else:\n            # n is even\n            n = n\/\/2\n    print(1, end='')\n\n"},{"question":" Write a Python function to Count Set Bits in a Number\n","solution":"\ndef count_set_bits(n):\n    count = 0\n    while n:\n        n &= n - 1\n        count += 1\n    return count\n\n"},{"question":" Write a Python Program to Convert Binary to Gray Code\n","solution":"\ndef binary_to_gray(n):\n    \"\"\"Convert Binary to Gray codeword and return it.\"\"\"\n    n = int(n, 2)\n    n ^= (n >> 1)\n\n    return bin(n)[2:]\n\n"},{"question":" Write a Python function that calculate area of a equilateral polygon\n","solution":"\nimport math\ndef area(no_of_sides, circumradius):\n    side_length = 2 * circumradius * math.sin(math.pi \/ no_of_sides)\n    apothem = circumradius * math.cos(math.pi \/ no_of_sides)\n    return no_of_sides \/ 2 * side_length * apothem\n\n"},{"question":" Write a python program to reverse a string\n","solution":"s = \"i like this program very much\"\nwords = s.split(' ')\nstring =[]\nfor word in words:\n    string.insert(0, word)\n \nprint(\"Reversed String:\")\nprint(\" \".join(string))\n\n\n\n"},{"question":" Write a Python program to Multiply two list and print the resultant list\n","solution":"test_list1 = [1, 3, 4, 6, 8] \ntest_list2 = [4, 5, 6, 2, 10] \nres_list = [] \nfor i in range(0, len(test_list1)): \n    res_list.append(test_list1[i] * test_list2[i])\t\nprint (\"Resultant list is : \" + str(res_list)) \t\n\n\n\n\n"},{"question":" Write a python function to extract even length words in String\n","solution":"def findevenlenthwords(test_str):\n\tres = [] \n\tfor ele in test_str.split(): \n\t\tif len(ele) % 2 == 0: \n\t\t\tres.append(ele)  \n\treturn res\n\t\n\t\n\t\n"},{"question":" Write a python program to print Words lengths in String\t\n","solution":"test_string = \"India is my country\"\nres = list(map(len, test_string.split())) \nprint (\"The list of words lengths is : \" + str(res)) \n\n\n\n"},{"question":" write a Python Program to Check Whether a String is Palindrome or Not\n","solution":"my_str = 'aIbohPhoBiA'\nmy_str = my_str.casefold()\nrev_str = reversed(my_str)\nif list(my_str) == list(rev_str):\n   print(\"The string is a palindrome.\")\nelse:\n   print(\"The string is not a palindrome.\")\n   \n   \n   \n   \n"},{"question":" Write a python program to print the Sum of digits of a number\n","solution":"n = 12345\nq = 0\nwhile(n>0):\n r=n%10\n q=q+r\n n=n\/\/10\nprint(\"Sum of digits is: \"+str(q))\t\n\n\n\n"},{"question":" write a Python function to convert Gray code to binary \n","solution":"def gray_to_binary(n):\n    n = int(n, 2) # convert to int\n    mask = n\n    while mask != 0:\n        mask >>= 1\n        n ^= mask\n    return bin(n)[2:]\n\t\n\t\n\t\n"},{"question":" write a python function to Check if a Substring is Present in a Given String\n","solution":"def checksubstring(string,sub_string):\n\tif(string.find(sub_str)==-1):\n      return False\n\telse:\n\t\treturn True\n\t\t\n\t\t\n\t\t\n"},{"question":" Write a Python Program to Search the Number of Times a Particular Number Occurs in a List\t\t\n","solution":"a = [2,3,2,3,4,4,5,5,6,6,6]\nk=0\nnum=6\nfor j in a:\n    if(j==num):\n        k=k+1\nprint(\"Number of times\",num,\"appears is\",k)\n\n\n\n"},{"question":" write Python function to Clear the Rightmost Set Bit of a Number\n","solution":"def clear_rightmost_set_bit(n):\n    return n & (n - 1)\n\t\n\t\n\t\n"},{"question":" Write a Python function to \n","solution":"def binary_palindrome(n):\n\ts=int(bin(n)[2:])\n\tr=str(s)[::-1]\n\tif int(r)==s:\n\t    return \"The binary representation of the number is a palindrome.\"\n\telse:\n\t    return \"The binary representation of the number is NOT a palindrome.\"\n\n\n"},{"question":" Write a Python function to find the intersection of two arrays\n","solution":"def array_intersection(A,B):\n\tinter=list(set(A)&set(B))\n\treturn inter\n\n\n"},{"question":" Write a Python program to print rank of an array\/ matrix\n","solution":"import numpy as np\nA = np.array([[4,5,8], [7,1,4], [5,5,5], [2,3,6]])\nprint(\"Rank of the matrix A: \", np.linalg.matrix_rank(A))\n\n\n"},{"question":" Write a Python program to print euclidean distance between two array\/ vectors\n","solution":"import numpy as np\na = np.array([78, 84, 87, 91, 76])\nb = np.array([92, 83, 91, 79, 89])\ndist = np.linalg.norm(a-b)\nprint('Differnce in performance between A and B : ', dist)\n\n\n"},{"question":" Write a Python program to find the total number of letters and digits in a given string\n","solution":"str1='TestStringwith123456789'\nno_of_letters, no_of_digits = 0,0\nfor c in str1:\n  no_of_letters += c.isalpha()\n  no_of_digits += c.isnumeric()\n\nprint(no_of_letters)\nprint(no_of_digits)\n\n\n"},{"question":" Write a Python function to count occurrence of a word in the given text\n","solution":"def text_searcher(text, word):\n    count = 0\n    for w in text.split():\n        if w == word:\n            count = count + 1\n    return count\n\n\n"},{"question":" Write a Python function to check all elements of a list are the same or not\n","solution":"def check_equal(a):\n  return a[1:] == a[:-1]\n\n\n"},{"question":" Write a Python function that returns the integer obtained by reversing the digits of the given integer\n","solution":"def reverse(n):\n    s=str(n) \n    p=s[::-1]\n    return p \n\n\n"},{"question":" Write a Python program to return a set of all elements in either A or B, but not both\n","solution":"set1 = {10, 20, 30, 40, 50}\nset2 = {30, 40, 50, 60, 70}\nprint(set1.symmetric_difference(set2))\n\n\n"},{"question":" Write a program that will determine the object type\n","solution":"\ndef typeIdentifier(object):\n  return f'object type : {type(object)}'\n\n"},{"question":" Write a function to reverse a string\n","solution":"\ndef revStr(inp):\n  inp = inp[::-1]\n  return inp\n\n"},{"question":" Write a function to determine whether a given number is even or odd recursively\n","solution":"\ndef check(n):\n    if (n < 2):\n        return (n % 2 == 0)\n    return (check(n - 2))\nn=int(input(\"Enter number:\"))\nif(check(n)==True):\n      print(\"Number is even!\")\nelse:\n      print(\"Number is odd!\")\n\n\n"},{"question":" Write a function, which will find all such numbers between 1000 to 9999 that each digit of the number is an even number.\n","solution":"\nvalues = []\nfor i in range(1000, 9999):\n  s = str(i)\n  if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):\n      values.append(s)\n\n\n"},{"question":" Write a function to Check whether following json is valid or invalid\n","solution":"import json\ndef validateJSON(jsonData):\n    try:\n        json.loads(jsonData)\n    except ValueError as err:\n        return False\n    return True\n\n"},{"question":" Write a function to count the number of carry operations for each of a set of addition problems\n","solution":"def carry_number(x, y):\n  ctr = 0\n  if(x == 0 and y == 0):\n    return 0\n  z = 0  \n  for i in reversed(range(10)):\n      z = x%10 + y%10 + z\n      if z > 9:\n        z = 1\n      else:\n        z = 0\n      ctr += z\n      x \/\/= 10\n      y \/\/= 10\n  if ctr == 0:\n    return \"No carry operation.\"\n  elif ctr == 1:\n    return ctr\n  else:\n    return ctr\n\n"},{"question":" Write a Python program to find the second largest number in a list.\n","solution":"def second_largest(numbers):\ncount = 0\nn1 = n2 = float('-inf')\nfor x in numbers:\ncount += 1\nif x > n2:\nif x >= n1:\nn1, n2 = x, n1\nelse:\nn2 = x\nreturn n2 if count >= 2 else None\n\nprint(second_largest([1, 2, -8, -2, 0]))\n\n"},{"question":" Write a Python program to count and display the vowels of a given text\n","solution":"\ndef vowel(text):\nvowels = \"aeiuoAEIOU\"\nprint(len([letter for letter in text if letter in vowels]))\nprint([letter for letter in text if letter in vowels])\nvowel('zekelabs')\n\n"},{"question":" Write a Python program to match key values in two dictionaries.\n","solution":"x = {'key1': 1, 'key2': 3, 'key3': 2}\ny = {'key1': 1, 'key2': 2}\nfor (key, value) in set(x.items()) & set(y.items()):\nprint('%s: %s is present in both x and y' % (key, value))\n\n"},{"question":" Write a Python function to sum all the numbers in a list\n","solution":"def sum(numbers):\ntotal = 0\nfor x in numbers:\ntotal += x\nreturn total\nprint(sum((8, 2, 3, 0, 7)))\n\n"},{"question":" Write a Python function that accepts a string and calculate the number of upper case letters and lower case letters\n","solution":"def string_test(s):\nd={\"UPPER_CASE\":0, \"LOWER_CASE\":0}\nfor c in s:\nif c.isupper():\nd[\"UPPER_CASE\"]+=1\nelif c.islower():\nd[\"LOWER_CASE\"]+=1\nelse:\npass\nprint (\"Original String : \", s)\nprint (\"No. of Upper case characters : \", d[\"UPPER_CASE\"])\nprint (\"No. of Lower case Characters : \", d[\"LOWER_CASE\"])\n\nstring_test('The quick Brow Fox')\n\n"},{"question":" Write a python program to Count Numbers, Alphabets, and Special Character\n","solution":"Text = input (\"Enter Text: \")\nletter, number, spaces , special = 0,0,0,0\nfor i in Text:\nif i.isalpha():\nletter+=1\nelif i.isspace():\nspaces +=1\nelif i.isnumeric():\nnumber +=1\nelse:\nspecial+=1\nprint(\" Alphabets = {} \\n Numbers = {} \\n Space = {} \\n Special Chracter = {}\".format(letter,number,spaces,special))\n\n"},{"question":" Write a python program to return dict with {student:highest score} USING MAP+LAMBDA\n","solution":"midterms = [80, 91, 78]\nfinals = [98, 89, 53]\nstudents = ['dan', 'ang', 'kate']\nfinal_grades = dict(zip(students,map(lambda pair: max(pair),zip(midterms, finals))))\n\n"},{"question":" write a python program to print the last 3 items in a list\n","solution":"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(my_list[-3:])\n\n"},{"question":" write a python function to accept user input to continue\n","solution":"def get_userinput():\n    while(1):\n        do_continue = raw_input('Do you want to continue(y\/n)?')\n        if do_continue == 'y' or do_continue == 'n':\n            return do_continue\n\n\n"},{"question":" write a python program to create a raw string\n","solution":"str1 = r'hello\\n'\n\n"},{"question":" write a python program to print a set of all elements in either set1 or set2, but not both\n","solution":"set1 = {10, 20, 30, 40, 50}\nset2 = {30, 40, 50, 60, 70}\nprint(set1.symmetric_difference(set2))\n\n"},{"question":" write python function to detect if a number is even number\n","solution":"def is_even(num):\n    return((num % 2) == 0)\n\n"},{"question":" write python function to detect if an year is leap year\n","solution":"def is_leap_year(year):\n    if (year % 4) == 0:\n        if (year % 100) == 0:\n            if (year % 400) == 0:\n                return True \n            else:\n                return False\n        else:\n            return True \n    else:\n        return False \n\n"},{"question":" write a python program to print transpose a matrix and print\n","solution":"X = [[12,7],\n    [4 ,5],\n    [3 ,8]]\n\nresult = [[0,0,0],\n         [0,0,0]]\n\nfor i in range(len(X)):\n   for j in range(len(X[0])):\n       result[j][i] = X[i][j]\n\nfor r in result:\n   print(r)\n\n\n"},{"question":" Write a Python program to check a triangle is equilateral, isosceles or scalene.# Note :# An equilateral triangle is a triangle in which all three sides are equal.# A scalene triangle is a triangle that has three unequal sides.# An isosceles triangle is a triangle with (at least) two equal sides.\n","solution":"\nprint(\"Input lengths of the triangle sides: \")\nx = int(input(\"x: \"))\ny = int(input(\"y: \"))\nz = int(input(\"z: \"))\nif x == y == z:\n print(\"Equilateral triangle\")\nelif x != y != z:\n print(\"Scalene triangle\")\nelse:\n print(\"isosceles triangle\")\n\n"},{"question":" Write a Python program to print the frequency of the elements in a list.Example:# input# my_list = [10,10,10,10,20,20,20,20,40,40,50,50,30]# output# {10: 4, 20: 4, 40: 2, 50: 2, 30: 1}\n","solution":"import collections\nmy_list = [10,10,10,10,20,20,20,20,40,40,50,50,30]\nprint(\"Original List : \",my_list)\nctr = collections.Counter(my_list)\nprint(\"Frequency of the elements in the List : \",ctr)\n\n"},{"question":" Write a Python function to return the second smallest number in a list and print it.Example:# input# second_smallest([1, 2, -8, -2, 0])# output# -2\n","solution":"\ndef second_smallest(numbers):\n    a1, a2 = float('inf'), float('inf')\n    for x in numbers:\n        if x <= a1:\n            a1, a2 = x, a1\n        elif x < a2:\n            a2 = x\n    return a2\nprint(second_smallest([1, 2, -8, -2, 0]))\n\n"},{"question":" Write a python program to determine the percentage of lowercase and uppercase letters in a string.\n","solution":"string = input()\n\nlength = len(string)\n\nlower = upper = 0\n\nfor i in string:\n    if i.islower():\n        lower += 1\n    elif i.isupper():\n        upper += 1\n\nper_lower = lower \/ length * 100\nper_upper = upper \/ length * 100\nprint(\"Lower: %.2f%%\" % per_lower)\nprint(\"Upper: %.2f%%\" % per_upper)\n\n"},{"question":" Write a python program to find whether a given number is perfect or not and print the result in boolean format(True or False)\n","solution":"x = int(input(\"Enter any no. \")) \n\ndef perfect_number(n): \n    sum = 0 \n    for x in range(1, n): \n        if n % x == 0: \n            sum += x \n    return sum == n\n\nprint(perfect_number(x))\n\n"},{"question":" Write a python program to find and print the longest word in a sentence\n","solution":"\nstring = \"python java c c++ javascript pascal php\"\n\nprint(string)\n\nwords = string.split()\n\nid_longest = 0\n\nfor i in range(1, len(words)):\n    if len(words[id_longest]) < len(words[i]):\n        id_longest = i\n\nprint(words[id_longest])\n\n"},{"question":" Write a python program to print a given string without spaces\n","solution":"\ns = \"I love India   now I will be printed without any space\"\nfor i in s:\n    if i==' ': continue\n    print(i,end='')\n\n"},{"question":" write a list comprehension in python to get a list of even numbers when a range is given \n","solution":"N = 20\nnumber_list = [ x for x in range(N) if x % 2 == 0]\nprint(f'List of Even Numbers:', number_list)\n\n\n"},{"question":" write a python function for binary search\n","solution":"\ndef binary_search(arr, low, high, x): \n    if high >= low: \n  \n        mid = (high + low) \/\/ 2\n        if arr[mid] == x: \n            return mid \n        elif arr[mid] > x: \n            return binary_search(arr, low, mid - 1, x) \n\n        else: \n            return binary_search(arr, mid + 1, high, x) \n    else: \n        return -1\n \n"},{"question":" write a python program to do selection sort\n","solution":"\nA = [64, 25, 12, 22, 11] \n\nfor i in range(len(A)): \n\n    min_idx = i \n    for j in range(i+1, len(A)): \n        if A[min_idx] > A[j]: \n            min_idx = j \n      \n    A[i], A[min_idx] = A[min_idx], A[i] \n\nprint (\"Sorted array\") \nfor i in range(len(A)): \n    print(\"%d\" %A[i])\n    \n"},{"question":" write a python function to linearly search an array for a given number and return its index else return -1\n","solution":"\ndef search(arr, n, x): \n    for i in range(0, n): \n        if (arr[i] == x): \n            return i \n    return -1\n  \n  \n"},{"question":" write a python function to convert a number from decimal to octal\n","solution":" \n def decToOctal(n):\n    octalNum = [0] * 100\n    i = 0\n    while (n != 0):\n        octalNum[i] = n % 8\n        n = int(n \/ 8)\n        i += 1\n    for j in range(i - 1, -1, -1):\n        print(octalNum[j], end=\"\")\n      \n"},{"question":" write a python program to get indexes starting at a specified number for each element in a list using enumerate\n","solution":"  \n  l1 = [\"eat\",\"sleep\",\"repeat\"] \n  for count,ele in enumerate(l1,100): \n      print (count,ele )\n      \n"},{"question":" write a python function to find the nth catalan number\n","solution":"\ndef catalan(n): \n    if n <= 1: \n        return 1\n    res = 0\n    for i in range(n): \n        res += catalan(i) * catalan(n-i-1) \n    return res \n\n"},{"question":" write a python program to convert hexadecimal to decimal\n","solution":" \n def hexadecimalToDecimal(hexval): \n    length = len(hexval) \n    base = 1\n    dec_val = 0\n    for i in range(length - 1, -1, -1):  \n        if hexval[i] >= '0' and hexval[i] <= '9': \n            dec_val += (ord(hexval[i]) - 48) * base \n            base = base * 16\n        elif hexval[i] >= 'A' and hexval[i] <= 'F': \n            dec_val += (ord(hexval[i]) - 55) * base \n            base = base * 16\n    return dec_val\n \n"},{"question":" write a python function to check if a given string is a palindrome\n","solution":"def is_palindrome(string):\n   return string == string[::-1]\n\n\n"},{"question":" write a python program to print the ASCII value of a character\n","solution":"character = 'x'\nprint(f'The ASCII value of {character} is {ord(character)}')\n\n\n"},{"question":" write a python program to flip a coin 100 times and print number of heads and tails\n","solution":"import random\nheads = 0\ntails = 0\nfor i in range(100):\n   if(random.choice([True, False])):\n      heads += 1\n   else:\n      tails += 1\nprint(f'{heads} heads, {tails} tails')\n\n\n"},{"question":" write a python program to print the number of uppercase and lowercase letters in a string\n","solution":"sentence = 'The Quick Brown Fox'\nlowercase = 0\nuppercase = 0\nfor c in sentence:\n   if c.isupper():\n      uppercase += 1\n   elif c.islower():\n      lowercase += 1\n   else:\n      pass\nprint(f'Lowercase: {lowercase}, Uppercase: {uppercase}')\n\n\n"},{"question":" write a python function that takes two strings as a parameter and prints the shorter one\n","solution":"def print_shorter(str1, str2):\n   if (len(str1) > len(str2)):\n      print(str2)\n   else:\n      print(str1)\n\n\n"},{"question":" write a program to compute the count of each word in a sentence and print it\n","solution":"word_freq = {}\nline = 'how many how words does this many have'\nfor word in line.split():\n   word_freq[word] = word_freq.get(word, 0) + 1\nprint(word_freq)\n\n\n"},{"question":" write a python program that alphabetically sorts the words in a sentence and prints it\n","solution":"sentence = 'the quick brown fox jumps'\nsorted_words = sentence.split(' ')\nsorted_words.sort()\nprint(' '.join(sorted_words))\n\n\n"},{"question":" write a python program that removes all blank spaces in a sentence and prints it\n","solution":"sentence = 'the quick brown fox'\nprint(sentence.replace(' ', ''))\n\n\n"},{"question":" write a python program that prints every third character in a sentence\n","solution":"sentence = 'the quick brown fox'\nprint(sentence[::3])\n\n\n"},{"question":" write a program that subtracts corresponding elements in two lists and prints a new list\n","solution":"list1 = [1, 2, 3, 4, 5]\nlist2 = [5, 4, 3, 2, 1]\ndiff_list = [a-b for (a,b) in zip(list1, list2)]\nprint(diff_list)\n\n\n"},{"question":" write a python program to print the last 3 items in a list\n","solution":"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\nprint(my_list[-3:])\n\n\n"},{"question":" write a python program that prints the area of a square\n","solution":"side = 5\nprint(f'Area: {side * side}')\n\n\n"},{"question":" write a python program to keep words less than a specified length in a sentence\n","solution":"sentence = 'this is my sentence and i will write it my way'\nmaxlength = 3\nresult = [word for word in sentence.split(' ') if len(word) <= minlength]\n\n"},{"question":"3 add 1 to all elements in list python\n","solution":"lst = [1,2,3]\nlist(map(lambda x:x+1, lst))\n\n"},{"question":"17 split list into lists of equal length python\n","solution":"[lst[i:i + n] for i in range(0, len(lst), n)]\n\n"},{"question":"22 how to check if string is in byte formate pythin\n","solution":"isinstance(string, bytes)\n\n"},{"question":"26 write a python function to convert from base 2 to base 10 in pythonpython by TheRubberDucky on Nov 06 2020 Donate\n","solution":"def getBaseTen(binaryVal):\n    count = 0\n\n    binaryVal = binaryVal[::-1]\n\n\tfor i in range(0, len(binaryVal)):\n    \tif(binaryVal[i] == \"1\"):\n            count += 2**i\n    \n    return count\n\n"},{"question":"30 get rid of all null values in array python\n","solution":"mylist = [1, 2, 3, '', 4]\nmylist = [i for i in mylist if i]\n\n"},{"question":"32 print current version of python\n","solution":"import sys\nprint(sys.version)\n\n"},{"question":"39 how to remove integer from string in python\n","solution":"s = '12abcd405'\nresult = ''.join([i for i in s if not i.isdigit()])\n\n"},{"question":"46 write Python Function to print leaders in array  \n","solution":"def printLeaders(arr,size):\n         \n    for i in range(0, size):\n        for j in range(i+1, size):\n            if arr[i]<arr[j]:\n                break\n        if j == size-1:  \n            print(arr[i])\n\narr=[16, 17, 4, 3, 5, 2] \nprintLeaders(arr, len(arr))\n\n"},{"question":"49 write a python funvtion to print the merge sort algorithm in python\n","solution":"def mergeSort(myList):\n    if len(myList) > 1:\n        mid = len(myList) \/\/ 2\n        left = myList[:mid]\n        right = myList[mid:]\n\n        # Recursive call on each half\n        mergeSort(left)\n        mergeSort(right)\n\n        # Two iterators for traversing the two halves\n        i = 0\n        j = 0\n        \n        # Iterator for the main list\n        k = 0\n        \n        while i < len(left) and j < len(right):\n            if left[i] < right[j]:\n              # The value from the left half has been used\n              myList[k] = left[i]\n              # Move the iterator forward\n              i += 1\n            else:\n                myList[k] = right[j]\n                j += 1\n            # Move to the next slot\n            k += 1\n\n        # For all the remaining values\n        while i < len(left):\n            myList[k] = left[i]\n            i += 1\n            k += 1\n\n        while j < len(right):\n            myList[k]=right[j]\n            j += 1\n            k += 1\n\nmyList = [54,26,93,17,77,31,44,55,20]\nmergeSort(myList)\n\n"},{"question":"63 Python Challenges: Check a sequence of numbers is a geometric progression or not\n","solution":"def is_geometric(li):\n    if len(li) <= 1:\n        return True\n    # Calculate ratio\n    ratio = li[1]\/float(li[0])\n    # Check the ratio of the remaining\n    for i in range(1, len(li)):\n        if li[i]\/float(li[i-1]) != ratio: \n            return False\n    return True \n\n"},{"question":"72 Write a Python function to create a new array such that each element at index i of the new array is the product of all the numbers of a given array of integers except the one at i.\n","solution":"def product(nums):\n    new_nums = []\n\n    for i in nums:\n        nums_product = 1\n\n        for j in nums:     \n            if j != i:\n                nums_product = nums_product * j\n        new_nums.append(nums_product)\n\n    return new_nums\n\n"},{"question":"73 Write a python function to find the difference between the sum of the squares of the first two hundred natural numbers and the square of the sum.\n","solution":"r = range(1, 201)\na = sum(r)\nprint (a * a - sum(i*i for i in r))\n\n"},{"question":"75 Write a Python program to compute the sum of all the multiples of 3 or 5 below 500.\n","solution":"n = 0\nfor i in range(1,500):\n     if not i % 5 or not i % 3:\n         n = n + i\nprint(n)\n\n"},{"question":"83 Write a Python program to move all spaces to the front of a given string in single traversal.\n","solution":"def moveSpaces(str1): \n    no_spaces = [char for char in str1 if char!=' ']   \n    space= len(str1) - len(no_spaces)\n    result = ' '*space    \n    return result + ''.join(no_spaces)\n\n"},{"question":"98 Write a Python program to multiply two integers without using the '*' operator in python.\n","solution":"def multiply(x, y):\n    if y < 0:\n        return -multiply(x, -y)\n    elif y == 0:\n        return 0\n    elif y == 1:\n        return x\n    else:\n        return x + multiply(x, y - 1)\n\n"},{"question":" write a function to find out the second maximum number in the given list\n","solution":"def find_second_maximum(lst):\n    max = float('-inf')\n    sec_max = float('-inf')\n\n    for elem in list:\n        if elem > max:\n            sec_max = max\n            max = elem\n        elif elem > sec_max:\n            sec_max = elem\n    return sec_max\n\n"},{"question":" Write a program which can map() to make a list whose elements are square of elements in [1,2,3,4,5,6,7,8,9,10].\n","solution":"li = [1,2,3,4,5,6,7,8,9,10]\nsquaredNumbers = map(lambda x: x**2, li)\nprint(squaredNumbers)\n\n"},{"question":" Please raise a RuntimeError exception.\n","solution":"raise RuntimeError('something wrong')\n\n"},{"question":" Write a function to compute 5\/0 and use try\/except to catch the exceptions.\n","solution":"def throws():\n    return 5\/0\n\ntry:\n    throws()\nexcept ZeroDivisionError:\n    print(\"division by zero!\")\nexcept Exception:\n    print('Caught an exception')\nfinally:\n    print('In finally block for cleanup')\n\n"},{"question":" Please write assert statements to verify that every number in the list [2,4,6,8] is even.\n","solution":"li = [2,4,6,8]\nfor i in li:\n    assert i%2==0\n\n"},{"question":" Please write a binary search function which searches an item in a sorted list. The function should return the index of element to be searched in the list.\n","solution":"import math\ndef bin_search(li, element):\n    bottom = 0\n    top = len(li)-1\n    index = -1\n    while top>=bottom and index==-1:\n        mid = int(math.floor((top+bottom)\/2.0))\n        if li[mid]==element:\n            index = mid\n        elif li[mid]>element:\n            top = mid-1\n        else:\n            bottom = mid+1\n\n    return index\n\n"},{"question":" Please write a program to randomly print a integer number between 7 and 15 inclusive.\n","solution":"import random\nprint(random.randrange(7,16))\n\n"},{"question":" Please write a program to shuffle and print the list [3,6,7,8].\n","solution":"from random import shuffle\nli = [3,6,7,8]\nshuffle(li)\nprint(li)\n\n"},{"question":" Please write a program to print the list after removing delete even numbers in [5,6,77,45,22,12,24].\n","solution":"li = [5,6,77,45,22,12,24]\nli = [x for x in li if x%2!=0]\nprint(li)\n\n"},{"question":" By using list comprehension, please write a program generate a 3*5*8 3D array whose each element is 0.\n","solution":"array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]\nprint(array)\n\n"},{"question":" Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5, between 2000 and 3200 (both included).\n","solution":""},{"question":" Q = Square root of [(2 * C * D)\/H]\n","solution":""},{"question":" Use a list comprehension to square each odd number in a list. The list is input by a sequence of comma-separated numbers.\n","solution":"values = input()\nnumbers = [x for x in values.split(\",\") if int(x)%2!=0]\nprint(\",\".join(numbers))\n\n\n"},{"question":" Write a function with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.\n","solution":"def putNumbers(n):\n    i = 0\n    while i<n:\n        j=i\n        i=i+1\n        if j%7==0:\n            yield j\n\nfor i in reverse(100):\n    print(i)\n\n"},{"question":" write a python function to check if all elements in a list are equal.\n","solution":"\ndef all_equal(lst):\n  return len(set(lst)) == 1\n\n"},{"question":" write a python function to convert hours to minutes\n","solution":"\ndef convert_to_minutes(num_hours):\n    minutes = num_hours * 60\n    return minutes\n\n"},{"question":" write a python function to remove vowels from a string\n","solution":"def vowel_remover(text):\n    string = \"\"\n    for l in text:\n        if l.lower() != \"a\" and l.lower() != \"e\" and l.lower() != \"i\" and l.lower() != \"o\" and l.lower() != \"u\":\n            string += l\n    return string\n\n"},{"question":" write a python function to print odd numbers between user provided ranges\n","solution":"\ndef odd_numbers(lower,upper):\n  for i in range(lower,upper+1):\n    if(i%2!=0):\n        print(i)\n\n"},{"question":" write a python program to check if the list is empty\n","solution":"\nl = []\nif not l:\n  print(\"List is empty\")\nelse:\n  print(\"List is not empty\")\n\n"},{"question":" write a python function that removes element from a list using a user provided number\n","solution":"\ndef drop(a, n = 1):\n  return a[n:]\n\n"},{"question":" write a python program to split the string into chunks of size 3\n","solution":"\nstr = 'CarBadBoxNumKeyValRayCppSan'\nn = 3\nchunks = [str[i:i+n] for i in range(0, len(str), n)]\nprint(chunks)\n\n"},{"question":" write a python function that returns a list of elements that exist in both user provided lists.\n","solution":"\ndef similarity(a, b):\n  return [item for item in a if item in b]\n\n"},{"question":" write a python program to count the number of lower case in a string\n","solution":"\nstring=\"This is a very good place to Visit\"\ncount=0\nfor i in string:\n      if(i.islower()):\n            count=count+1\nprint(f\"The number of lowercase characters is:{count}\")\n\n"},{"question":" write a python function to clamp a number within a user specified range\n","solution":"\ndef clamp_number(num, a, b):\n  return max(min(num, max(a, b)), min(a, b))\n\n"},{"question":" write a python function to implement odd-even sort\n","solution":"\ndef oddEvenSort(arr, n): \n\tisSorted = 0\n\twhile isSorted == 0: \n\t\tisSorted = 1\n\t\ttemp = 0\n\t\tfor i in range(1, n-1, 2): \n\t\t\tif arr[i] > arr[i+1]: \n\t\t\t\tarr[i], arr[i+1] = arr[i+1], arr[i] \n\t\t\t\tisSorted = 0\n\t\tfor i in range(0, n-1, 2): \n\t\t\tif arr[i] > arr[i+1]: \n\t\t\t\tarr[i], arr[i+1] = arr[i+1], arr[i] \n\t\t\t\tisSorted = 0\t\n\treturn\n\n"},{"question":" write a python program to drop microseconds from datetime.\n","solution":"\nimport datetime\ndt = datetime.datetime.today().replace(microsecond=0)\ndt\n\n"},{"question":" Python program to compute sum of digits in number\n","solution":"def sumDigits(no):  \n    return 0 if no == 0 else int(no % 10) + sumDigits(int(no \/ 10))   \nn = 1234511\nprint(sumDigits(n))\n\n"},{"question":" Concatenation of two List\n","solution":"my_list1 = [4,3,2,9,10,44,1]\nmy_list2 = [5,6,2,8,15,14,12]\nprint(f\"Sum of two list:,{my_list1+my_list2}\")\n\n"},{"question":"removes leading characters\n","solution":"word = \" xyz \"\nlstrip = word.lstrip()\nprint(f\"String ater removal of leading characters:{lstrip}\")\n\n"},{"question":" check if all char are alphanumeric\n","solution":"word = \"Hello World\"\ncheck = word.isalnum()\nprint(f\"All char are alphanumeric?:{check}\")\n\n"},{"question":" Test if string starts with H\n","solution":"word = \"Hello World\"\ncheck = word.startswith('H')\nprint(f\"String starts with H?:{check}\")\n\n"},{"question":" Writing JSON to a file\n","solution":"import json\nperson_dict = {\"name\": \"Bob\",\n\"languages\": [\"English\", \"Fench\"],\n\"married\": True,\n\"age\": 32\n}\nwith open('person.txt', 'w') as json_file:\n  json.dump(person_dict, json_file)\n\n"},{"question":"  Given a Python list. Turn every item of a list into its square\n","solution":"aList = [1, 2, 3, 4, 5, 6, 7]\naList =  [x * x for x in aList]\nprint(aList)\n\n"},{"question":" Given a string, return the sum and average of the digits that appear in the string, ignoring all other characters\n","solution":"import re\n\ninputStr = \"English = 78 Science = 83 Math = 68 History = 65\"\nmarkList = [int(num) for num in re.findall(r'\\b\\d+\\b', inputStr)]\ntotalMarks = 0\nfor mark in markList:\n  totalMarks+=mark\n\npercentage = totalMarks\/len(markList)  \nprint(\"Total Marks is:\", totalMarks, \"Percentage is \", percentage)\n\n"},{"question":" Convert decimal number to octal\n","solution":"print('%o,' % (8))\n\n"},{"question":"  Add week (7 days) and 12 hours to a given date\n","solution":"from datetime import datetime, timedelta\ngiven_date = datetime(2020, 3, 22, 10, 00, 00)\ndays_to_add = 7\nres_date = given_date + timedelta(days=days_to_add, hours=12)\nprint(res_date)\n\n"},{"question":" Generate a Python list of all the even numbers between two given numbers\n","solution":"num1 = 4\nnum2 = 30\nmyval = [i for i in range(num1, num2, 2)]\nprint(myval)\n\n"},{"question":" Find if all elements in a list are identical\n","solution":"listOne = [20, 20, 20, 20]\nprint(\"All element are duplicate in listOne:\", listOne.count(listOne[0]) == len(listOne))\n\n"},{"question":" Merge two dictionaries in a single expression\n","solution":"currentEmployee = {1: 'Scott', 2: \"Eric\", 3:\"Kelly\"}\nformerEmployee  = {2: 'Eric', 4: \"Emma\"}\nallEmployee = {**currentEmployee, **formerEmployee}\nprint(allEmployee)\n\n"},{"question":" 9 write a python function to update a dictionary with a new key, value pair\n","solution":"\n\ndef update_dictionary(dict, key, value):\n    dict[str(key)] = value\n    return dict\n\n\n"},{"question":" 10 write a python function to return the median of a list\n","solution":"\n\ndef calc_median(arr):\n    arr = sorted(arr)\n    if len(arr) \/ 2 == 0:\n        return arr[len(arr) \/ 2]\n    else:\n        return (arr[len(arr) \/\/ 2] + arr[(len(arr) - 1) \/\/ 2]) \/ 2\n\n\n"},{"question":" 14 write a function to perform insertion sort on an arary\n","solution":"\n\ndef sort_insertion(arr):\n    for i in range(1, len(arr)):\n        tmp = arr[i]\n\n        j = i\n        while (j > 0) & (tmp < arr[j - 1]):\n            arr[j] = arr[j - 1]\n            j = j - 1\n        arr[j] = tmp\n    return arr\n\n\n"},{"question":" 16 write a function to immplement insert in binary search tree\n","solution":"\n\nclass BinaryTreeNode:\n    def __init__(self, key):\n        self.left = None\n        self.right = None\n        self.val = key\n\n\nclass Tree:\n    def insert(self, root, key):\n        if root is None:\n            return BinaryTreeNode(key)\n        else:\n            if root.val == key:\n                return root\n            elif root.val < key:\n                root.right = self.insert(root.right, key)\n            else:\n                root.left = self.insert(root.left, key)\n\n        return root\n\n\n"},{"question":" 21 write a function that removes all the punctuations from a string\n","solution":"\n\nimport string\n\n\ndef remove_punct(s):\n    return \"\".join(ch for ch in s if ch not in set(string.punctuation))\n\n\n"},{"question":" 22 write a function that counts the sum of every element in the odd place in a list\n","solution":"\nfrom functools import reduce\n\n\ndef count_second(lst):\n    return reduce(lambda x, y: x + y, lst[::2])\n\n\n"},{"question":" 26 write a generator in python which returns a random number between 0 and a million\n","solution":"\nimport random\n\n\ndef yield_a_number():\n    yield random.randint(0, 1000000)\n\n\n"},{"question":" 30 write a function that accepts two numbers or lists or dictionaries and returns True if the two are equal, and False otherwise\n","solution":"\n\ndef check_assert(item1, item2):\n    try:\n        assert item1 == item2\n        return True\n    except AssertionError:\n        return False\n\n\n"},{"question":" 37 Write a python program to calculate the LCM and HCF of two given numbers\n","solution":"def hcf(x1, x2):\n    if x1 == 0:\n        return x2\n    else:\n        return hcf(x2 % x1, x1)\n\n\ndef lcm_hcf(x1, x2):\n    h_c_f = hcf(x1, x2)\n    lcm = x1 * x2 \/ h_c_f\n    return lcm, h_c_f\n\n\nl, h = lcm_hcf(18, 12)\n\nprint(f\"LCM : {l}, HCF: {h}\")\n"},{"question":" 38 write a python program which takes in a dictionary with unique values and converts keys into values and vice versa\n","solution":"\n\ndef flip_dict(d):\n    tmp_dict = {}\n    for pair in d.items():\n        tmp_dict[pair[1]] = pair[0]\n    return tmp_dict\n\n\nprint(flip_dict({\"a\": 10, \"b\": 20, \"c\": 15}))\n\n\n"},{"question":" 51 write a python program to perform Softmax operation on an input array\n","solution":"\nimport math\n\n\ndef softmax(arr):\n    e_arr = [math.exp(x) for x in arr]\n    e_soft = [i \/ sum(e_arr) for i in e_arr]\n    return e_soft\n\n\nprint(softmax([3.0, 1.0, 0.2]))\n\n\n"},{"question":" 53 write a python function which checks if a number is a perfect square\n","solution":"import math\n\n\ndef is_perfect_square(num):\n    sq_root = round(math.sqrt(num))\n    if num == sq_root ** 2:\n        return True\n    else:\n        return False\n\n\n"},{"question":" 70 write a program to randomly print a integer number between 7 and 15 inclusive.\n","solution":"import random\n\nprint(random.randrange(7, 16))\n\n"},{"question":" 85 write a program which count and print the numbers of each character in a string\n","solution":"dic = {}\ns = \"JRR Tolkien\"\nfor s in s:\n    dic[s] = dic.get(s, 0) + 1\nprint(\"\\n\".join([\"%s,%s\" % (k, v) for k, v in dic.items()]))\n\n"},{"question":" 90 Write a python function to round down a given decimal number\n","solution":"\nimport math\n\n\ndef apply_ceil(num):\n    return math.ceil(x)\n\n\n"},{"question":" 94 write a python function that takes in a decimal number and prints it's binary representation\n","solution":"\n\ndef dec2bin(num):\n    print(format(num, \"b\"))\n\n\n"},{"question":" write a python function to add two user provided numbers and return the sum\n","solution":"def add_two_numbers(num1, num2):    \n    sum = num1 + num2    \n    return sum\n\n"},{"question":" write a function to convert tuple to list\n","solution":"def convert_tuple2list(t):\n    return list(t)\n\n"},{"question":" write a function to convert list to tuple\n","solution":"def list2tuple(l):\n    return tuple(l)\n\n"},{"question":" write Function to right rotate n by d bits \n","solution":"def rightRotate(n, d): \n    INT_BITS = 32\n\n    return (n >> d)|(n << (INT_BITS - d)) & 0xFFFFFFFF\n\nn = 16\nd = 2\n\nprint(\"Right Rotation of\",n,\"by\",d,\"is\",end=\" \") \nprint(rightRotate(n, d)) \n\n"},{"question":" write Python program to demonstrate that we can access multidimensional list using square brackets \n","solution":"a = [ [2, 4, 6, 8 ], \n    [ 1, 3, 5, 7 ], \n    [ 8, 6, 4, 2 ], \n    [ 7, 5, 3, 1 ] ] \n\nfor i in range(len(a)) : \n    for j in range(len(a[i])) : \n        print(a[i][j], end=\" \") \n    print()\t \n\n"},{"question":" write Python code to demonstrate Kth Non-None String from Rear using filter() \n","solution":"\ntest_list = [\"\", \"\", \"Akshat\", \"Nikhil\"] \n\nprint(\"The original list : \" + str(test_list)) \n\nK = 2\n\nres = list (filter(None, test_list))[-K] \n\nprint(\"The Kth non empty string from rear is : \" + str(res)) \n\n"},{"question":" write a program Creating a Nested Dictionary as shown in the below image \n","solution":"Dict = {1: 'Geeks', 2: 'For', \n        3:{'A' : 'Welcome', 'B' : 'To', 'C' : 'Geeks'}} \n\nprint(Dict) \n\n\n\n"},{"question":" write a Python3 code to demonstrate working of Convert List of Dictionaries to List of Lists Using list comprehension \n","solution":"\ntest_list = [{'Nikhil' : 17, 'Akash' : 18, 'Akshat' : 20}, \n            {'Nikhil' : 21, 'Akash' : 30, 'Akshat' : 10}, \n            {'Nikhil' : 31, 'Akash' : 12, 'Akshat' : 19}] \n\nprint(\"The original list is : \" + str(test_list)) \n\nres = [[key for key in test_list[0].keys()], *[list(idx.values()) for idx in test_list ]] \n\nprint(\"The converted list : \" + str(res)) \n\n"},{"question":" write a Python3 code to demonstrate working of Extract dictionaries with values sum greater than K \n","solution":"\ntest_list = [{\"Gfg\" : 4, \"is\" : 8, \"best\" : 9}, \n            {\"Gfg\" : 5, \"is\": 8, \"best\" : 1}, \n            {\"Gfg\" : 3, \"is\": 7, \"best\" : 6}, \n            {\"Gfg\" : 3, \"is\": 7, \"best\" : 5}] \n\nprint(\"The original list : \" + str(test_list)) \n\nK = 15\n\nres = [] \nfor sub in test_list: \n    sum = 0\n    for key in sub: \n        sum += sub[key] \n    if sum > K: \n        res.append(sub) \n\nprint(\"Dictionaries with summation greater than K : \" + str(res)) \n\n"},{"question":" write Python3 code to demonstrate Combining tuples in list of tuples Using list comprehension \n","solution":"test_list = [([1, 2, 3], 'gfg'), ([5, 4, 3], 'cs')] \nprint(\"The original list : \" + str(test_list)) \nres = [ (tup1, tup2) for i, tup2 in test_list for tup1 in i ] \nprint(\"The list tuple combination : \" + str(res)) \n\n"},{"question":" write Python3 code to demonstrate conversion of list of tuple to list of list using list comprehension + join() \n","solution":"\ntest_list = [('G', 'E', 'E', 'K', 'S'), ('F', 'O', 'R'), \n                            ('G', 'E', 'E', 'K', 'S')] \nprint (\"The original list is : \" + str(test_list)) \nres = [''.join(i) for i in test_list] \nprint (\"The list after conversion to list of string : \" + str(res)) \n\n\n"},{"question":" write Python code to demonstrate to remove the tuples if certain criteria met \n","solution":"\nini_tuple = [('b', 100), ('c', 200), ('c', 45), \n                        ('d', 876), ('e', 75)] \n\nprint(\"intial_list\", str(ini_tuple))\nresult = [i for i in ini_tuple if i[1] <= 100] \nprint (\"Resultant tuple list: \", str(result)) \n\n\n"},{"question":" write Python code to demonstrate to remove the tuples if certain criteria met \n","solution":"ini_tuple = [('b', 100), ('c', 200), ('c', 45), \n                        ('d', 876), ('e', 75)] \nprint(\"intial_list\", str(ini_tuple)) \n\nresult = [] \nfor i in ini_tuple: \n    if i[1] <= 100: \n        result.append(i) \nprint (\"Resultant tuple list: \", str(result)) \n\n\n"},{"question":"Write a function to convert Kilometers to Miles\n","solution":"def Kilometers_to_Miles(km):\n    conv_fac = 0.621371\n    miles = km * conv_fac\n    return miles\n\n9. \n"},{"question":" Define a class which has at least two methods: getString: to get a string from console input\n","solution":"class InputOutString(object):\n    def __init__(self):\n        self.s = \"\"\n    def getString(self):\n        self.s = raw_input()\nstrObj = InputOutString()\nstrObj.getString()\n"},{"question":" Write a program, which will find all such numbers between 1000 and 3000 (both included) such that each digit of the number is an even number. The numbers obtained should be printed in a comma-separated sequence on a single line.\n","solution":"values = []\nfor i in range(1000, 3001):\n    s = str(i)\n    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):\n        values.append(s)\nprint \",\".join(values)\n\n"},{"question":" Write a function te return cube of a number\n","solution":"def cube(num):\n    return num ** 3\n\n"},{"question":" Define a function that can receive two integral numbers in string form and compute their sum and then print it in console.\n","solution":"def printValue(s1,s2):\n\tprint int(s1)+int(s2)\n\n"},{"question":" Define a function that can accept two strings as input and print the string with maximum length in console. If two strings have the same length, then the function should print al l strings line by line.\n","solution":"def printValue(s1,s2):\n\tlen1 = len(s1)\n\tlen2 = len(s2)\n\tif len1>len2:\n\t\tprint s1\n\telif len2>len1:\n\t\tprint s2\n\telse:\n\t\tprint s1\n\t\tprint s2\n\t\t\n"},{"question":" Define a class named American and its subclass NewYorker. \n","solution":"class American(object):\n    pass\nclass NewYorker(American):\n    pass\nanAmerican = American()\naNewYorker = NewYorker()\nprint anAmerican\nprint aNewYorker\n\n"},{"question":" Write a function to compute 5\/0 and use try\/except to catch the exceptions.\n","solution":"def throws():\n    return 5\/0\ntry:\n    throws()\nexcept ZeroDivisionError:\n    print \"division by zero!\"\nexcept Exception, err:\n    print 'Caught an exception'\nfinally:\n    print 'In finally block for cleanup'\n\n"},{"question":" Assuming that we have some email addresses in the \"username@companyname.com\" format, write program to print the company name of a given email address. Both user names and company names are composed of letters only.\n","solution":"import re\nemailAddress = raw_input()\npat2 = \"(\\w+)@(\\w+)\\.(com)\"\nr2 = re.match(pat2,emailAddress)\nprint r2.group(2)\n\n"},{"question":" Print a unicode string \"hello world\".\n","solution":"unicodeString = u\"hello world!\"\nprint unicodeString\n\n"},{"question":" write a program using generator to print the even numbers between 0 and n in comma separated form while n is input by console.\n","solution":"def EvenGenerator(n):\n    i=0\n    while i<=n:\n        if i%2==0:\n            yield i\n        i+=1\nn=int(raw_input())\nvalues = []\nfor i in EvenGenerator(n):\n    values.append(str(i))\nprint \",\".join(values)\n\n"},{"question":" generate a random float where the value is between 10 and 100 using Python math module.\n","solution":"import random\nprint random.random()*100\n\n"},{"question":" write a program to generate all sentences where subject is in [\"I\", \"You\"] and verb is in [\"Play\", \"Love\"] and the object is in [\"Hockey\",\"Football\"].\n","solution":"subjects=[\"I\", \"You\"]\nverbs=[\"Play\", \"Love\"]\nobjects=[\"Hockey\",\"Football\"]\nfor i in range(len(subjects)):\n    for j in range(len(verbs)):\n        for k in range(len(objects)):\n            sentence = \"%s %s %s.\" % (subjects[i], verbs[j], objects[k])\n            print sentence\n\n"},{"question":" By using list comprehension, write a program to print the list after removing the 0th, 2nd, 4th,6th numbers in [12,24,35,70,88,120,155].\n","solution":"li = [12,24,35,70,88,120,155]\nli = [x for (i,x) in enumerate(li) if i%2!=0]\nprint li\n\n"},{"question":" With two given lists [1,3,6,78,35,55] and [12,24,35,24,88,120,155], write a program to make a list whose elements are intersection of the above given lists.\n","solution":"set1=set([1,3,6,78,35,55])\nset2=set([12,24,35,24,88,120,155])\nset1 &= set2\nli=list(set1)\nprint li\n\n\n\n"},{"question":" write a program which accepts a string from console and print it in reverse order.\n","solution":"s=raw_input()\ns = s[::-1]\nprint s\n\n"},{"question":" write a program to count characters in a string\n","solution":"st = \"AmmarAdil\"\ncount = {}\nfor a in st:\n    if a in count:\n        count[a]+=1\n    else:\n        count[a] = 1\nprint('Count', count)\n\n\n"},{"question":" write program to convert string to lower case\n","solution":"st = \"AMMAR ADIL\"\n\nlower_st = st.lower()\nprint(\"Lower Case\", lower_st)\n\n\n"},{"question":" write a program to find log of a number\n","solution":"import math\n\nnum = 5\nbase = 7\n\nprint(\"Log_x_b\", math.log(num, base))\n\n\n"}]